// @generated by protoc-gen-es v1.8.0 with parameter "target=ts,import_extension=none"
// @generated from file vklink/libs/common/commands/create_document_command.proto (package vklink.common.commands, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3, StringValue } from "@bufbuild/protobuf";

/**
 * @generated from message vklink.common.commands.CreateDocumentCommand
 */
export class CreateDocumentCommand extends Message<CreateDocumentCommand> {
  /**
   * data fields: from 1 to 50
   *
   * id from object storage
   *
   * @generated from field: string id = 1;
   */
  id = "";

  /**
   * original file name
   *
   * @generated from field: string originalName = 2;
   */
  originalName = "";

  /**
   * @generated from field: string bucket = 3;
   */
  bucket = "";

  /**
   * file path
   *
   * @generated from field: string path = 4;
   */
  path = "";

  /**
   * new file name
   *
   * @generated from field: string name = 5;
   */
  name = "";

  /**
   * file size in bytes
   *
   * @generated from field: int32 size = 6;
   */
  size = 0;

  /**
   * @generated from field: string extension = 7;
   */
  extension = "";

  /**
   * mime type
   *
   * @generated from field: string mimeType = 8;
   */
  mimeType = "";

  /**
   * @generated from field: google.protobuf.StringValue title = 9;
   */
  title?: string;

  /**
   * @generated from field: google.protobuf.StringValue description = 10;
   */
  description?: string;

  /**
   * @generated from field: map<string, string> tags = 11;
   */
  tags: { [key: string]: string } = {};

  constructor(data?: PartialMessage<CreateDocumentCommand>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "vklink.common.commands.CreateDocumentCommand";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "originalName", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "bucket", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "path", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 6, name: "size", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 7, name: "extension", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 8, name: "mimeType", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 9, name: "title", kind: "message", T: StringValue },
    { no: 10, name: "description", kind: "message", T: StringValue },
    { no: 11, name: "tags", kind: "map", K: 9 /* ScalarType.STRING */, V: {kind: "scalar", T: 9 /* ScalarType.STRING */} },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CreateDocumentCommand {
    return new CreateDocumentCommand().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CreateDocumentCommand {
    return new CreateDocumentCommand().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CreateDocumentCommand {
    return new CreateDocumentCommand().fromJsonString(jsonString, options);
  }

  static equals(a: CreateDocumentCommand | PlainMessage<CreateDocumentCommand> | undefined, b: CreateDocumentCommand | PlainMessage<CreateDocumentCommand> | undefined): boolean {
    return proto3.util.equals(CreateDocumentCommand, a, b);
  }
}

