// @generated by protoc-gen-es v1.8.0 with parameter "target=ts,import_extension=none"
// @generated from file vklink/libs/data/params/sorting_params.proto (package vklink.data.params, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";
import { SortDirection } from "../../common/enums/sort_direction_pb";

/**
 * @generated from message vklink.data.params.SortingParams
 */
export class SortingParams extends Message<SortingParams> {
  /**
   * @generated from field: string field = 1;
   */
  field = "";

  /**
   * @generated from field: vklink.grpc.enums.SortDirection sort = 2;
   */
  sort = SortDirection.UNSPECIFIED;

  constructor(data?: PartialMessage<SortingParams>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "vklink.data.params.SortingParams";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "field", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "sort", kind: "enum", T: proto3.getEnumType(SortDirection) },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SortingParams {
    return new SortingParams().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SortingParams {
    return new SortingParams().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SortingParams {
    return new SortingParams().fromJsonString(jsonString, options);
  }

  static equals(a: SortingParams | PlainMessage<SortingParams> | undefined, b: SortingParams | PlainMessage<SortingParams> | undefined): boolean {
    return proto3.util.equals(SortingParams, a, b);
  }
}

