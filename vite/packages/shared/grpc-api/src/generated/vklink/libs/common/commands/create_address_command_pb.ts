// @generated by protoc-gen-es v1.8.0 with parameter "target=ts,import_extension=none"
// @generated from file vklink/libs/common/commands/create_address_command.proto (package vklink.common.commands, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3, StringValue } from "@bufbuild/protobuf";

/**
 * @generated from message vklink.common.commands.CreateAddressCommand
 */
export class CreateAddressCommand extends Message<CreateAddressCommand> {
  /**
   * data fields: from 1 to 50
   *
   * @generated from field: string provinceId = 2;
   */
  provinceId = "";

  /**
   * @generated from field: string provinceName = 3;
   */
  provinceName = "";

  /**
   * @generated from field: string provinceCode = 4;
   */
  provinceCode = "";

  /**
   * @generated from field: string districtId = 5;
   */
  districtId = "";

  /**
   * @generated from field: string districtName = 6;
   */
  districtName = "";

  /**
   * @generated from field: string districtCode = 7;
   */
  districtCode = "";

  /**
   * @generated from field: string wardId = 8;
   */
  wardId = "";

  /**
   * @generated from field: string wardName = 9;
   */
  wardName = "";

  /**
   * @generated from field: string wardCode = 10;
   */
  wardCode = "";

  /**
   * @generated from field: string addressLine1 = 11;
   */
  addressLine1 = "";

  /**
   * @generated from field: google.protobuf.StringValue addressLine2 = 12;
   */
  addressLine2?: string;

  constructor(data?: PartialMessage<CreateAddressCommand>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "vklink.common.commands.CreateAddressCommand";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 2, name: "provinceId", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "provinceName", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "provinceCode", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "districtId", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 6, name: "districtName", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 7, name: "districtCode", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 8, name: "wardId", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 9, name: "wardName", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 10, name: "wardCode", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 11, name: "addressLine1", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 12, name: "addressLine2", kind: "message", T: StringValue },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CreateAddressCommand {
    return new CreateAddressCommand().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CreateAddressCommand {
    return new CreateAddressCommand().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CreateAddressCommand {
    return new CreateAddressCommand().fromJsonString(jsonString, options);
  }

  static equals(a: CreateAddressCommand | PlainMessage<CreateAddressCommand> | undefined, b: CreateAddressCommand | PlainMessage<CreateAddressCommand> | undefined): boolean {
    return proto3.util.equals(CreateAddressCommand, a, b);
  }
}

