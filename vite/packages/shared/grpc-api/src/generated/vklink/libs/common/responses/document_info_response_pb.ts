// @generated by protoc-gen-es v1.8.0 with parameter "target=ts,import_extension=none"
// @generated from file vklink/libs/common/responses/document_info_response.proto (package vklink.common.responses, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Int32Value, Message, proto3 } from "@bufbuild/protobuf";

/**
 * @generated from message vklink.common.responses.DocumentInfoResponse
 */
export class DocumentInfoResponse extends Message<DocumentInfoResponse> {
  /**
   * @generated from field: string name = 2;
   */
  name = "";

  /**
   * @generated from field: string url = 3;
   */
  url = "";

  /**
   * @generated from field: google.protobuf.Int32Value order = 4;
   */
  order?: number;

  constructor(data?: PartialMessage<DocumentInfoResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "vklink.common.responses.DocumentInfoResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 2, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "url", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "order", kind: "message", T: Int32Value },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DocumentInfoResponse {
    return new DocumentInfoResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DocumentInfoResponse {
    return new DocumentInfoResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DocumentInfoResponse {
    return new DocumentInfoResponse().fromJsonString(jsonString, options);
  }

  static equals(a: DocumentInfoResponse | PlainMessage<DocumentInfoResponse> | undefined, b: DocumentInfoResponse | PlainMessage<DocumentInfoResponse> | undefined): boolean {
    return proto3.util.equals(DocumentInfoResponse, a, b);
  }
}

