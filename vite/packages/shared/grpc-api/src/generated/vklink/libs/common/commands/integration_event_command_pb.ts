// @generated by protoc-gen-es v1.8.0 with parameter "target=ts,import_extension=none"
// @generated from file vklink/libs/common/commands/integration_event_command.proto (package vklink.common.commands, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3, Timestamp } from "@bufbuild/protobuf";

/**
 * @generated from message vklink.common.commands.IntegrationEventCommand
 */
export class IntegrationEventCommand extends Message<IntegrationEventCommand> {
  /**
   * @generated from field: string id = 1;
   */
  id = "";

  /**
   * @generated from field: google.protobuf.Timestamp createdAt = 2;
   */
  createdAt?: Timestamp;

  constructor(data?: PartialMessage<IntegrationEventCommand>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "vklink.common.commands.IntegrationEventCommand";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "createdAt", kind: "message", T: Timestamp },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): IntegrationEventCommand {
    return new IntegrationEventCommand().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): IntegrationEventCommand {
    return new IntegrationEventCommand().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): IntegrationEventCommand {
    return new IntegrationEventCommand().fromJsonString(jsonString, options);
  }

  static equals(a: IntegrationEventCommand | PlainMessage<IntegrationEventCommand> | undefined, b: IntegrationEventCommand | PlainMessage<IntegrationEventCommand> | undefined): boolean {
    return proto3.util.equals(IntegrationEventCommand, a, b);
  }
}

