// @generated by protoc-gen-es v1.8.0 with parameter "target=ts,import_extension=none"
// @generated from file vklink/libs/common/responses/content_response.proto (package vklink.common.responses, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Int32Value, Message, proto3, StringValue } from "@bufbuild/protobuf";
import { ContentType } from "../enums/content_type_pb";
import { LanguageCode } from "../enums/language_code_pb";

/**
 * @generated from message vklink.common.responses.ContentResponse
 */
export class ContentResponse extends Message<ContentResponse> {
  /**
   * @generated from field: vklink.grpc.enums.ContentType type = 2;
   */
  type = ContentType.UNSPECIFIED;

  /**
   * @generated from field: google.protobuf.StringValue value = 3;
   */
  value?: string;

  /**
   * @generated from field: google.protobuf.Int32Value order = 4;
   */
  order?: number;

  /**
   * @generated from field: vklink.grpc.enums.LanguageCode langCode = 5;
   */
  langCode = LanguageCode.UNSPECIFIED;

  constructor(data?: PartialMessage<ContentResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "vklink.common.responses.ContentResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 2, name: "type", kind: "enum", T: proto3.getEnumType(ContentType) },
    { no: 3, name: "value", kind: "message", T: StringValue },
    { no: 4, name: "order", kind: "message", T: Int32Value },
    { no: 5, name: "langCode", kind: "enum", T: proto3.getEnumType(LanguageCode) },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ContentResponse {
    return new ContentResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ContentResponse {
    return new ContentResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ContentResponse {
    return new ContentResponse().fromJsonString(jsonString, options);
  }

  static equals(a: ContentResponse | PlainMessage<ContentResponse> | undefined, b: ContentResponse | PlainMessage<ContentResponse> | undefined): boolean {
    return proto3.util.equals(ContentResponse, a, b);
  }
}

