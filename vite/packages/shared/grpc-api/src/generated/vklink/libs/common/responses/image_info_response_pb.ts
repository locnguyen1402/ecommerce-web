// @generated by protoc-gen-es v1.8.0 with parameter "target=ts,import_extension=none"
// @generated from file vklink/libs/common/responses/image_info_response.proto (package vklink.common.responses, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";
import { ImageSize } from "../enums/image_size_pb";

/**
 * @generated from message vklink.common.responses.ImageInfoResponse
 */
export class ImageInfoResponse extends Message<ImageInfoResponse> {
  /**
   * @generated from field: string id = 1;
   */
  id = "";

  /**
   * @generated from field: string title = 2;
   */
  title = "";

  /**
   * @generated from field: string description = 3;
   */
  description = "";

  /**
   * @generated from field: string url = 4;
   */
  url = "";

  /**
   * @generated from field: vklink.grpc.enums.ImageSize size = 5;
   */
  size = ImageSize.UNSPECIFIED;

  constructor(data?: PartialMessage<ImageInfoResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "vklink.common.responses.ImageInfoResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "title", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "description", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "url", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "size", kind: "enum", T: proto3.getEnumType(ImageSize) },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ImageInfoResponse {
    return new ImageInfoResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ImageInfoResponse {
    return new ImageInfoResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ImageInfoResponse {
    return new ImageInfoResponse().fromJsonString(jsonString, options);
  }

  static equals(a: ImageInfoResponse | PlainMessage<ImageInfoResponse> | undefined, b: ImageInfoResponse | PlainMessage<ImageInfoResponse> | undefined): boolean {
    return proto3.util.equals(ImageInfoResponse, a, b);
  }
}

