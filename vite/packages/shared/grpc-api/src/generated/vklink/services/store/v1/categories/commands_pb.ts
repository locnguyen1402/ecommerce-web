// @generated by protoc-gen-es v1.8.0 with parameter "target=ts,import_extension=none"
// @generated from file vklink/services/store/v1/categories/commands.proto (package vklink.store.api.v1.categories.commands, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3, StringValue } from "@bufbuild/protobuf";
import { LanguageCode } from "../../../../libs/common/enums/language_code_pb";
import { CreateDocumentInfoCommand } from "../../../../libs/common/commands/create_document_info_command_pb";

/**
 * @generated from message vklink.store.api.v1.categories.commands.CategoryTranslationCommand
 */
export class CategoryTranslationCommand extends Message<CategoryTranslationCommand> {
  /**
   * @generated from field: vklink.grpc.enums.LanguageCode langCode = 1;
   */
  langCode = LanguageCode.UNSPECIFIED;

  /**
   * @generated from field: google.protobuf.StringValue name = 2;
   */
  name?: string;

  /**
   * @generated from field: google.protobuf.StringValue description = 3;
   */
  description?: string;

  /**
   * @generated from field: vklink.common.commands.CreateDocumentInfoCommand thumbnail = 4;
   */
  thumbnail?: CreateDocumentInfoCommand;

  /**
   * @generated from field: vklink.common.commands.CreateDocumentInfoCommand banner = 5;
   */
  banner?: CreateDocumentInfoCommand;

  /**
   * @generated from field: google.protobuf.StringValue bannerTitle = 6;
   */
  bannerTitle?: string;

  constructor(data?: PartialMessage<CategoryTranslationCommand>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "vklink.store.api.v1.categories.commands.CategoryTranslationCommand";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "langCode", kind: "enum", T: proto3.getEnumType(LanguageCode) },
    { no: 2, name: "name", kind: "message", T: StringValue },
    { no: 3, name: "description", kind: "message", T: StringValue },
    { no: 4, name: "thumbnail", kind: "message", T: CreateDocumentInfoCommand },
    { no: 5, name: "banner", kind: "message", T: CreateDocumentInfoCommand },
    { no: 6, name: "bannerTitle", kind: "message", T: StringValue },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CategoryTranslationCommand {
    return new CategoryTranslationCommand().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CategoryTranslationCommand {
    return new CategoryTranslationCommand().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CategoryTranslationCommand {
    return new CategoryTranslationCommand().fromJsonString(jsonString, options);
  }

  static equals(a: CategoryTranslationCommand | PlainMessage<CategoryTranslationCommand> | undefined, b: CategoryTranslationCommand | PlainMessage<CategoryTranslationCommand> | undefined): boolean {
    return proto3.util.equals(CategoryTranslationCommand, a, b);
  }
}

/**
 * @generated from message vklink.store.api.v1.categories.commands.CreateCategoryCommand
 */
export class CreateCategoryCommand extends Message<CreateCategoryCommand> {
  /**
   * data fields: from 1 to 50
   *
   * @generated from field: string name = 2;
   */
  name = "";

  /**
   * @generated from field: string slug = 3;
   */
  slug = "";

  /**
   * @generated from field: google.protobuf.StringValue description = 4;
   */
  description?: string;

  /**
   * @generated from field: google.protobuf.StringValue remarks = 5;
   */
  remarks?: string;

  /**
   * @generated from field: vklink.common.commands.CreateDocumentInfoCommand document = 6;
   */
  document?: CreateDocumentInfoCommand;

  /**
   * @generated from field: vklink.common.commands.CreateDocumentInfoCommand icon = 7;
   */
  icon?: CreateDocumentInfoCommand;

  /**
   * @generated from field: vklink.common.commands.CreateDocumentInfoCommand banner = 8;
   */
  banner?: CreateDocumentInfoCommand;

  /**
   * @generated from field: repeated vklink.store.api.v1.categories.commands.CategoryTranslationCommand translations = 9;
   */
  translations: CategoryTranslationCommand[] = [];

  /**
   * @generated from field: google.protobuf.StringValue bannerTitle = 10;
   */
  bannerTitle?: string;

  /**
   * @generated from field: int32 order = 11;
   */
  order = 0;

  /**
   * relationship fields: from 51 to 60
   * string partnerId = 51;
   *
   * @generated from field: google.protobuf.StringValue parentId = 52;
   */
  parentId?: string;

  constructor(data?: PartialMessage<CreateCategoryCommand>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "vklink.store.api.v1.categories.commands.CreateCategoryCommand";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 2, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "slug", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "description", kind: "message", T: StringValue },
    { no: 5, name: "remarks", kind: "message", T: StringValue },
    { no: 6, name: "document", kind: "message", T: CreateDocumentInfoCommand },
    { no: 7, name: "icon", kind: "message", T: CreateDocumentInfoCommand },
    { no: 8, name: "banner", kind: "message", T: CreateDocumentInfoCommand },
    { no: 9, name: "translations", kind: "message", T: CategoryTranslationCommand, repeated: true },
    { no: 10, name: "bannerTitle", kind: "message", T: StringValue },
    { no: 11, name: "order", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 52, name: "parentId", kind: "message", T: StringValue },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CreateCategoryCommand {
    return new CreateCategoryCommand().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CreateCategoryCommand {
    return new CreateCategoryCommand().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CreateCategoryCommand {
    return new CreateCategoryCommand().fromJsonString(jsonString, options);
  }

  static equals(a: CreateCategoryCommand | PlainMessage<CreateCategoryCommand> | undefined, b: CreateCategoryCommand | PlainMessage<CreateCategoryCommand> | undefined): boolean {
    return proto3.util.equals(CreateCategoryCommand, a, b);
  }
}

/**
 * @generated from message vklink.store.api.v1.categories.commands.UpdateCategoryCommand
 */
export class UpdateCategoryCommand extends Message<UpdateCategoryCommand> {
  /**
   * data fields: from 1 to 50
   *
   * @generated from field: string id = 1;
   */
  id = "";

  /**
   * @generated from field: string name = 2;
   */
  name = "";

  /**
   * @generated from field: string slug = 3;
   */
  slug = "";

  /**
   * @generated from field: google.protobuf.StringValue description = 4;
   */
  description?: string;

  /**
   * @generated from field: google.protobuf.StringValue remarks = 5;
   */
  remarks?: string;

  /**
   * @generated from field: vklink.common.commands.CreateDocumentInfoCommand document = 6;
   */
  document?: CreateDocumentInfoCommand;

  /**
   * @generated from field: vklink.common.commands.CreateDocumentInfoCommand icon = 7;
   */
  icon?: CreateDocumentInfoCommand;

  /**
   * @generated from field: vklink.common.commands.CreateDocumentInfoCommand banner = 8;
   */
  banner?: CreateDocumentInfoCommand;

  /**
   * @generated from field: repeated vklink.store.api.v1.categories.commands.CategoryTranslationCommand translations = 9;
   */
  translations: CategoryTranslationCommand[] = [];

  /**
   * @generated from field: google.protobuf.StringValue bannerTitle = 10;
   */
  bannerTitle?: string;

  /**
   * @generated from field: int32 order = 11;
   */
  order = 0;

  /**
   * relationship fields: from 51 to 60
   *
   * @generated from field: google.protobuf.StringValue parentId = 51;
   */
  parentId?: string;

  constructor(data?: PartialMessage<UpdateCategoryCommand>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "vklink.store.api.v1.categories.commands.UpdateCategoryCommand";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "slug", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "description", kind: "message", T: StringValue },
    { no: 5, name: "remarks", kind: "message", T: StringValue },
    { no: 6, name: "document", kind: "message", T: CreateDocumentInfoCommand },
    { no: 7, name: "icon", kind: "message", T: CreateDocumentInfoCommand },
    { no: 8, name: "banner", kind: "message", T: CreateDocumentInfoCommand },
    { no: 9, name: "translations", kind: "message", T: CategoryTranslationCommand, repeated: true },
    { no: 10, name: "bannerTitle", kind: "message", T: StringValue },
    { no: 11, name: "order", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 51, name: "parentId", kind: "message", T: StringValue },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateCategoryCommand {
    return new UpdateCategoryCommand().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateCategoryCommand {
    return new UpdateCategoryCommand().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateCategoryCommand {
    return new UpdateCategoryCommand().fromJsonString(jsonString, options);
  }

  static equals(a: UpdateCategoryCommand | PlainMessage<UpdateCategoryCommand> | undefined, b: UpdateCategoryCommand | PlainMessage<UpdateCategoryCommand> | undefined): boolean {
    return proto3.util.equals(UpdateCategoryCommand, a, b);
  }
}

/**
 * @generated from message vklink.store.api.v1.categories.commands.DisableCategoryCommand
 */
export class DisableCategoryCommand extends Message<DisableCategoryCommand> {
  /**
   * @generated from field: string id = 1;
   */
  id = "";

  constructor(data?: PartialMessage<DisableCategoryCommand>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "vklink.store.api.v1.categories.commands.DisableCategoryCommand";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DisableCategoryCommand {
    return new DisableCategoryCommand().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DisableCategoryCommand {
    return new DisableCategoryCommand().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DisableCategoryCommand {
    return new DisableCategoryCommand().fromJsonString(jsonString, options);
  }

  static equals(a: DisableCategoryCommand | PlainMessage<DisableCategoryCommand> | undefined, b: DisableCategoryCommand | PlainMessage<DisableCategoryCommand> | undefined): boolean {
    return proto3.util.equals(DisableCategoryCommand, a, b);
  }
}

/**
 * @generated from message vklink.store.api.v1.categories.commands.EnableCategoryCommand
 */
export class EnableCategoryCommand extends Message<EnableCategoryCommand> {
  /**
   * @generated from field: string id = 1;
   */
  id = "";

  constructor(data?: PartialMessage<EnableCategoryCommand>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "vklink.store.api.v1.categories.commands.EnableCategoryCommand";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): EnableCategoryCommand {
    return new EnableCategoryCommand().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): EnableCategoryCommand {
    return new EnableCategoryCommand().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): EnableCategoryCommand {
    return new EnableCategoryCommand().fromJsonString(jsonString, options);
  }

  static equals(a: EnableCategoryCommand | PlainMessage<EnableCategoryCommand> | undefined, b: EnableCategoryCommand | PlainMessage<EnableCategoryCommand> | undefined): boolean {
    return proto3.util.equals(EnableCategoryCommand, a, b);
  }
}

