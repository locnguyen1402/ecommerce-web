// @generated by protoc-gen-es v1.8.0 with parameter "target=ts,import_extension=none"
// @generated from file vklink/services/ordering/v1/carts/commands.proto (package vklink.ordering.api.v1.carts.commands, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3, StringValue } from "@bufbuild/protobuf";

/**
 * @generated from message vklink.ordering.api.v1.carts.commands.AddCartItemCommand
 */
export class AddCartItemCommand extends Message<AddCartItemCommand> {
  /**
   * data fields: from 1 to 50
   *
   * @generated from field: string customerId = 1;
   */
  customerId = "";

  /**
   * @generated from field: string productId = 2;
   */
  productId = "";

  /**
   * @generated from field: google.protobuf.StringValue variantId = 3;
   */
  variantId?: string;

  /**
   * @generated from field: int32 quantity = 4;
   */
  quantity = 0;

  constructor(data?: PartialMessage<AddCartItemCommand>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "vklink.ordering.api.v1.carts.commands.AddCartItemCommand";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "customerId", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "productId", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "variantId", kind: "message", T: StringValue },
    { no: 4, name: "quantity", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AddCartItemCommand {
    return new AddCartItemCommand().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AddCartItemCommand {
    return new AddCartItemCommand().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AddCartItemCommand {
    return new AddCartItemCommand().fromJsonString(jsonString, options);
  }

  static equals(a: AddCartItemCommand | PlainMessage<AddCartItemCommand> | undefined, b: AddCartItemCommand | PlainMessage<AddCartItemCommand> | undefined): boolean {
    return proto3.util.equals(AddCartItemCommand, a, b);
  }
}

/**
 * @generated from message vklink.ordering.api.v1.carts.commands.DeleteCartItemCommand
 */
export class DeleteCartItemCommand extends Message<DeleteCartItemCommand> {
  /**
   * @generated from field: string customerId = 1;
   */
  customerId = "";

  /**
   * @generated from field: string productId = 2;
   */
  productId = "";

  constructor(data?: PartialMessage<DeleteCartItemCommand>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "vklink.ordering.api.v1.carts.commands.DeleteCartItemCommand";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "customerId", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "productId", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DeleteCartItemCommand {
    return new DeleteCartItemCommand().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DeleteCartItemCommand {
    return new DeleteCartItemCommand().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DeleteCartItemCommand {
    return new DeleteCartItemCommand().fromJsonString(jsonString, options);
  }

  static equals(a: DeleteCartItemCommand | PlainMessage<DeleteCartItemCommand> | undefined, b: DeleteCartItemCommand | PlainMessage<DeleteCartItemCommand> | undefined): boolean {
    return proto3.util.equals(DeleteCartItemCommand, a, b);
  }
}

/**
 * @generated from message vklink.ordering.api.v1.carts.commands.DeleteCartItemsByProductIdsCommand
 */
export class DeleteCartItemsByProductIdsCommand extends Message<DeleteCartItemsByProductIdsCommand> {
  /**
   * @generated from field: string customerId = 1;
   */
  customerId = "";

  /**
   * @generated from field: repeated string productIds = 2;
   */
  productIds: string[] = [];

  constructor(data?: PartialMessage<DeleteCartItemsByProductIdsCommand>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "vklink.ordering.api.v1.carts.commands.DeleteCartItemsByProductIdsCommand";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "customerId", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "productIds", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DeleteCartItemsByProductIdsCommand {
    return new DeleteCartItemsByProductIdsCommand().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DeleteCartItemsByProductIdsCommand {
    return new DeleteCartItemsByProductIdsCommand().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DeleteCartItemsByProductIdsCommand {
    return new DeleteCartItemsByProductIdsCommand().fromJsonString(jsonString, options);
  }

  static equals(a: DeleteCartItemsByProductIdsCommand | PlainMessage<DeleteCartItemsByProductIdsCommand> | undefined, b: DeleteCartItemsByProductIdsCommand | PlainMessage<DeleteCartItemsByProductIdsCommand> | undefined): boolean {
    return proto3.util.equals(DeleteCartItemsByProductIdsCommand, a, b);
  }
}

