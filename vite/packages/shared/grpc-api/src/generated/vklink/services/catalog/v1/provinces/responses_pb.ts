// @generated by protoc-gen-es v1.8.0 with parameter "target=ts,import_extension=none"
// @generated from file vklink/services/catalog/v1/provinces/responses.proto (package vklink.catalog.api.v1.provinces.responses, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";
import { PagingInfoResponse } from "../../../../libs/common/responses/paging_info_response_pb";

/**
 * @generated from message vklink.catalog.api.v1.provinces.responses.ProvinceResponse
 */
export class ProvinceResponse extends Message<ProvinceResponse> {
  /**
   * data fields: from 1 to 50
   *
   * @generated from field: string id = 1;
   */
  id = "";

  /**
   * @generated from field: string name = 2;
   */
  name = "";

  /**
   * @generated from field: string code = 3;
   */
  code = "";

  constructor(data?: PartialMessage<ProvinceResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "vklink.catalog.api.v1.provinces.responses.ProvinceResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "code", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ProvinceResponse {
    return new ProvinceResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ProvinceResponse {
    return new ProvinceResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ProvinceResponse {
    return new ProvinceResponse().fromJsonString(jsonString, options);
  }

  static equals(a: ProvinceResponse | PlainMessage<ProvinceResponse> | undefined, b: ProvinceResponse | PlainMessage<ProvinceResponse> | undefined): boolean {
    return proto3.util.equals(ProvinceResponse, a, b);
  }
}

/**
 * @generated from message vklink.catalog.api.v1.provinces.responses.SingleProvinceResponse
 */
export class SingleProvinceResponse extends Message<SingleProvinceResponse> {
  /**
   * @generated from field: vklink.catalog.api.v1.provinces.responses.ProvinceResponse value = 1;
   */
  value?: ProvinceResponse;

  constructor(data?: PartialMessage<SingleProvinceResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "vklink.catalog.api.v1.provinces.responses.SingleProvinceResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "message", T: ProvinceResponse },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SingleProvinceResponse {
    return new SingleProvinceResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SingleProvinceResponse {
    return new SingleProvinceResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SingleProvinceResponse {
    return new SingleProvinceResponse().fromJsonString(jsonString, options);
  }

  static equals(a: SingleProvinceResponse | PlainMessage<SingleProvinceResponse> | undefined, b: SingleProvinceResponse | PlainMessage<SingleProvinceResponse> | undefined): boolean {
    return proto3.util.equals(SingleProvinceResponse, a, b);
  }
}

/**
 * @generated from message vklink.catalog.api.v1.provinces.responses.ListProvincesResponse
 */
export class ListProvincesResponse extends Message<ListProvincesResponse> {
  /**
   * @generated from field: repeated vklink.catalog.api.v1.provinces.responses.ProvinceResponse value = 1;
   */
  value: ProvinceResponse[] = [];

  /**
   * @generated from field: vklink.common.responses.PagingInfoResponse paging = 2;
   */
  paging?: PagingInfoResponse;

  constructor(data?: PartialMessage<ListProvincesResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "vklink.catalog.api.v1.provinces.responses.ListProvincesResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "message", T: ProvinceResponse, repeated: true },
    { no: 2, name: "paging", kind: "message", T: PagingInfoResponse },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListProvincesResponse {
    return new ListProvincesResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListProvincesResponse {
    return new ListProvincesResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListProvincesResponse {
    return new ListProvincesResponse().fromJsonString(jsonString, options);
  }

  static equals(a: ListProvincesResponse | PlainMessage<ListProvincesResponse> | undefined, b: ListProvincesResponse | PlainMessage<ListProvincesResponse> | undefined): boolean {
    return proto3.util.equals(ListProvincesResponse, a, b);
  }
}

