// @generated by protoc-gen-es v1.8.0 with parameter "target=ts,import_extension=none"
// @generated from file vklink/services/store/v1/categories/responses.proto (package vklink.store.api.v1.categories.responses, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3, StringValue } from "@bufbuild/protobuf";
import { DocumentInfoResponse } from "../../../../libs/common/responses/document_info_response_pb";
import { ActorInfoResponse } from "../../../../libs/common/responses/actor_info_response_pb";
import { PagingInfoResponse } from "../../../../libs/common/responses/paging_info_response_pb";
import { LanguageCode } from "../../../../libs/common/enums/language_code_pb";

/**
 * @generated from message vklink.store.api.v1.categories.responses.CategoryInfoResponse
 */
export class CategoryInfoResponse extends Message<CategoryInfoResponse> {
  /**
   * @generated from field: string id = 1;
   */
  id = "";

  /**
   * @generated from field: string name = 2;
   */
  name = "";

  /**
   * @generated from field: string slug = 3;
   */
  slug = "";

  /**
   * @generated from field: google.protobuf.StringValue description = 4;
   */
  description?: string;

  constructor(data?: PartialMessage<CategoryInfoResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "vklink.store.api.v1.categories.responses.CategoryInfoResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "slug", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "description", kind: "message", T: StringValue },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CategoryInfoResponse {
    return new CategoryInfoResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CategoryInfoResponse {
    return new CategoryInfoResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CategoryInfoResponse {
    return new CategoryInfoResponse().fromJsonString(jsonString, options);
  }

  static equals(a: CategoryInfoResponse | PlainMessage<CategoryInfoResponse> | undefined, b: CategoryInfoResponse | PlainMessage<CategoryInfoResponse> | undefined): boolean {
    return proto3.util.equals(CategoryInfoResponse, a, b);
  }
}

/**
 * @generated from message vklink.store.api.v1.categories.responses.CategoryResponse
 */
export class CategoryResponse extends Message<CategoryResponse> {
  /**
   * data fields: from 1 to 50
   *
   * @generated from field: string id = 1;
   */
  id = "";

  /**
   * @generated from field: string name = 2;
   */
  name = "";

  /**
   * @generated from field: string slug = 3;
   */
  slug = "";

  /**
   * @generated from field: google.protobuf.StringValue description = 4;
   */
  description?: string;

  /**
   * @generated from field: google.protobuf.StringValue remarks = 5;
   */
  remarks?: string;

  /**
   * @generated from field: bool isEnabled = 6;
   */
  isEnabled = false;

  /**
   * @generated from field: vklink.common.responses.DocumentInfoResponse document = 7;
   */
  document?: DocumentInfoResponse;

  /**
   * @generated from field: vklink.common.responses.DocumentInfoResponse icon = 8;
   */
  icon?: DocumentInfoResponse;

  /**
   * @generated from field: vklink.common.responses.DocumentInfoResponse banner = 9;
   */
  banner?: DocumentInfoResponse;

  /**
   * @generated from field: google.protobuf.StringValue bannerTitle = 10;
   */
  bannerTitle?: string;

  /**
   * @generated from field: int32 order = 11;
   */
  order = 0;

  /**
   * relationship fields: from 51 to 60
   *
   * @generated from field: vklink.store.api.v1.categories.responses.CategoryInfoResponse parent = 51;
   */
  parent?: CategoryInfoResponse;

  /**
   * @generated from field: repeated vklink.store.api.v1.categories.responses.CategoryResponse children = 52;
   */
  children: CategoryResponse[] = [];

  /**
   * audit fields: from 63 to 70
   *
   * @generated from field: vklink.common.responses.ActorInfoResponse creator = 61;
   */
  creator?: ActorInfoResponse;

  /**
   * @generated from field: vklink.common.responses.ActorInfoResponse updater = 62;
   */
  updater?: ActorInfoResponse;

  constructor(data?: PartialMessage<CategoryResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "vklink.store.api.v1.categories.responses.CategoryResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "slug", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "description", kind: "message", T: StringValue },
    { no: 5, name: "remarks", kind: "message", T: StringValue },
    { no: 6, name: "isEnabled", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 7, name: "document", kind: "message", T: DocumentInfoResponse },
    { no: 8, name: "icon", kind: "message", T: DocumentInfoResponse },
    { no: 9, name: "banner", kind: "message", T: DocumentInfoResponse },
    { no: 10, name: "bannerTitle", kind: "message", T: StringValue },
    { no: 11, name: "order", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 51, name: "parent", kind: "message", T: CategoryInfoResponse },
    { no: 52, name: "children", kind: "message", T: CategoryResponse, repeated: true },
    { no: 61, name: "creator", kind: "message", T: ActorInfoResponse },
    { no: 62, name: "updater", kind: "message", T: ActorInfoResponse },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CategoryResponse {
    return new CategoryResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CategoryResponse {
    return new CategoryResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CategoryResponse {
    return new CategoryResponse().fromJsonString(jsonString, options);
  }

  static equals(a: CategoryResponse | PlainMessage<CategoryResponse> | undefined, b: CategoryResponse | PlainMessage<CategoryResponse> | undefined): boolean {
    return proto3.util.equals(CategoryResponse, a, b);
  }
}

/**
 * @generated from message vklink.store.api.v1.categories.responses.SingleCategoryResponse
 */
export class SingleCategoryResponse extends Message<SingleCategoryResponse> {
  /**
   * @generated from field: vklink.store.api.v1.categories.responses.CategoryResponse value = 1;
   */
  value?: CategoryResponse;

  constructor(data?: PartialMessage<SingleCategoryResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "vklink.store.api.v1.categories.responses.SingleCategoryResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "message", T: CategoryResponse },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SingleCategoryResponse {
    return new SingleCategoryResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SingleCategoryResponse {
    return new SingleCategoryResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SingleCategoryResponse {
    return new SingleCategoryResponse().fromJsonString(jsonString, options);
  }

  static equals(a: SingleCategoryResponse | PlainMessage<SingleCategoryResponse> | undefined, b: SingleCategoryResponse | PlainMessage<SingleCategoryResponse> | undefined): boolean {
    return proto3.util.equals(SingleCategoryResponse, a, b);
  }
}

/**
 * @generated from message vklink.store.api.v1.categories.responses.ListCategoriesResponse
 */
export class ListCategoriesResponse extends Message<ListCategoriesResponse> {
  /**
   * @generated from field: repeated vklink.store.api.v1.categories.responses.CategoryResponse value = 1;
   */
  value: CategoryResponse[] = [];

  /**
   * @generated from field: vklink.common.responses.PagingInfoResponse paging = 2;
   */
  paging?: PagingInfoResponse;

  constructor(data?: PartialMessage<ListCategoriesResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "vklink.store.api.v1.categories.responses.ListCategoriesResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "message", T: CategoryResponse, repeated: true },
    { no: 2, name: "paging", kind: "message", T: PagingInfoResponse },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListCategoriesResponse {
    return new ListCategoriesResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListCategoriesResponse {
    return new ListCategoriesResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListCategoriesResponse {
    return new ListCategoriesResponse().fromJsonString(jsonString, options);
  }

  static equals(a: ListCategoriesResponse | PlainMessage<ListCategoriesResponse> | undefined, b: ListCategoriesResponse | PlainMessage<ListCategoriesResponse> | undefined): boolean {
    return proto3.util.equals(ListCategoriesResponse, a, b);
  }
}

/**
 * @generated from message vklink.store.api.v1.categories.responses.CategoryDetailAdminTranslationResponse
 */
export class CategoryDetailAdminTranslationResponse extends Message<CategoryDetailAdminTranslationResponse> {
  /**
   * @generated from field: string id = 1;
   */
  id = "";

  /**
   * @generated from field: vklink.grpc.enums.LanguageCode langCode = 2;
   */
  langCode = LanguageCode.UNSPECIFIED;

  /**
   * @generated from field: google.protobuf.StringValue name = 3;
   */
  name?: string;

  /**
   * @generated from field: google.protobuf.StringValue description = 4;
   */
  description?: string;

  /**
   * @generated from field: vklink.common.responses.DocumentInfoResponse banner = 5;
   */
  banner?: DocumentInfoResponse;

  /**
   * @generated from field: google.protobuf.StringValue bannerTitle = 6;
   */
  bannerTitle?: string;

  constructor(data?: PartialMessage<CategoryDetailAdminTranslationResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "vklink.store.api.v1.categories.responses.CategoryDetailAdminTranslationResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "langCode", kind: "enum", T: proto3.getEnumType(LanguageCode) },
    { no: 3, name: "name", kind: "message", T: StringValue },
    { no: 4, name: "description", kind: "message", T: StringValue },
    { no: 5, name: "banner", kind: "message", T: DocumentInfoResponse },
    { no: 6, name: "bannerTitle", kind: "message", T: StringValue },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CategoryDetailAdminTranslationResponse {
    return new CategoryDetailAdminTranslationResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CategoryDetailAdminTranslationResponse {
    return new CategoryDetailAdminTranslationResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CategoryDetailAdminTranslationResponse {
    return new CategoryDetailAdminTranslationResponse().fromJsonString(jsonString, options);
  }

  static equals(a: CategoryDetailAdminTranslationResponse | PlainMessage<CategoryDetailAdminTranslationResponse> | undefined, b: CategoryDetailAdminTranslationResponse | PlainMessage<CategoryDetailAdminTranslationResponse> | undefined): boolean {
    return proto3.util.equals(CategoryDetailAdminTranslationResponse, a, b);
  }
}

/**
 * @generated from message vklink.store.api.v1.categories.responses.CategoryDetailAdminResponse
 */
export class CategoryDetailAdminResponse extends Message<CategoryDetailAdminResponse> {
  /**
   * data fields: from 1 to 50
   *
   * @generated from field: string id = 1;
   */
  id = "";

  /**
   * @generated from field: string name = 2;
   */
  name = "";

  /**
   * @generated from field: string slug = 3;
   */
  slug = "";

  /**
   * @generated from field: google.protobuf.StringValue description = 4;
   */
  description?: string;

  /**
   * @generated from field: bool isEnabled = 5;
   */
  isEnabled = false;

  /**
   * @generated from field: vklink.common.responses.DocumentInfoResponse icon = 6;
   */
  icon?: DocumentInfoResponse;

  /**
   * @generated from field: vklink.common.responses.DocumentInfoResponse banner = 7;
   */
  banner?: DocumentInfoResponse;

  /**
   * @generated from field: repeated vklink.store.api.v1.categories.responses.CategoryDetailAdminTranslationResponse translations = 8;
   */
  translations: CategoryDetailAdminTranslationResponse[] = [];

  /**
   * @generated from field: google.protobuf.StringValue bannerTitle = 10;
   */
  bannerTitle?: string;

  /**
   * @generated from field: int32 order = 11;
   */
  order = 0;

  /**
   * audit fields: from 63 to 70
   *
   * @generated from field: vklink.common.responses.ActorInfoResponse creator = 61;
   */
  creator?: ActorInfoResponse;

  /**
   * @generated from field: vklink.common.responses.ActorInfoResponse updater = 62;
   */
  updater?: ActorInfoResponse;

  constructor(data?: PartialMessage<CategoryDetailAdminResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "vklink.store.api.v1.categories.responses.CategoryDetailAdminResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "slug", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "description", kind: "message", T: StringValue },
    { no: 5, name: "isEnabled", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 6, name: "icon", kind: "message", T: DocumentInfoResponse },
    { no: 7, name: "banner", kind: "message", T: DocumentInfoResponse },
    { no: 8, name: "translations", kind: "message", T: CategoryDetailAdminTranslationResponse, repeated: true },
    { no: 10, name: "bannerTitle", kind: "message", T: StringValue },
    { no: 11, name: "order", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 61, name: "creator", kind: "message", T: ActorInfoResponse },
    { no: 62, name: "updater", kind: "message", T: ActorInfoResponse },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CategoryDetailAdminResponse {
    return new CategoryDetailAdminResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CategoryDetailAdminResponse {
    return new CategoryDetailAdminResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CategoryDetailAdminResponse {
    return new CategoryDetailAdminResponse().fromJsonString(jsonString, options);
  }

  static equals(a: CategoryDetailAdminResponse | PlainMessage<CategoryDetailAdminResponse> | undefined, b: CategoryDetailAdminResponse | PlainMessage<CategoryDetailAdminResponse> | undefined): boolean {
    return proto3.util.equals(CategoryDetailAdminResponse, a, b);
  }
}

/**
 * @generated from message vklink.store.api.v1.categories.responses.SingleCategoryDetailAdminResponse
 */
export class SingleCategoryDetailAdminResponse extends Message<SingleCategoryDetailAdminResponse> {
  /**
   * @generated from field: vklink.store.api.v1.categories.responses.CategoryDetailAdminResponse value = 1;
   */
  value?: CategoryDetailAdminResponse;

  constructor(data?: PartialMessage<SingleCategoryDetailAdminResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "vklink.store.api.v1.categories.responses.SingleCategoryDetailAdminResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "message", T: CategoryDetailAdminResponse },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SingleCategoryDetailAdminResponse {
    return new SingleCategoryDetailAdminResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SingleCategoryDetailAdminResponse {
    return new SingleCategoryDetailAdminResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SingleCategoryDetailAdminResponse {
    return new SingleCategoryDetailAdminResponse().fromJsonString(jsonString, options);
  }

  static equals(a: SingleCategoryDetailAdminResponse | PlainMessage<SingleCategoryDetailAdminResponse> | undefined, b: SingleCategoryDetailAdminResponse | PlainMessage<SingleCategoryDetailAdminResponse> | undefined): boolean {
    return proto3.util.equals(SingleCategoryDetailAdminResponse, a, b);
  }
}

