// @generated by protoc-gen-es v1.8.0 with parameter "target=ts,import_extension=none"
// @generated from file vklink/services/store/v1/coupons/responses.proto (package vklink.store.api.v1.coupons.responses, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Int32Value, Message, proto3, StringValue, Timestamp } from "@bufbuild/protobuf";
import { CouponType } from "./enums_pb";
import { DocumentInfoResponse } from "../../../../libs/common/responses/document_info_response_pb";
import { ActorInfoResponse } from "../../../../libs/common/responses/actor_info_response_pb";
import { PagingInfoResponse } from "../../../../libs/common/responses/paging_info_response_pb";
import { LanguageCode } from "../../../../libs/common/enums/language_code_pb";

/**
 * @generated from message vklink.store.api.v1.coupons.responses.CouponResponse
 */
export class CouponResponse extends Message<CouponResponse> {
  /**
   * @generated from field: string id = 1;
   */
  id = "";

  /**
   * @generated from field: string code = 2;
   */
  code = "";

  /**
   * @generated from field: google.protobuf.StringValue description = 3;
   */
  description?: string;

  /**
   * @generated from field: vklink.store.api.v1.coupons.enums.CouponType couponType = 4;
   */
  couponType = CouponType.UNSPECIFIED;

  /**
   * @generated from field: string value = 5;
   */
  value = "";

  /**
   * @generated from field: google.protobuf.Timestamp startDate = 6;
   */
  startDate?: Timestamp;

  /**
   * @generated from field: google.protobuf.Timestamp endDate = 7;
   */
  endDate?: Timestamp;

  /**
   * @generated from field: google.protobuf.StringValue minPurchaseAmount = 8;
   */
  minPurchaseAmount?: string;

  /**
   * @generated from field: google.protobuf.Int32Value maxRedemptions = 9;
   */
  maxRedemptions?: number;

  /**
   * @generated from field: google.protobuf.Int32Value maxRedemptionsPerUser = 10;
   */
  maxRedemptionsPerUser?: number;

  /**
   * @generated from field: google.protobuf.Int32Value redemptionQuantity = 11;
   */
  redemptionQuantity?: number;

  /**
   * @generated from field: bool Enabled = 12;
   */
  Enabled = false;

  /**
   * @generated from field: vklink.common.responses.DocumentInfoResponse avatar = 51;
   */
  avatar?: DocumentInfoResponse;

  /**
   * @generated from field: vklink.common.responses.DocumentInfoResponse banner = 52;
   */
  banner?: DocumentInfoResponse;

  /**
   * @generated from field: optional vklink.common.responses.ActorInfoResponse creator = 61;
   */
  creator?: ActorInfoResponse;

  /**
   * @generated from field: optional vklink.common.responses.ActorInfoResponse updater = 62;
   */
  updater?: ActorInfoResponse;

  constructor(data?: PartialMessage<CouponResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "vklink.store.api.v1.coupons.responses.CouponResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "code", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "description", kind: "message", T: StringValue },
    { no: 4, name: "couponType", kind: "enum", T: proto3.getEnumType(CouponType) },
    { no: 5, name: "value", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 6, name: "startDate", kind: "message", T: Timestamp },
    { no: 7, name: "endDate", kind: "message", T: Timestamp },
    { no: 8, name: "minPurchaseAmount", kind: "message", T: StringValue },
    { no: 9, name: "maxRedemptions", kind: "message", T: Int32Value },
    { no: 10, name: "maxRedemptionsPerUser", kind: "message", T: Int32Value },
    { no: 11, name: "redemptionQuantity", kind: "message", T: Int32Value },
    { no: 12, name: "Enabled", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 51, name: "avatar", kind: "message", T: DocumentInfoResponse },
    { no: 52, name: "banner", kind: "message", T: DocumentInfoResponse },
    { no: 61, name: "creator", kind: "message", T: ActorInfoResponse, opt: true },
    { no: 62, name: "updater", kind: "message", T: ActorInfoResponse, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CouponResponse {
    return new CouponResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CouponResponse {
    return new CouponResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CouponResponse {
    return new CouponResponse().fromJsonString(jsonString, options);
  }

  static equals(a: CouponResponse | PlainMessage<CouponResponse> | undefined, b: CouponResponse | PlainMessage<CouponResponse> | undefined): boolean {
    return proto3.util.equals(CouponResponse, a, b);
  }
}

/**
 * @generated from message vklink.store.api.v1.coupons.responses.SingleCouponResponse
 */
export class SingleCouponResponse extends Message<SingleCouponResponse> {
  /**
   * @generated from field: vklink.store.api.v1.coupons.responses.CouponResponse value = 1;
   */
  value?: CouponResponse;

  constructor(data?: PartialMessage<SingleCouponResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "vklink.store.api.v1.coupons.responses.SingleCouponResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "message", T: CouponResponse },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SingleCouponResponse {
    return new SingleCouponResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SingleCouponResponse {
    return new SingleCouponResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SingleCouponResponse {
    return new SingleCouponResponse().fromJsonString(jsonString, options);
  }

  static equals(a: SingleCouponResponse | PlainMessage<SingleCouponResponse> | undefined, b: SingleCouponResponse | PlainMessage<SingleCouponResponse> | undefined): boolean {
    return proto3.util.equals(SingleCouponResponse, a, b);
  }
}

/**
 * @generated from message vklink.store.api.v1.coupons.responses.ListCouponResponse
 */
export class ListCouponResponse extends Message<ListCouponResponse> {
  /**
   * @generated from field: repeated vklink.store.api.v1.coupons.responses.CouponResponse value = 1;
   */
  value: CouponResponse[] = [];

  /**
   * @generated from field: vklink.common.responses.PagingInfoResponse paging = 2;
   */
  paging?: PagingInfoResponse;

  constructor(data?: PartialMessage<ListCouponResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "vklink.store.api.v1.coupons.responses.ListCouponResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "message", T: CouponResponse, repeated: true },
    { no: 2, name: "paging", kind: "message", T: PagingInfoResponse },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListCouponResponse {
    return new ListCouponResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListCouponResponse {
    return new ListCouponResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListCouponResponse {
    return new ListCouponResponse().fromJsonString(jsonString, options);
  }

  static equals(a: ListCouponResponse | PlainMessage<ListCouponResponse> | undefined, b: ListCouponResponse | PlainMessage<ListCouponResponse> | undefined): boolean {
    return proto3.util.equals(ListCouponResponse, a, b);
  }
}

/**
 * @generated from message vklink.store.api.v1.coupons.responses.CouponReportResponse
 */
export class CouponReportResponse extends Message<CouponReportResponse> {
  /**
   * data fields: from 1 to 50
   *
   * @generated from field: string couponCode = 1;
   */
  couponCode = "";

  /**
   * @generated from field: google.protobuf.StringValue maxRedemptions = 2;
   */
  maxRedemptions?: string;

  /**
   * @generated from field: google.protobuf.StringValue totalRedemptions = 3;
   */
  totalRedemptions?: string;

  /**
   * @generated from field: google.protobuf.StringValue uniqueUsers = 4;
   */
  uniqueUsers?: string;

  /**
   * @generated from field: google.protobuf.StringValue redemptionRate = 5;
   */
  redemptionRate?: string;

  /**
   * @generated from field: google.protobuf.StringValue totalSales = 6;
   */
  totalSales?: string;

  /**
   * @generated from field: google.protobuf.StringValue aovCoupon = 7;
   */
  aovCoupon?: string;

  /**
   * @generated from field: google.protobuf.StringValue topRegion = 8;
   */
  topRegion?: string;

  /**
   * @generated from field: google.protobuf.StringValue totalDiscount = 9;
   */
  totalDiscount?: string;

  /**
   * @generated from field: google.protobuf.StringValue netSales = 10;
   */
  netSales?: string;

  /**
   * @generated from field: string couponId = 11;
   */
  couponId = "";

  constructor(data?: PartialMessage<CouponReportResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "vklink.store.api.v1.coupons.responses.CouponReportResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "couponCode", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "maxRedemptions", kind: "message", T: StringValue },
    { no: 3, name: "totalRedemptions", kind: "message", T: StringValue },
    { no: 4, name: "uniqueUsers", kind: "message", T: StringValue },
    { no: 5, name: "redemptionRate", kind: "message", T: StringValue },
    { no: 6, name: "totalSales", kind: "message", T: StringValue },
    { no: 7, name: "aovCoupon", kind: "message", T: StringValue },
    { no: 8, name: "topRegion", kind: "message", T: StringValue },
    { no: 9, name: "totalDiscount", kind: "message", T: StringValue },
    { no: 10, name: "netSales", kind: "message", T: StringValue },
    { no: 11, name: "couponId", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CouponReportResponse {
    return new CouponReportResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CouponReportResponse {
    return new CouponReportResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CouponReportResponse {
    return new CouponReportResponse().fromJsonString(jsonString, options);
  }

  static equals(a: CouponReportResponse | PlainMessage<CouponReportResponse> | undefined, b: CouponReportResponse | PlainMessage<CouponReportResponse> | undefined): boolean {
    return proto3.util.equals(CouponReportResponse, a, b);
  }
}

/**
 * @generated from message vklink.store.api.v1.coupons.responses.ListCouponReportResponse
 */
export class ListCouponReportResponse extends Message<ListCouponReportResponse> {
  /**
   * @generated from field: repeated vklink.store.api.v1.coupons.responses.CouponReportResponse value = 1;
   */
  value: CouponReportResponse[] = [];

  /**
   * @generated from field: vklink.common.responses.PagingInfoResponse paging = 2;
   */
  paging?: PagingInfoResponse;

  constructor(data?: PartialMessage<ListCouponReportResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "vklink.store.api.v1.coupons.responses.ListCouponReportResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "message", T: CouponReportResponse, repeated: true },
    { no: 2, name: "paging", kind: "message", T: PagingInfoResponse },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListCouponReportResponse {
    return new ListCouponReportResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListCouponReportResponse {
    return new ListCouponReportResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListCouponReportResponse {
    return new ListCouponReportResponse().fromJsonString(jsonString, options);
  }

  static equals(a: ListCouponReportResponse | PlainMessage<ListCouponReportResponse> | undefined, b: ListCouponReportResponse | PlainMessage<ListCouponReportResponse> | undefined): boolean {
    return proto3.util.equals(ListCouponReportResponse, a, b);
  }
}

/**
 * @generated from message vklink.store.api.v1.coupons.responses.ExportCouponReportResponse
 */
export class ExportCouponReportResponse extends Message<ExportCouponReportResponse> {
  /**
   * @generated from field: bytes data = 1;
   */
  data = new Uint8Array(0);

  constructor(data?: PartialMessage<ExportCouponReportResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "vklink.store.api.v1.coupons.responses.ExportCouponReportResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "data", kind: "scalar", T: 12 /* ScalarType.BYTES */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ExportCouponReportResponse {
    return new ExportCouponReportResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ExportCouponReportResponse {
    return new ExportCouponReportResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ExportCouponReportResponse {
    return new ExportCouponReportResponse().fromJsonString(jsonString, options);
  }

  static equals(a: ExportCouponReportResponse | PlainMessage<ExportCouponReportResponse> | undefined, b: ExportCouponReportResponse | PlainMessage<ExportCouponReportResponse> | undefined): boolean {
    return proto3.util.equals(ExportCouponReportResponse, a, b);
  }
}

/**
 * @generated from message vklink.store.api.v1.coupons.responses.AdminCouponDetailTranslationResponse
 */
export class AdminCouponDetailTranslationResponse extends Message<AdminCouponDetailTranslationResponse> {
  /**
   * @generated from field: string id = 1;
   */
  id = "";

  /**
   * @generated from field: vklink.grpc.enums.LanguageCode langCode = 2;
   */
  langCode = LanguageCode.UNSPECIFIED;

  /**
   * @generated from field: google.protobuf.StringValue description = 3;
   */
  description?: string;

  /**
   * @generated from field: vklink.common.responses.DocumentInfoResponse avatar = 4;
   */
  avatar?: DocumentInfoResponse;

  /**
   * @generated from field: vklink.common.responses.DocumentInfoResponse banner = 5;
   */
  banner?: DocumentInfoResponse;

  constructor(data?: PartialMessage<AdminCouponDetailTranslationResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "vklink.store.api.v1.coupons.responses.AdminCouponDetailTranslationResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "langCode", kind: "enum", T: proto3.getEnumType(LanguageCode) },
    { no: 3, name: "description", kind: "message", T: StringValue },
    { no: 4, name: "avatar", kind: "message", T: DocumentInfoResponse },
    { no: 5, name: "banner", kind: "message", T: DocumentInfoResponse },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AdminCouponDetailTranslationResponse {
    return new AdminCouponDetailTranslationResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AdminCouponDetailTranslationResponse {
    return new AdminCouponDetailTranslationResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AdminCouponDetailTranslationResponse {
    return new AdminCouponDetailTranslationResponse().fromJsonString(jsonString, options);
  }

  static equals(a: AdminCouponDetailTranslationResponse | PlainMessage<AdminCouponDetailTranslationResponse> | undefined, b: AdminCouponDetailTranslationResponse | PlainMessage<AdminCouponDetailTranslationResponse> | undefined): boolean {
    return proto3.util.equals(AdminCouponDetailTranslationResponse, a, b);
  }
}

/**
 * @generated from message vklink.store.api.v1.coupons.responses.AdminCouponDetailResponse
 */
export class AdminCouponDetailResponse extends Message<AdminCouponDetailResponse> {
  /**
   * @generated from field: string id = 1;
   */
  id = "";

  /**
   * @generated from field: string code = 2;
   */
  code = "";

  /**
   * @generated from field: google.protobuf.StringValue description = 3;
   */
  description?: string;

  /**
   * @generated from field: vklink.store.api.v1.coupons.enums.CouponType couponType = 4;
   */
  couponType = CouponType.UNSPECIFIED;

  /**
   * @generated from field: string value = 5;
   */
  value = "";

  /**
   * @generated from field: google.protobuf.Timestamp startDate = 6;
   */
  startDate?: Timestamp;

  /**
   * @generated from field: google.protobuf.Timestamp endDate = 7;
   */
  endDate?: Timestamp;

  /**
   * @generated from field: google.protobuf.StringValue minPurchaseAmount = 8;
   */
  minPurchaseAmount?: string;

  /**
   * @generated from field: google.protobuf.Int32Value maxRedemptions = 9;
   */
  maxRedemptions?: number;

  /**
   * @generated from field: google.protobuf.Int32Value maxRedemptionsPerUser = 10;
   */
  maxRedemptionsPerUser?: number;

  /**
   * @generated from field: google.protobuf.Int32Value redemptionQuantity = 11;
   */
  redemptionQuantity?: number;

  /**
   * @generated from field: bool Enabled = 12;
   */
  Enabled = false;

  /**
   * @generated from field: repeated vklink.store.api.v1.coupons.responses.AdminCouponDetailTranslationResponse translations = 13;
   */
  translations: AdminCouponDetailTranslationResponse[] = [];

  /**
   * @generated from field: vklink.common.responses.DocumentInfoResponse avatar = 51;
   */
  avatar?: DocumentInfoResponse;

  /**
   * @generated from field: vklink.common.responses.DocumentInfoResponse banner = 52;
   */
  banner?: DocumentInfoResponse;

  /**
   * @generated from field: optional vklink.common.responses.ActorInfoResponse creator = 61;
   */
  creator?: ActorInfoResponse;

  /**
   * @generated from field: optional vklink.common.responses.ActorInfoResponse updater = 62;
   */
  updater?: ActorInfoResponse;

  constructor(data?: PartialMessage<AdminCouponDetailResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "vklink.store.api.v1.coupons.responses.AdminCouponDetailResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "code", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "description", kind: "message", T: StringValue },
    { no: 4, name: "couponType", kind: "enum", T: proto3.getEnumType(CouponType) },
    { no: 5, name: "value", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 6, name: "startDate", kind: "message", T: Timestamp },
    { no: 7, name: "endDate", kind: "message", T: Timestamp },
    { no: 8, name: "minPurchaseAmount", kind: "message", T: StringValue },
    { no: 9, name: "maxRedemptions", kind: "message", T: Int32Value },
    { no: 10, name: "maxRedemptionsPerUser", kind: "message", T: Int32Value },
    { no: 11, name: "redemptionQuantity", kind: "message", T: Int32Value },
    { no: 12, name: "Enabled", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 13, name: "translations", kind: "message", T: AdminCouponDetailTranslationResponse, repeated: true },
    { no: 51, name: "avatar", kind: "message", T: DocumentInfoResponse },
    { no: 52, name: "banner", kind: "message", T: DocumentInfoResponse },
    { no: 61, name: "creator", kind: "message", T: ActorInfoResponse, opt: true },
    { no: 62, name: "updater", kind: "message", T: ActorInfoResponse, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AdminCouponDetailResponse {
    return new AdminCouponDetailResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AdminCouponDetailResponse {
    return new AdminCouponDetailResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AdminCouponDetailResponse {
    return new AdminCouponDetailResponse().fromJsonString(jsonString, options);
  }

  static equals(a: AdminCouponDetailResponse | PlainMessage<AdminCouponDetailResponse> | undefined, b: AdminCouponDetailResponse | PlainMessage<AdminCouponDetailResponse> | undefined): boolean {
    return proto3.util.equals(AdminCouponDetailResponse, a, b);
  }
}

/**
 * @generated from message vklink.store.api.v1.coupons.responses.AdminSingleCouponDetailResponse
 */
export class AdminSingleCouponDetailResponse extends Message<AdminSingleCouponDetailResponse> {
  /**
   * @generated from field: vklink.store.api.v1.coupons.responses.AdminCouponDetailResponse value = 1;
   */
  value?: AdminCouponDetailResponse;

  constructor(data?: PartialMessage<AdminSingleCouponDetailResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "vklink.store.api.v1.coupons.responses.AdminSingleCouponDetailResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "message", T: AdminCouponDetailResponse },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AdminSingleCouponDetailResponse {
    return new AdminSingleCouponDetailResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AdminSingleCouponDetailResponse {
    return new AdminSingleCouponDetailResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AdminSingleCouponDetailResponse {
    return new AdminSingleCouponDetailResponse().fromJsonString(jsonString, options);
  }

  static equals(a: AdminSingleCouponDetailResponse | PlainMessage<AdminSingleCouponDetailResponse> | undefined, b: AdminSingleCouponDetailResponse | PlainMessage<AdminSingleCouponDetailResponse> | undefined): boolean {
    return proto3.util.equals(AdminSingleCouponDetailResponse, a, b);
  }
}

