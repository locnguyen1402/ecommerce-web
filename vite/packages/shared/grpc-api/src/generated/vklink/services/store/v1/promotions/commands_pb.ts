// @generated by protoc-gen-es v1.8.0 with parameter "target=ts,import_extension=none"
// @generated from file vklink/services/store/v1/promotions/commands.proto (package vklink.store.api.v1.promotions.commands, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Int32Value, Message, proto3, StringValue, Timestamp } from "@bufbuild/protobuf";
import { HistoryStatus, PromotionConditionType, PromotionType } from "./enums_pb";

/**
 * @generated from message vklink.store.api.v1.promotions.commands.CreatePromotionCommand
 */
export class CreatePromotionCommand extends Message<CreatePromotionCommand> {
  /**
   * @generated from field: string name = 2;
   */
  name = "";

  /**
   * @generated from field: vklink.store.api.v1.promotions.enums.PromotionType promotionType = 3;
   */
  promotionType = PromotionType.UNSPECIFIED;

  /**
   * @generated from field: int32 maxQuantity = 4;
   */
  maxQuantity = 0;

  /**
   * @generated from field: google.protobuf.StringValue description = 5;
   */
  description?: string;

  /**
   * @generated from field: google.protobuf.Timestamp startDate = 6;
   */
  startDate?: Timestamp;

  /**
   * @generated from field: google.protobuf.Timestamp endDate = 7;
   */
  endDate?: Timestamp;

  /**
   * @generated from field: vklink.store.api.v1.promotions.commands.CreatePromotionConditionCommand condition = 51;
   */
  condition?: CreatePromotionConditionCommand;

  constructor(data?: PartialMessage<CreatePromotionCommand>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "vklink.store.api.v1.promotions.commands.CreatePromotionCommand";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 2, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "promotionType", kind: "enum", T: proto3.getEnumType(PromotionType) },
    { no: 4, name: "maxQuantity", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 5, name: "description", kind: "message", T: StringValue },
    { no: 6, name: "startDate", kind: "message", T: Timestamp },
    { no: 7, name: "endDate", kind: "message", T: Timestamp },
    { no: 51, name: "condition", kind: "message", T: CreatePromotionConditionCommand },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CreatePromotionCommand {
    return new CreatePromotionCommand().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CreatePromotionCommand {
    return new CreatePromotionCommand().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CreatePromotionCommand {
    return new CreatePromotionCommand().fromJsonString(jsonString, options);
  }

  static equals(a: CreatePromotionCommand | PlainMessage<CreatePromotionCommand> | undefined, b: CreatePromotionCommand | PlainMessage<CreatePromotionCommand> | undefined): boolean {
    return proto3.util.equals(CreatePromotionCommand, a, b);
  }
}

/**
 * @generated from message vklink.store.api.v1.promotions.commands.CreatePromotionConditionCommand
 */
export class CreatePromotionConditionCommand extends Message<CreatePromotionConditionCommand> {
  /**
   * @generated from field: vklink.store.api.v1.promotions.enums.PromotionConditionType conditionType = 2;
   */
  conditionType = PromotionConditionType.UNSPECIFIED;

  /**
   * @generated from field: google.protobuf.StringValue productId = 3;
   */
  productId?: string;

  /**
   * @generated from field: string totalOrder = 4;
   */
  totalOrder = "";

  /**
   * @generated from field: int32 point = 5;
   */
  point = 0;

  /**
   * @generated from field: repeated vklink.store.api.v1.promotions.commands.PromotionItemCommand items = 51;
   */
  items: PromotionItemCommand[] = [];

  constructor(data?: PartialMessage<CreatePromotionConditionCommand>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "vklink.store.api.v1.promotions.commands.CreatePromotionConditionCommand";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 2, name: "conditionType", kind: "enum", T: proto3.getEnumType(PromotionConditionType) },
    { no: 3, name: "productId", kind: "message", T: StringValue },
    { no: 4, name: "totalOrder", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "point", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 51, name: "items", kind: "message", T: PromotionItemCommand, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CreatePromotionConditionCommand {
    return new CreatePromotionConditionCommand().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CreatePromotionConditionCommand {
    return new CreatePromotionConditionCommand().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CreatePromotionConditionCommand {
    return new CreatePromotionConditionCommand().fromJsonString(jsonString, options);
  }

  static equals(a: CreatePromotionConditionCommand | PlainMessage<CreatePromotionConditionCommand> | undefined, b: CreatePromotionConditionCommand | PlainMessage<CreatePromotionConditionCommand> | undefined): boolean {
    return proto3.util.equals(CreatePromotionConditionCommand, a, b);
  }
}

/**
 * @generated from message vklink.store.api.v1.promotions.commands.PromotionItemCommand
 */
export class PromotionItemCommand extends Message<PromotionItemCommand> {
  /**
   * @generated from field: string productId = 1;
   */
  productId = "";

  /**
   * @generated from field: string productName = 2;
   */
  productName = "";

  /**
   * @generated from field: google.protobuf.StringValue productCode = 3;
   */
  productCode?: string;

  /**
   * @generated from field: int32 quantity = 4;
   */
  quantity = 0;

  constructor(data?: PartialMessage<PromotionItemCommand>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "vklink.store.api.v1.promotions.commands.PromotionItemCommand";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "productId", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "productName", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "productCode", kind: "message", T: StringValue },
    { no: 4, name: "quantity", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): PromotionItemCommand {
    return new PromotionItemCommand().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): PromotionItemCommand {
    return new PromotionItemCommand().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): PromotionItemCommand {
    return new PromotionItemCommand().fromJsonString(jsonString, options);
  }

  static equals(a: PromotionItemCommand | PlainMessage<PromotionItemCommand> | undefined, b: PromotionItemCommand | PlainMessage<PromotionItemCommand> | undefined): boolean {
    return proto3.util.equals(PromotionItemCommand, a, b);
  }
}

/**
 * @generated from message vklink.store.api.v1.promotions.commands.UpdatePromotionCommand
 */
export class UpdatePromotionCommand extends Message<UpdatePromotionCommand> {
  /**
   * @generated from field: string id = 1;
   */
  id = "";

  /**
   * @generated from field: string name = 2;
   */
  name = "";

  /**
   * @generated from field: vklink.store.api.v1.promotions.enums.PromotionType promotionType = 3;
   */
  promotionType = PromotionType.UNSPECIFIED;

  /**
   * @generated from field: int32 maxQuantity = 4;
   */
  maxQuantity = 0;

  /**
   * @generated from field: google.protobuf.StringValue description = 5;
   */
  description?: string;

  /**
   * @generated from field: google.protobuf.Timestamp startDate = 6;
   */
  startDate?: Timestamp;

  /**
   * @generated from field: google.protobuf.Timestamp endDate = 7;
   */
  endDate?: Timestamp;

  /**
   * @generated from field: vklink.store.api.v1.promotions.commands.UpdatePromotionConditionCommand condition = 51;
   */
  condition?: UpdatePromotionConditionCommand;

  constructor(data?: PartialMessage<UpdatePromotionCommand>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "vklink.store.api.v1.promotions.commands.UpdatePromotionCommand";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "promotionType", kind: "enum", T: proto3.getEnumType(PromotionType) },
    { no: 4, name: "maxQuantity", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 5, name: "description", kind: "message", T: StringValue },
    { no: 6, name: "startDate", kind: "message", T: Timestamp },
    { no: 7, name: "endDate", kind: "message", T: Timestamp },
    { no: 51, name: "condition", kind: "message", T: UpdatePromotionConditionCommand },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdatePromotionCommand {
    return new UpdatePromotionCommand().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdatePromotionCommand {
    return new UpdatePromotionCommand().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdatePromotionCommand {
    return new UpdatePromotionCommand().fromJsonString(jsonString, options);
  }

  static equals(a: UpdatePromotionCommand | PlainMessage<UpdatePromotionCommand> | undefined, b: UpdatePromotionCommand | PlainMessage<UpdatePromotionCommand> | undefined): boolean {
    return proto3.util.equals(UpdatePromotionCommand, a, b);
  }
}

/**
 * @generated from message vklink.store.api.v1.promotions.commands.UpdatePromotionConditionCommand
 */
export class UpdatePromotionConditionCommand extends Message<UpdatePromotionConditionCommand> {
  /**
   * @generated from field: google.protobuf.StringValue id = 1;
   */
  id?: string;

  /**
   * @generated from field: vklink.store.api.v1.promotions.enums.PromotionConditionType conditionType = 2;
   */
  conditionType = PromotionConditionType.UNSPECIFIED;

  /**
   * @generated from field: google.protobuf.StringValue productId = 3;
   */
  productId?: string;

  /**
   * @generated from field: string totalOrder = 4;
   */
  totalOrder = "";

  /**
   * @generated from field: int32 point = 5;
   */
  point = 0;

  /**
   * @generated from field: repeated vklink.store.api.v1.promotions.commands.PromotionItemCommand items = 51;
   */
  items: PromotionItemCommand[] = [];

  constructor(data?: PartialMessage<UpdatePromotionConditionCommand>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "vklink.store.api.v1.promotions.commands.UpdatePromotionConditionCommand";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: StringValue },
    { no: 2, name: "conditionType", kind: "enum", T: proto3.getEnumType(PromotionConditionType) },
    { no: 3, name: "productId", kind: "message", T: StringValue },
    { no: 4, name: "totalOrder", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "point", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 51, name: "items", kind: "message", T: PromotionItemCommand, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdatePromotionConditionCommand {
    return new UpdatePromotionConditionCommand().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdatePromotionConditionCommand {
    return new UpdatePromotionConditionCommand().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdatePromotionConditionCommand {
    return new UpdatePromotionConditionCommand().fromJsonString(jsonString, options);
  }

  static equals(a: UpdatePromotionConditionCommand | PlainMessage<UpdatePromotionConditionCommand> | undefined, b: UpdatePromotionConditionCommand | PlainMessage<UpdatePromotionConditionCommand> | undefined): boolean {
    return proto3.util.equals(UpdatePromotionConditionCommand, a, b);
  }
}

/**
 * @generated from message vklink.store.api.v1.promotions.commands.EnablePromotionCommand
 */
export class EnablePromotionCommand extends Message<EnablePromotionCommand> {
  /**
   * @generated from field: string id = 1;
   */
  id = "";

  constructor(data?: PartialMessage<EnablePromotionCommand>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "vklink.store.api.v1.promotions.commands.EnablePromotionCommand";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): EnablePromotionCommand {
    return new EnablePromotionCommand().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): EnablePromotionCommand {
    return new EnablePromotionCommand().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): EnablePromotionCommand {
    return new EnablePromotionCommand().fromJsonString(jsonString, options);
  }

  static equals(a: EnablePromotionCommand | PlainMessage<EnablePromotionCommand> | undefined, b: EnablePromotionCommand | PlainMessage<EnablePromotionCommand> | undefined): boolean {
    return proto3.util.equals(EnablePromotionCommand, a, b);
  }
}

/**
 * @generated from message vklink.store.api.v1.promotions.commands.DisablePromotionCommand
 */
export class DisablePromotionCommand extends Message<DisablePromotionCommand> {
  /**
   * @generated from field: string id = 1;
   */
  id = "";

  constructor(data?: PartialMessage<DisablePromotionCommand>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "vklink.store.api.v1.promotions.commands.DisablePromotionCommand";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DisablePromotionCommand {
    return new DisablePromotionCommand().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DisablePromotionCommand {
    return new DisablePromotionCommand().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DisablePromotionCommand {
    return new DisablePromotionCommand().fromJsonString(jsonString, options);
  }

  static equals(a: DisablePromotionCommand | PlainMessage<DisablePromotionCommand> | undefined, b: DisablePromotionCommand | PlainMessage<DisablePromotionCommand> | undefined): boolean {
    return proto3.util.equals(DisablePromotionCommand, a, b);
  }
}

/**
 * @generated from message vklink.store.api.v1.promotions.commands.UpdatePromotionHistoriesCommand
 */
export class UpdatePromotionHistoriesCommand extends Message<UpdatePromotionHistoriesCommand> {
  /**
   * @generated from field: string orderId = 1;
   */
  orderId = "";

  /**
   * @generated from field: string orderNumber = 2;
   */
  orderNumber = "";

  /**
   * @generated from field: google.protobuf.StringValue customerId = 3;
   */
  customerId?: string;

  /**
   * @generated from field: repeated vklink.store.api.v1.promotions.commands.UpdatePromotionHistoryItemCommand items = 4;
   */
  items: UpdatePromotionHistoryItemCommand[] = [];

  constructor(data?: PartialMessage<UpdatePromotionHistoriesCommand>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "vklink.store.api.v1.promotions.commands.UpdatePromotionHistoriesCommand";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "orderId", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "orderNumber", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "customerId", kind: "message", T: StringValue },
    { no: 4, name: "items", kind: "message", T: UpdatePromotionHistoryItemCommand, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdatePromotionHistoriesCommand {
    return new UpdatePromotionHistoriesCommand().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdatePromotionHistoriesCommand {
    return new UpdatePromotionHistoriesCommand().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdatePromotionHistoriesCommand {
    return new UpdatePromotionHistoriesCommand().fromJsonString(jsonString, options);
  }

  static equals(a: UpdatePromotionHistoriesCommand | PlainMessage<UpdatePromotionHistoriesCommand> | undefined, b: UpdatePromotionHistoriesCommand | PlainMessage<UpdatePromotionHistoriesCommand> | undefined): boolean {
    return proto3.util.equals(UpdatePromotionHistoriesCommand, a, b);
  }
}

/**
 * @generated from message vklink.store.api.v1.promotions.commands.UpdatePromotionHistoryItemCommand
 */
export class UpdatePromotionHistoryItemCommand extends Message<UpdatePromotionHistoryItemCommand> {
  /**
   * @generated from field: string id = 1;
   */
  id = "";

  /**
   * @generated from field: google.protobuf.Int32Value quantity = 2;
   */
  quantity?: number;

  /**
   * @generated from field: vklink.store.api.v1.promotions.enums.HistoryStatus status = 3;
   */
  status = HistoryStatus.UNSPECIFIED;

  constructor(data?: PartialMessage<UpdatePromotionHistoryItemCommand>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "vklink.store.api.v1.promotions.commands.UpdatePromotionHistoryItemCommand";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "quantity", kind: "message", T: Int32Value },
    { no: 3, name: "status", kind: "enum", T: proto3.getEnumType(HistoryStatus) },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdatePromotionHistoryItemCommand {
    return new UpdatePromotionHistoryItemCommand().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdatePromotionHistoryItemCommand {
    return new UpdatePromotionHistoryItemCommand().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdatePromotionHistoryItemCommand {
    return new UpdatePromotionHistoryItemCommand().fromJsonString(jsonString, options);
  }

  static equals(a: UpdatePromotionHistoryItemCommand | PlainMessage<UpdatePromotionHistoryItemCommand> | undefined, b: UpdatePromotionHistoryItemCommand | PlainMessage<UpdatePromotionHistoryItemCommand> | undefined): boolean {
    return proto3.util.equals(UpdatePromotionHistoryItemCommand, a, b);
  }
}

