// @generated by protoc-gen-es v1.8.0 with parameter "target=ts,import_extension=none"
// @generated from file vklink/services/ordering/v1/orders/queries.proto (package vklink.ordering.api.v1.orders.queries, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3, StringValue } from "@bufbuild/protobuf";
import { FilteringParams } from "../../../../libs/data/params/filtering_params_pb";
import { SortingParams } from "../../../../libs/data/params/sorting_params_pb";
import { PagingParams } from "../../../../libs/data/params/paging_params_pb";
import { ReportFilterBy, ReportType } from "./enums_pb";

/**
 * @generated from message vklink.ordering.api.v1.orders.queries.FindOrderByIdQuery
 */
export class FindOrderByIdQuery extends Message<FindOrderByIdQuery> {
  /**
   * @generated from field: string id = 1;
   */
  id = "";

  constructor(data?: PartialMessage<FindOrderByIdQuery>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "vklink.ordering.api.v1.orders.queries.FindOrderByIdQuery";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): FindOrderByIdQuery {
    return new FindOrderByIdQuery().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): FindOrderByIdQuery {
    return new FindOrderByIdQuery().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): FindOrderByIdQuery {
    return new FindOrderByIdQuery().fromJsonString(jsonString, options);
  }

  static equals(a: FindOrderByIdQuery | PlainMessage<FindOrderByIdQuery> | undefined, b: FindOrderByIdQuery | PlainMessage<FindOrderByIdQuery> | undefined): boolean {
    return proto3.util.equals(FindOrderByIdQuery, a, b);
  }
}

/**
 * @generated from message vklink.ordering.api.v1.orders.queries.FindOrderByOrderNumberQuery
 */
export class FindOrderByOrderNumberQuery extends Message<FindOrderByOrderNumberQuery> {
  /**
   * @generated from field: string orderNumber = 1;
   */
  orderNumber = "";

  constructor(data?: PartialMessage<FindOrderByOrderNumberQuery>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "vklink.ordering.api.v1.orders.queries.FindOrderByOrderNumberQuery";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "orderNumber", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): FindOrderByOrderNumberQuery {
    return new FindOrderByOrderNumberQuery().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): FindOrderByOrderNumberQuery {
    return new FindOrderByOrderNumberQuery().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): FindOrderByOrderNumberQuery {
    return new FindOrderByOrderNumberQuery().fromJsonString(jsonString, options);
  }

  static equals(a: FindOrderByOrderNumberQuery | PlainMessage<FindOrderByOrderNumberQuery> | undefined, b: FindOrderByOrderNumberQuery | PlainMessage<FindOrderByOrderNumberQuery> | undefined): boolean {
    return proto3.util.equals(FindOrderByOrderNumberQuery, a, b);
  }
}

/**
 * @generated from message vklink.ordering.api.v1.orders.queries.GetOrdersQuery
 */
export class GetOrdersQuery extends Message<GetOrdersQuery> {
  /**
   * @generated from field: vklink.data.params.FilteringParams filter = 1;
   */
  filter?: FilteringParams;

  /**
   * @generated from field: repeated vklink.data.params.SortingParams sortBy = 2;
   */
  sortBy: SortingParams[] = [];

  /**
   * @generated from field: vklink.data.params.PagingParams paging = 3;
   */
  paging?: PagingParams;

  constructor(data?: PartialMessage<GetOrdersQuery>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "vklink.ordering.api.v1.orders.queries.GetOrdersQuery";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "filter", kind: "message", T: FilteringParams },
    { no: 2, name: "sortBy", kind: "message", T: SortingParams, repeated: true },
    { no: 3, name: "paging", kind: "message", T: PagingParams },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetOrdersQuery {
    return new GetOrdersQuery().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetOrdersQuery {
    return new GetOrdersQuery().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetOrdersQuery {
    return new GetOrdersQuery().fromJsonString(jsonString, options);
  }

  static equals(a: GetOrdersQuery | PlainMessage<GetOrdersQuery> | undefined, b: GetOrdersQuery | PlainMessage<GetOrdersQuery> | undefined): boolean {
    return proto3.util.equals(GetOrdersQuery, a, b);
  }
}

/**
 * @generated from message vklink.ordering.api.v1.orders.queries.GetDashboardReportQuery
 */
export class GetDashboardReportQuery extends Message<GetDashboardReportQuery> {
  /**
   * @generated from field: google.protobuf.StringValue startDate = 1;
   */
  startDate?: string;

  /**
   * @generated from field: google.protobuf.StringValue endDate = 2;
   */
  endDate?: string;

  /**
   * @generated from field: google.protobuf.StringValue storeId = 3;
   */
  storeId?: string;

  /**
   * @generated from field: vklink.ordering.api.v1.orders.responses.ReportFilterBy filterBy = 4;
   */
  filterBy = ReportFilterBy.UNSPECIFIED;

  /**
   * @generated from field: vklink.ordering.api.v1.orders.responses.ReportType type = 5;
   */
  type = ReportType.UNSPECIFIED;

  constructor(data?: PartialMessage<GetDashboardReportQuery>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "vklink.ordering.api.v1.orders.queries.GetDashboardReportQuery";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "startDate", kind: "message", T: StringValue },
    { no: 2, name: "endDate", kind: "message", T: StringValue },
    { no: 3, name: "storeId", kind: "message", T: StringValue },
    { no: 4, name: "filterBy", kind: "enum", T: proto3.getEnumType(ReportFilterBy) },
    { no: 5, name: "type", kind: "enum", T: proto3.getEnumType(ReportType) },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetDashboardReportQuery {
    return new GetDashboardReportQuery().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetDashboardReportQuery {
    return new GetDashboardReportQuery().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetDashboardReportQuery {
    return new GetDashboardReportQuery().fromJsonString(jsonString, options);
  }

  static equals(a: GetDashboardReportQuery | PlainMessage<GetDashboardReportQuery> | undefined, b: GetDashboardReportQuery | PlainMessage<GetDashboardReportQuery> | undefined): boolean {
    return proto3.util.equals(GetDashboardReportQuery, a, b);
  }
}

/**
 * @generated from message vklink.ordering.api.v1.orders.queries.GetDashboardTopServiceReportQuery
 */
export class GetDashboardTopServiceReportQuery extends Message<GetDashboardTopServiceReportQuery> {
  /**
   * @generated from field: google.protobuf.StringValue startDate = 1;
   */
  startDate?: string;

  /**
   * @generated from field: google.protobuf.StringValue endDate = 2;
   */
  endDate?: string;

  /**
   * @generated from field: google.protobuf.StringValue storeId = 3;
   */
  storeId?: string;

  /**
   * @generated from field: int32 size = 4;
   */
  size = 0;

  constructor(data?: PartialMessage<GetDashboardTopServiceReportQuery>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "vklink.ordering.api.v1.orders.queries.GetDashboardTopServiceReportQuery";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "startDate", kind: "message", T: StringValue },
    { no: 2, name: "endDate", kind: "message", T: StringValue },
    { no: 3, name: "storeId", kind: "message", T: StringValue },
    { no: 4, name: "size", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetDashboardTopServiceReportQuery {
    return new GetDashboardTopServiceReportQuery().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetDashboardTopServiceReportQuery {
    return new GetDashboardTopServiceReportQuery().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetDashboardTopServiceReportQuery {
    return new GetDashboardTopServiceReportQuery().fromJsonString(jsonString, options);
  }

  static equals(a: GetDashboardTopServiceReportQuery | PlainMessage<GetDashboardTopServiceReportQuery> | undefined, b: GetDashboardTopServiceReportQuery | PlainMessage<GetDashboardTopServiceReportQuery> | undefined): boolean {
    return proto3.util.equals(GetDashboardTopServiceReportQuery, a, b);
  }
}

/**
 * @generated from message vklink.ordering.api.v1.orders.queries.GetOrderSummaryReportQuery
 */
export class GetOrderSummaryReportQuery extends Message<GetOrderSummaryReportQuery> {
  /**
   * @generated from field: google.protobuf.StringValue startDate = 1;
   */
  startDate?: string;

  /**
   * @generated from field: google.protobuf.StringValue endDate = 2;
   */
  endDate?: string;

  /**
   * @generated from field: google.protobuf.StringValue storeId = 3;
   */
  storeId?: string;

  /**
   * @generated from field: vklink.data.params.FilteringParams filter = 4;
   */
  filter?: FilteringParams;

  /**
   * @generated from field: repeated vklink.data.params.SortingParams sortBy = 5;
   */
  sortBy: SortingParams[] = [];

  /**
   * @generated from field: vklink.data.params.PagingParams paging = 6;
   */
  paging?: PagingParams;

  constructor(data?: PartialMessage<GetOrderSummaryReportQuery>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "vklink.ordering.api.v1.orders.queries.GetOrderSummaryReportQuery";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "startDate", kind: "message", T: StringValue },
    { no: 2, name: "endDate", kind: "message", T: StringValue },
    { no: 3, name: "storeId", kind: "message", T: StringValue },
    { no: 4, name: "filter", kind: "message", T: FilteringParams },
    { no: 5, name: "sortBy", kind: "message", T: SortingParams, repeated: true },
    { no: 6, name: "paging", kind: "message", T: PagingParams },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetOrderSummaryReportQuery {
    return new GetOrderSummaryReportQuery().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetOrderSummaryReportQuery {
    return new GetOrderSummaryReportQuery().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetOrderSummaryReportQuery {
    return new GetOrderSummaryReportQuery().fromJsonString(jsonString, options);
  }

  static equals(a: GetOrderSummaryReportQuery | PlainMessage<GetOrderSummaryReportQuery> | undefined, b: GetOrderSummaryReportQuery | PlainMessage<GetOrderSummaryReportQuery> | undefined): boolean {
    return proto3.util.equals(GetOrderSummaryReportQuery, a, b);
  }
}

/**
 * @generated from message vklink.ordering.api.v1.orders.queries.GetOrderCustomerReportQuery
 */
export class GetOrderCustomerReportQuery extends Message<GetOrderCustomerReportQuery> {
  /**
   * @generated from field: google.protobuf.StringValue startDate = 1;
   */
  startDate?: string;

  /**
   * @generated from field: google.protobuf.StringValue endDate = 2;
   */
  endDate?: string;

  /**
   * @generated from field: repeated string customerIds = 3;
   */
  customerIds: string[] = [];

  constructor(data?: PartialMessage<GetOrderCustomerReportQuery>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "vklink.ordering.api.v1.orders.queries.GetOrderCustomerReportQuery";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "startDate", kind: "message", T: StringValue },
    { no: 2, name: "endDate", kind: "message", T: StringValue },
    { no: 3, name: "customerIds", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetOrderCustomerReportQuery {
    return new GetOrderCustomerReportQuery().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetOrderCustomerReportQuery {
    return new GetOrderCustomerReportQuery().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetOrderCustomerReportQuery {
    return new GetOrderCustomerReportQuery().fromJsonString(jsonString, options);
  }

  static equals(a: GetOrderCustomerReportQuery | PlainMessage<GetOrderCustomerReportQuery> | undefined, b: GetOrderCustomerReportQuery | PlainMessage<GetOrderCustomerReportQuery> | undefined): boolean {
    return proto3.util.equals(GetOrderCustomerReportQuery, a, b);
  }
}

/**
 * @generated from message vklink.ordering.api.v1.orders.queries.ExportOrderSummaryReportQuery
 */
export class ExportOrderSummaryReportQuery extends Message<ExportOrderSummaryReportQuery> {
  /**
   * @generated from field: google.protobuf.StringValue startDate = 1;
   */
  startDate?: string;

  /**
   * @generated from field: google.protobuf.StringValue endDate = 2;
   */
  endDate?: string;

  /**
   * @generated from field: google.protobuf.StringValue storeId = 3;
   */
  storeId?: string;

  /**
   * @generated from field: vklink.data.params.FilteringParams filter = 4;
   */
  filter?: FilteringParams;

  /**
   * @generated from field: repeated vklink.data.params.SortingParams sortBy = 5;
   */
  sortBy: SortingParams[] = [];

  /**
   * @generated from field: vklink.data.params.PagingParams paging = 6;
   */
  paging?: PagingParams;

  constructor(data?: PartialMessage<ExportOrderSummaryReportQuery>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "vklink.ordering.api.v1.orders.queries.ExportOrderSummaryReportQuery";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "startDate", kind: "message", T: StringValue },
    { no: 2, name: "endDate", kind: "message", T: StringValue },
    { no: 3, name: "storeId", kind: "message", T: StringValue },
    { no: 4, name: "filter", kind: "message", T: FilteringParams },
    { no: 5, name: "sortBy", kind: "message", T: SortingParams, repeated: true },
    { no: 6, name: "paging", kind: "message", T: PagingParams },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ExportOrderSummaryReportQuery {
    return new ExportOrderSummaryReportQuery().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ExportOrderSummaryReportQuery {
    return new ExportOrderSummaryReportQuery().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ExportOrderSummaryReportQuery {
    return new ExportOrderSummaryReportQuery().fromJsonString(jsonString, options);
  }

  static equals(a: ExportOrderSummaryReportQuery | PlainMessage<ExportOrderSummaryReportQuery> | undefined, b: ExportOrderSummaryReportQuery | PlainMessage<ExportOrderSummaryReportQuery> | undefined): boolean {
    return proto3.util.equals(ExportOrderSummaryReportQuery, a, b);
  }
}

/**
 * @generated from message vklink.ordering.api.v1.orders.queries.GetOrderCouponReportQuery
 */
export class GetOrderCouponReportQuery extends Message<GetOrderCouponReportQuery> {
  /**
   * @generated from field: google.protobuf.StringValue startDate = 1;
   */
  startDate?: string;

  /**
   * @generated from field: google.protobuf.StringValue endDate = 2;
   */
  endDate?: string;

  /**
   * @generated from field: google.protobuf.StringValue keyword = 3;
   */
  keyword?: string;

  /**
   * @generated from field: vklink.data.params.FilteringParams filter = 4;
   */
  filter?: FilteringParams;

  /**
   * @generated from field: repeated vklink.data.params.SortingParams sortBy = 5;
   */
  sortBy: SortingParams[] = [];

  /**
   * @generated from field: vklink.data.params.PagingParams paging = 6;
   */
  paging?: PagingParams;

  /**
   * @generated from field: repeated string couponCodes = 7;
   */
  couponCodes: string[] = [];

  constructor(data?: PartialMessage<GetOrderCouponReportQuery>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "vklink.ordering.api.v1.orders.queries.GetOrderCouponReportQuery";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "startDate", kind: "message", T: StringValue },
    { no: 2, name: "endDate", kind: "message", T: StringValue },
    { no: 3, name: "keyword", kind: "message", T: StringValue },
    { no: 4, name: "filter", kind: "message", T: FilteringParams },
    { no: 5, name: "sortBy", kind: "message", T: SortingParams, repeated: true },
    { no: 6, name: "paging", kind: "message", T: PagingParams },
    { no: 7, name: "couponCodes", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetOrderCouponReportQuery {
    return new GetOrderCouponReportQuery().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetOrderCouponReportQuery {
    return new GetOrderCouponReportQuery().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetOrderCouponReportQuery {
    return new GetOrderCouponReportQuery().fromJsonString(jsonString, options);
  }

  static equals(a: GetOrderCouponReportQuery | PlainMessage<GetOrderCouponReportQuery> | undefined, b: GetOrderCouponReportQuery | PlainMessage<GetOrderCouponReportQuery> | undefined): boolean {
    return proto3.util.equals(GetOrderCouponReportQuery, a, b);
  }
}

/**
 * @generated from message vklink.ordering.api.v1.orders.queries.GetOrderProductReportQuery
 */
export class GetOrderProductReportQuery extends Message<GetOrderProductReportQuery> {
  /**
   * @generated from field: repeated string productIds = 1;
   */
  productIds: string[] = [];

  /**
   * @generated from field: google.protobuf.StringValue startDate = 2;
   */
  startDate?: string;

  /**
   * @generated from field: google.protobuf.StringValue endDate = 3;
   */
  endDate?: string;

  /**
   * @generated from field: google.protobuf.StringValue storeId = 4;
   */
  storeId?: string;

  /**
   * @generated from field: google.protobuf.StringValue keyword = 5;
   */
  keyword?: string;

  /**
   * @generated from field: vklink.data.params.PagingParams paging = 6;
   */
  paging?: PagingParams;

  constructor(data?: PartialMessage<GetOrderProductReportQuery>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "vklink.ordering.api.v1.orders.queries.GetOrderProductReportQuery";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "productIds", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
    { no: 2, name: "startDate", kind: "message", T: StringValue },
    { no: 3, name: "endDate", kind: "message", T: StringValue },
    { no: 4, name: "storeId", kind: "message", T: StringValue },
    { no: 5, name: "keyword", kind: "message", T: StringValue },
    { no: 6, name: "paging", kind: "message", T: PagingParams },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetOrderProductReportQuery {
    return new GetOrderProductReportQuery().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetOrderProductReportQuery {
    return new GetOrderProductReportQuery().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetOrderProductReportQuery {
    return new GetOrderProductReportQuery().fromJsonString(jsonString, options);
  }

  static equals(a: GetOrderProductReportQuery | PlainMessage<GetOrderProductReportQuery> | undefined, b: GetOrderProductReportQuery | PlainMessage<GetOrderProductReportQuery> | undefined): boolean {
    return proto3.util.equals(GetOrderProductReportQuery, a, b);
  }
}

/**
 * @generated from message vklink.ordering.api.v1.orders.queries.GetDashboardOrderByCustomerReportQuery
 */
export class GetDashboardOrderByCustomerReportQuery extends Message<GetDashboardOrderByCustomerReportQuery> {
  /**
   * @generated from field: google.protobuf.StringValue startDate = 1;
   */
  startDate?: string;

  /**
   * @generated from field: google.protobuf.StringValue endDate = 2;
   */
  endDate?: string;

  /**
   * @generated from field: google.protobuf.StringValue storeId = 3;
   */
  storeId?: string;

  /**
   * @generated from field: int32 size = 4;
   */
  size = 0;

  constructor(data?: PartialMessage<GetDashboardOrderByCustomerReportQuery>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "vklink.ordering.api.v1.orders.queries.GetDashboardOrderByCustomerReportQuery";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "startDate", kind: "message", T: StringValue },
    { no: 2, name: "endDate", kind: "message", T: StringValue },
    { no: 3, name: "storeId", kind: "message", T: StringValue },
    { no: 4, name: "size", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetDashboardOrderByCustomerReportQuery {
    return new GetDashboardOrderByCustomerReportQuery().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetDashboardOrderByCustomerReportQuery {
    return new GetDashboardOrderByCustomerReportQuery().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetDashboardOrderByCustomerReportQuery {
    return new GetDashboardOrderByCustomerReportQuery().fromJsonString(jsonString, options);
  }

  static equals(a: GetDashboardOrderByCustomerReportQuery | PlainMessage<GetDashboardOrderByCustomerReportQuery> | undefined, b: GetDashboardOrderByCustomerReportQuery | PlainMessage<GetDashboardOrderByCustomerReportQuery> | undefined): boolean {
    return proto3.util.equals(GetDashboardOrderByCustomerReportQuery, a, b);
  }
}

/**
 * @generated from message vklink.ordering.api.v1.orders.queries.GetAdminOrdersQuery
 */
export class GetAdminOrdersQuery extends Message<GetAdminOrdersQuery> {
  /**
   * @generated from field: vklink.data.params.FilteringParams filter = 1;
   */
  filter?: FilteringParams;

  /**
   * @generated from field: repeated vklink.data.params.SortingParams sortBy = 2;
   */
  sortBy: SortingParams[] = [];

  /**
   * @generated from field: vklink.data.params.PagingParams paging = 3;
   */
  paging?: PagingParams;

  constructor(data?: PartialMessage<GetAdminOrdersQuery>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "vklink.ordering.api.v1.orders.queries.GetAdminOrdersQuery";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "filter", kind: "message", T: FilteringParams },
    { no: 2, name: "sortBy", kind: "message", T: SortingParams, repeated: true },
    { no: 3, name: "paging", kind: "message", T: PagingParams },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetAdminOrdersQuery {
    return new GetAdminOrdersQuery().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetAdminOrdersQuery {
    return new GetAdminOrdersQuery().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetAdminOrdersQuery {
    return new GetAdminOrdersQuery().fromJsonString(jsonString, options);
  }

  static equals(a: GetAdminOrdersQuery | PlainMessage<GetAdminOrdersQuery> | undefined, b: GetAdminOrdersQuery | PlainMessage<GetAdminOrdersQuery> | undefined): boolean {
    return proto3.util.equals(GetAdminOrdersQuery, a, b);
  }
}

/**
 * @generated from message vklink.ordering.api.v1.orders.queries.GetAdminWidgetOrdersQuery
 */
export class GetAdminWidgetOrdersQuery extends Message<GetAdminWidgetOrdersQuery> {
  /**
   * @generated from field: vklink.data.params.FilteringParams filter = 1;
   */
  filter?: FilteringParams;

  /**
   * @generated from field: repeated vklink.data.params.SortingParams sortBy = 2;
   */
  sortBy: SortingParams[] = [];

  /**
   * @generated from field: vklink.data.params.PagingParams paging = 3;
   */
  paging?: PagingParams;

  constructor(data?: PartialMessage<GetAdminWidgetOrdersQuery>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "vklink.ordering.api.v1.orders.queries.GetAdminWidgetOrdersQuery";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "filter", kind: "message", T: FilteringParams },
    { no: 2, name: "sortBy", kind: "message", T: SortingParams, repeated: true },
    { no: 3, name: "paging", kind: "message", T: PagingParams },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetAdminWidgetOrdersQuery {
    return new GetAdminWidgetOrdersQuery().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetAdminWidgetOrdersQuery {
    return new GetAdminWidgetOrdersQuery().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetAdminWidgetOrdersQuery {
    return new GetAdminWidgetOrdersQuery().fromJsonString(jsonString, options);
  }

  static equals(a: GetAdminWidgetOrdersQuery | PlainMessage<GetAdminWidgetOrdersQuery> | undefined, b: GetAdminWidgetOrdersQuery | PlainMessage<GetAdminWidgetOrdersQuery> | undefined): boolean {
    return proto3.util.equals(GetAdminWidgetOrdersQuery, a, b);
  }
}

/**
 * @generated from message vklink.ordering.api.v1.orders.queries.MobileGetOrdersQuery
 */
export class MobileGetOrdersQuery extends Message<MobileGetOrdersQuery> {
  /**
   * @generated from field: vklink.data.params.FilteringParams filter = 1;
   */
  filter?: FilteringParams;

  /**
   * @generated from field: repeated vklink.data.params.SortingParams sortBy = 2;
   */
  sortBy: SortingParams[] = [];

  /**
   * @generated from field: vklink.data.params.PagingParams paging = 3;
   */
  paging?: PagingParams;

  constructor(data?: PartialMessage<MobileGetOrdersQuery>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "vklink.ordering.api.v1.orders.queries.MobileGetOrdersQuery";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "filter", kind: "message", T: FilteringParams },
    { no: 2, name: "sortBy", kind: "message", T: SortingParams, repeated: true },
    { no: 3, name: "paging", kind: "message", T: PagingParams },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MobileGetOrdersQuery {
    return new MobileGetOrdersQuery().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MobileGetOrdersQuery {
    return new MobileGetOrdersQuery().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MobileGetOrdersQuery {
    return new MobileGetOrdersQuery().fromJsonString(jsonString, options);
  }

  static equals(a: MobileGetOrdersQuery | PlainMessage<MobileGetOrdersQuery> | undefined, b: MobileGetOrdersQuery | PlainMessage<MobileGetOrdersQuery> | undefined): boolean {
    return proto3.util.equals(MobileGetOrdersQuery, a, b);
  }
}

