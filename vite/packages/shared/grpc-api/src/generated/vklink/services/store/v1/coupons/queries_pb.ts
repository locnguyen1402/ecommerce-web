// @generated by protoc-gen-es v1.8.0 with parameter "target=ts,import_extension=none"
// @generated from file vklink/services/store/v1/coupons/queries.proto (package vklink.store.api.v1.coupons.queries, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3, StringValue } from "@bufbuild/protobuf";
import { FilteringParams } from "../../../../libs/data/params/filtering_params_pb";
import { SortingParams } from "../../../../libs/data/params/sorting_params_pb";
import { PagingParams } from "../../../../libs/data/params/paging_params_pb";

/**
 * @generated from message vklink.store.api.v1.coupons.queries.GetCouponsQuery
 */
export class GetCouponsQuery extends Message<GetCouponsQuery> {
  /**
   * @generated from field: vklink.data.params.FilteringParams filter = 1;
   */
  filter?: FilteringParams;

  /**
   * @generated from field: repeated vklink.data.params.SortingParams sortBy = 2;
   */
  sortBy: SortingParams[] = [];

  /**
   * @generated from field: vklink.data.params.PagingParams paging = 3;
   */
  paging?: PagingParams;

  constructor(data?: PartialMessage<GetCouponsQuery>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "vklink.store.api.v1.coupons.queries.GetCouponsQuery";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "filter", kind: "message", T: FilteringParams },
    { no: 2, name: "sortBy", kind: "message", T: SortingParams, repeated: true },
    { no: 3, name: "paging", kind: "message", T: PagingParams },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetCouponsQuery {
    return new GetCouponsQuery().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetCouponsQuery {
    return new GetCouponsQuery().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetCouponsQuery {
    return new GetCouponsQuery().fromJsonString(jsonString, options);
  }

  static equals(a: GetCouponsQuery | PlainMessage<GetCouponsQuery> | undefined, b: GetCouponsQuery | PlainMessage<GetCouponsQuery> | undefined): boolean {
    return proto3.util.equals(GetCouponsQuery, a, b);
  }
}

/**
 * @generated from message vklink.store.api.v1.coupons.queries.GetCouponByIdQuery
 */
export class GetCouponByIdQuery extends Message<GetCouponByIdQuery> {
  /**
   * @generated from field: string id = 1;
   */
  id = "";

  constructor(data?: PartialMessage<GetCouponByIdQuery>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "vklink.store.api.v1.coupons.queries.GetCouponByIdQuery";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetCouponByIdQuery {
    return new GetCouponByIdQuery().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetCouponByIdQuery {
    return new GetCouponByIdQuery().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetCouponByIdQuery {
    return new GetCouponByIdQuery().fromJsonString(jsonString, options);
  }

  static equals(a: GetCouponByIdQuery | PlainMessage<GetCouponByIdQuery> | undefined, b: GetCouponByIdQuery | PlainMessage<GetCouponByIdQuery> | undefined): boolean {
    return proto3.util.equals(GetCouponByIdQuery, a, b);
  }
}

/**
 * @generated from message vklink.store.api.v1.coupons.queries.GetCouponByCodeQuery
 */
export class GetCouponByCodeQuery extends Message<GetCouponByCodeQuery> {
  /**
   * @generated from field: string code = 1;
   */
  code = "";

  constructor(data?: PartialMessage<GetCouponByCodeQuery>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "vklink.store.api.v1.coupons.queries.GetCouponByCodeQuery";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "code", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetCouponByCodeQuery {
    return new GetCouponByCodeQuery().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetCouponByCodeQuery {
    return new GetCouponByCodeQuery().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetCouponByCodeQuery {
    return new GetCouponByCodeQuery().fromJsonString(jsonString, options);
  }

  static equals(a: GetCouponByCodeQuery | PlainMessage<GetCouponByCodeQuery> | undefined, b: GetCouponByCodeQuery | PlainMessage<GetCouponByCodeQuery> | undefined): boolean {
    return proto3.util.equals(GetCouponByCodeQuery, a, b);
  }
}

/**
 * @generated from message vklink.store.api.v1.coupons.queries.GetAdminCouponsQuery
 */
export class GetAdminCouponsQuery extends Message<GetAdminCouponsQuery> {
  /**
   * @generated from field: vklink.data.params.FilteringParams filter = 1;
   */
  filter?: FilteringParams;

  /**
   * @generated from field: repeated vklink.data.params.SortingParams sortBy = 2;
   */
  sortBy: SortingParams[] = [];

  /**
   * @generated from field: vklink.data.params.PagingParams paging = 3;
   */
  paging?: PagingParams;

  constructor(data?: PartialMessage<GetAdminCouponsQuery>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "vklink.store.api.v1.coupons.queries.GetAdminCouponsQuery";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "filter", kind: "message", T: FilteringParams },
    { no: 2, name: "sortBy", kind: "message", T: SortingParams, repeated: true },
    { no: 3, name: "paging", kind: "message", T: PagingParams },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetAdminCouponsQuery {
    return new GetAdminCouponsQuery().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetAdminCouponsQuery {
    return new GetAdminCouponsQuery().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetAdminCouponsQuery {
    return new GetAdminCouponsQuery().fromJsonString(jsonString, options);
  }

  static equals(a: GetAdminCouponsQuery | PlainMessage<GetAdminCouponsQuery> | undefined, b: GetAdminCouponsQuery | PlainMessage<GetAdminCouponsQuery> | undefined): boolean {
    return proto3.util.equals(GetAdminCouponsQuery, a, b);
  }
}

/**
 * @generated from message vklink.store.api.v1.coupons.queries.GetCouponReportQuery
 */
export class GetCouponReportQuery extends Message<GetCouponReportQuery> {
  /**
   * @generated from field: google.protobuf.StringValue startDate = 1;
   */
  startDate?: string;

  /**
   * @generated from field: google.protobuf.StringValue endDate = 2;
   */
  endDate?: string;

  /**
   * @generated from field: google.protobuf.StringValue keyword = 3;
   */
  keyword?: string;

  /**
   * @generated from field: vklink.data.params.FilteringParams filter = 4;
   */
  filter?: FilteringParams;

  /**
   * @generated from field: repeated vklink.data.params.SortingParams sortBy = 5;
   */
  sortBy: SortingParams[] = [];

  /**
   * @generated from field: vklink.data.params.PagingParams paging = 6;
   */
  paging?: PagingParams;

  /**
   * @generated from field: vklink.data.params.FilteringParams orderFilter = 7;
   */
  orderFilter?: FilteringParams;

  /**
   * @generated from field: google.protobuf.StringValue orderKeyword = 8;
   */
  orderKeyword?: string;

  constructor(data?: PartialMessage<GetCouponReportQuery>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "vklink.store.api.v1.coupons.queries.GetCouponReportQuery";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "startDate", kind: "message", T: StringValue },
    { no: 2, name: "endDate", kind: "message", T: StringValue },
    { no: 3, name: "keyword", kind: "message", T: StringValue },
    { no: 4, name: "filter", kind: "message", T: FilteringParams },
    { no: 5, name: "sortBy", kind: "message", T: SortingParams, repeated: true },
    { no: 6, name: "paging", kind: "message", T: PagingParams },
    { no: 7, name: "orderFilter", kind: "message", T: FilteringParams },
    { no: 8, name: "orderKeyword", kind: "message", T: StringValue },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetCouponReportQuery {
    return new GetCouponReportQuery().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetCouponReportQuery {
    return new GetCouponReportQuery().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetCouponReportQuery {
    return new GetCouponReportQuery().fromJsonString(jsonString, options);
  }

  static equals(a: GetCouponReportQuery | PlainMessage<GetCouponReportQuery> | undefined, b: GetCouponReportQuery | PlainMessage<GetCouponReportQuery> | undefined): boolean {
    return proto3.util.equals(GetCouponReportQuery, a, b);
  }
}

/**
 * @generated from message vklink.store.api.v1.coupons.queries.ExportCouponReportQuery
 */
export class ExportCouponReportQuery extends Message<ExportCouponReportQuery> {
  /**
   * @generated from field: google.protobuf.StringValue startDate = 1;
   */
  startDate?: string;

  /**
   * @generated from field: google.protobuf.StringValue endDate = 2;
   */
  endDate?: string;

  /**
   * @generated from field: google.protobuf.StringValue keyword = 3;
   */
  keyword?: string;

  /**
   * @generated from field: vklink.data.params.FilteringParams filter = 4;
   */
  filter?: FilteringParams;

  /**
   * @generated from field: repeated vklink.data.params.SortingParams sortBy = 5;
   */
  sortBy: SortingParams[] = [];

  /**
   * @generated from field: vklink.data.params.PagingParams paging = 6;
   */
  paging?: PagingParams;

  /**
   * @generated from field: vklink.data.params.FilteringParams orderFilter = 7;
   */
  orderFilter?: FilteringParams;

  /**
   * @generated from field: google.protobuf.StringValue orderKeyword = 8;
   */
  orderKeyword?: string;

  constructor(data?: PartialMessage<ExportCouponReportQuery>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "vklink.store.api.v1.coupons.queries.ExportCouponReportQuery";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "startDate", kind: "message", T: StringValue },
    { no: 2, name: "endDate", kind: "message", T: StringValue },
    { no: 3, name: "keyword", kind: "message", T: StringValue },
    { no: 4, name: "filter", kind: "message", T: FilteringParams },
    { no: 5, name: "sortBy", kind: "message", T: SortingParams, repeated: true },
    { no: 6, name: "paging", kind: "message", T: PagingParams },
    { no: 7, name: "orderFilter", kind: "message", T: FilteringParams },
    { no: 8, name: "orderKeyword", kind: "message", T: StringValue },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ExportCouponReportQuery {
    return new ExportCouponReportQuery().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ExportCouponReportQuery {
    return new ExportCouponReportQuery().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ExportCouponReportQuery {
    return new ExportCouponReportQuery().fromJsonString(jsonString, options);
  }

  static equals(a: ExportCouponReportQuery | PlainMessage<ExportCouponReportQuery> | undefined, b: ExportCouponReportQuery | PlainMessage<ExportCouponReportQuery> | undefined): boolean {
    return proto3.util.equals(ExportCouponReportQuery, a, b);
  }
}

/**
 * @generated from message vklink.store.api.v1.coupons.queries.AdminGetCouponByIdQuery
 */
export class AdminGetCouponByIdQuery extends Message<AdminGetCouponByIdQuery> {
  /**
   * @generated from field: string id = 1;
   */
  id = "";

  constructor(data?: PartialMessage<AdminGetCouponByIdQuery>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "vklink.store.api.v1.coupons.queries.AdminGetCouponByIdQuery";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AdminGetCouponByIdQuery {
    return new AdminGetCouponByIdQuery().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AdminGetCouponByIdQuery {
    return new AdminGetCouponByIdQuery().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AdminGetCouponByIdQuery {
    return new AdminGetCouponByIdQuery().fromJsonString(jsonString, options);
  }

  static equals(a: AdminGetCouponByIdQuery | PlainMessage<AdminGetCouponByIdQuery> | undefined, b: AdminGetCouponByIdQuery | PlainMessage<AdminGetCouponByIdQuery> | undefined): boolean {
    return proto3.util.equals(AdminGetCouponByIdQuery, a, b);
  }
}

