// @generated by protoc-gen-es v1.8.0 with parameter "target=ts,import_extension=none"
// @generated from file vklink/services/store/v1/coupons/commands.proto (package vklink.store.api.v1.coupons.commands, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Int32Value, Message, proto3, StringValue, Timestamp } from "@bufbuild/protobuf";
import { LanguageCode } from "../../../../libs/common/enums/language_code_pb";
import { CreateDocumentInfoCommand } from "../../../../libs/common/commands/create_document_info_command_pb";
import { CouponType } from "./enums_pb";

/**
 * @generated from message vklink.store.api.v1.coupons.commands.CouponTranslationCommand
 */
export class CouponTranslationCommand extends Message<CouponTranslationCommand> {
  /**
   * @generated from field: vklink.grpc.enums.LanguageCode langCode = 1;
   */
  langCode = LanguageCode.UNSPECIFIED;

  /**
   * @generated from field: google.protobuf.StringValue description = 2;
   */
  description?: string;

  /**
   * @generated from field: vklink.common.commands.CreateDocumentInfoCommand avatar = 3;
   */
  avatar?: CreateDocumentInfoCommand;

  /**
   * @generated from field: vklink.common.commands.CreateDocumentInfoCommand banner = 4;
   */
  banner?: CreateDocumentInfoCommand;

  constructor(data?: PartialMessage<CouponTranslationCommand>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "vklink.store.api.v1.coupons.commands.CouponTranslationCommand";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "langCode", kind: "enum", T: proto3.getEnumType(LanguageCode) },
    { no: 2, name: "description", kind: "message", T: StringValue },
    { no: 3, name: "avatar", kind: "message", T: CreateDocumentInfoCommand },
    { no: 4, name: "banner", kind: "message", T: CreateDocumentInfoCommand },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CouponTranslationCommand {
    return new CouponTranslationCommand().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CouponTranslationCommand {
    return new CouponTranslationCommand().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CouponTranslationCommand {
    return new CouponTranslationCommand().fromJsonString(jsonString, options);
  }

  static equals(a: CouponTranslationCommand | PlainMessage<CouponTranslationCommand> | undefined, b: CouponTranslationCommand | PlainMessage<CouponTranslationCommand> | undefined): boolean {
    return proto3.util.equals(CouponTranslationCommand, a, b);
  }
}

/**
 * @generated from message vklink.store.api.v1.coupons.commands.CreateCouponCommand
 */
export class CreateCouponCommand extends Message<CreateCouponCommand> {
  /**
   * @generated from field: string code = 2;
   */
  code = "";

  /**
   * @generated from field: google.protobuf.StringValue description = 3;
   */
  description?: string;

  /**
   * @generated from field: vklink.store.api.v1.coupons.enums.CouponType couponType = 4;
   */
  couponType = CouponType.UNSPECIFIED;

  /**
   * @generated from field: string value = 5;
   */
  value = "";

  /**
   * @generated from field: google.protobuf.Timestamp startDate = 6;
   */
  startDate?: Timestamp;

  /**
   * @generated from field: google.protobuf.Timestamp endDate = 7;
   */
  endDate?: Timestamp;

  /**
   * @generated from field: google.protobuf.StringValue minPurchaseAmount = 8;
   */
  minPurchaseAmount?: string;

  /**
   * @generated from field: google.protobuf.Int32Value maxRedemptions = 9;
   */
  maxRedemptions?: number;

  /**
   * @generated from field: google.protobuf.Int32Value maxRedemptionsPerUser = 10;
   */
  maxRedemptionsPerUser?: number;

  /**
   * @generated from field: repeated vklink.store.api.v1.coupons.commands.CouponTranslationCommand translations = 11;
   */
  translations: CouponTranslationCommand[] = [];

  /**
   * @generated from field: vklink.common.commands.CreateDocumentInfoCommand avatar = 51;
   */
  avatar?: CreateDocumentInfoCommand;

  /**
   * @generated from field: vklink.common.commands.CreateDocumentInfoCommand banner = 52;
   */
  banner?: CreateDocumentInfoCommand;

  constructor(data?: PartialMessage<CreateCouponCommand>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "vklink.store.api.v1.coupons.commands.CreateCouponCommand";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 2, name: "code", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "description", kind: "message", T: StringValue },
    { no: 4, name: "couponType", kind: "enum", T: proto3.getEnumType(CouponType) },
    { no: 5, name: "value", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 6, name: "startDate", kind: "message", T: Timestamp },
    { no: 7, name: "endDate", kind: "message", T: Timestamp },
    { no: 8, name: "minPurchaseAmount", kind: "message", T: StringValue },
    { no: 9, name: "maxRedemptions", kind: "message", T: Int32Value },
    { no: 10, name: "maxRedemptionsPerUser", kind: "message", T: Int32Value },
    { no: 11, name: "translations", kind: "message", T: CouponTranslationCommand, repeated: true },
    { no: 51, name: "avatar", kind: "message", T: CreateDocumentInfoCommand },
    { no: 52, name: "banner", kind: "message", T: CreateDocumentInfoCommand },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CreateCouponCommand {
    return new CreateCouponCommand().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CreateCouponCommand {
    return new CreateCouponCommand().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CreateCouponCommand {
    return new CreateCouponCommand().fromJsonString(jsonString, options);
  }

  static equals(a: CreateCouponCommand | PlainMessage<CreateCouponCommand> | undefined, b: CreateCouponCommand | PlainMessage<CreateCouponCommand> | undefined): boolean {
    return proto3.util.equals(CreateCouponCommand, a, b);
  }
}

/**
 * @generated from message vklink.store.api.v1.coupons.commands.UpdateCouponCommand
 */
export class UpdateCouponCommand extends Message<UpdateCouponCommand> {
  /**
   * @generated from field: string id = 1;
   */
  id = "";

  /**
   * @generated from field: string code = 2;
   */
  code = "";

  /**
   * @generated from field: google.protobuf.StringValue description = 3;
   */
  description?: string;

  /**
   * @generated from field: vklink.store.api.v1.coupons.enums.CouponType couponType = 4;
   */
  couponType = CouponType.UNSPECIFIED;

  /**
   * @generated from field: string value = 5;
   */
  value = "";

  /**
   * @generated from field: google.protobuf.Timestamp startDate = 6;
   */
  startDate?: Timestamp;

  /**
   * @generated from field: google.protobuf.Timestamp endDate = 7;
   */
  endDate?: Timestamp;

  /**
   * @generated from field: google.protobuf.StringValue minPurchaseAmount = 8;
   */
  minPurchaseAmount?: string;

  /**
   * @generated from field: google.protobuf.Int32Value maxRedemptions = 9;
   */
  maxRedemptions?: number;

  /**
   * @generated from field: google.protobuf.Int32Value maxRedemptionsPerUser = 10;
   */
  maxRedemptionsPerUser?: number;

  /**
   * @generated from field: repeated vklink.store.api.v1.coupons.commands.CouponTranslationCommand translations = 11;
   */
  translations: CouponTranslationCommand[] = [];

  /**
   * @generated from field: vklink.common.commands.CreateDocumentInfoCommand avatar = 51;
   */
  avatar?: CreateDocumentInfoCommand;

  /**
   * @generated from field: vklink.common.commands.CreateDocumentInfoCommand banner = 52;
   */
  banner?: CreateDocumentInfoCommand;

  constructor(data?: PartialMessage<UpdateCouponCommand>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "vklink.store.api.v1.coupons.commands.UpdateCouponCommand";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "code", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "description", kind: "message", T: StringValue },
    { no: 4, name: "couponType", kind: "enum", T: proto3.getEnumType(CouponType) },
    { no: 5, name: "value", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 6, name: "startDate", kind: "message", T: Timestamp },
    { no: 7, name: "endDate", kind: "message", T: Timestamp },
    { no: 8, name: "minPurchaseAmount", kind: "message", T: StringValue },
    { no: 9, name: "maxRedemptions", kind: "message", T: Int32Value },
    { no: 10, name: "maxRedemptionsPerUser", kind: "message", T: Int32Value },
    { no: 11, name: "translations", kind: "message", T: CouponTranslationCommand, repeated: true },
    { no: 51, name: "avatar", kind: "message", T: CreateDocumentInfoCommand },
    { no: 52, name: "banner", kind: "message", T: CreateDocumentInfoCommand },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateCouponCommand {
    return new UpdateCouponCommand().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateCouponCommand {
    return new UpdateCouponCommand().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateCouponCommand {
    return new UpdateCouponCommand().fromJsonString(jsonString, options);
  }

  static equals(a: UpdateCouponCommand | PlainMessage<UpdateCouponCommand> | undefined, b: UpdateCouponCommand | PlainMessage<UpdateCouponCommand> | undefined): boolean {
    return proto3.util.equals(UpdateCouponCommand, a, b);
  }
}

/**
 * @generated from message vklink.store.api.v1.coupons.commands.EnableCouponCommand
 */
export class EnableCouponCommand extends Message<EnableCouponCommand> {
  /**
   * @generated from field: string id = 1;
   */
  id = "";

  constructor(data?: PartialMessage<EnableCouponCommand>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "vklink.store.api.v1.coupons.commands.EnableCouponCommand";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): EnableCouponCommand {
    return new EnableCouponCommand().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): EnableCouponCommand {
    return new EnableCouponCommand().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): EnableCouponCommand {
    return new EnableCouponCommand().fromJsonString(jsonString, options);
  }

  static equals(a: EnableCouponCommand | PlainMessage<EnableCouponCommand> | undefined, b: EnableCouponCommand | PlainMessage<EnableCouponCommand> | undefined): boolean {
    return proto3.util.equals(EnableCouponCommand, a, b);
  }
}

/**
 * @generated from message vklink.store.api.v1.coupons.commands.DisableCouponCommand
 */
export class DisableCouponCommand extends Message<DisableCouponCommand> {
  /**
   * @generated from field: string id = 1;
   */
  id = "";

  constructor(data?: PartialMessage<DisableCouponCommand>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "vklink.store.api.v1.coupons.commands.DisableCouponCommand";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DisableCouponCommand {
    return new DisableCouponCommand().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DisableCouponCommand {
    return new DisableCouponCommand().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DisableCouponCommand {
    return new DisableCouponCommand().fromJsonString(jsonString, options);
  }

  static equals(a: DisableCouponCommand | PlainMessage<DisableCouponCommand> | undefined, b: DisableCouponCommand | PlainMessage<DisableCouponCommand> | undefined): boolean {
    return proto3.util.equals(DisableCouponCommand, a, b);
  }
}

/**
 * @generated from message vklink.store.api.v1.coupons.commands.DeleteCouponCommand
 */
export class DeleteCouponCommand extends Message<DeleteCouponCommand> {
  /**
   * @generated from field: string id = 1;
   */
  id = "";

  constructor(data?: PartialMessage<DeleteCouponCommand>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "vklink.store.api.v1.coupons.commands.DeleteCouponCommand";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DeleteCouponCommand {
    return new DeleteCouponCommand().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DeleteCouponCommand {
    return new DeleteCouponCommand().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DeleteCouponCommand {
    return new DeleteCouponCommand().fromJsonString(jsonString, options);
  }

  static equals(a: DeleteCouponCommand | PlainMessage<DeleteCouponCommand> | undefined, b: DeleteCouponCommand | PlainMessage<DeleteCouponCommand> | undefined): boolean {
    return proto3.util.equals(DeleteCouponCommand, a, b);
  }
}

/**
 * @generated from message vklink.store.api.v1.coupons.commands.UpdateCouponRedemptionQuantityCommand
 */
export class UpdateCouponRedemptionQuantityCommand extends Message<UpdateCouponRedemptionQuantityCommand> {
  /**
   * @generated from field: string id = 1;
   */
  id = "";

  constructor(data?: PartialMessage<UpdateCouponRedemptionQuantityCommand>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "vklink.store.api.v1.coupons.commands.UpdateCouponRedemptionQuantityCommand";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateCouponRedemptionQuantityCommand {
    return new UpdateCouponRedemptionQuantityCommand().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateCouponRedemptionQuantityCommand {
    return new UpdateCouponRedemptionQuantityCommand().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateCouponRedemptionQuantityCommand {
    return new UpdateCouponRedemptionQuantityCommand().fromJsonString(jsonString, options);
  }

  static equals(a: UpdateCouponRedemptionQuantityCommand | PlainMessage<UpdateCouponRedemptionQuantityCommand> | undefined, b: UpdateCouponRedemptionQuantityCommand | PlainMessage<UpdateCouponRedemptionQuantityCommand> | undefined): boolean {
    return proto3.util.equals(UpdateCouponRedemptionQuantityCommand, a, b);
  }
}

/**
 * @generated from message vklink.store.api.v1.coupons.commands.SendCouponNotificationCommand
 */
export class SendCouponNotificationCommand extends Message<SendCouponNotificationCommand> {
  /**
   * @generated from field: string id = 1;
   */
  id = "";

  constructor(data?: PartialMessage<SendCouponNotificationCommand>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "vklink.store.api.v1.coupons.commands.SendCouponNotificationCommand";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SendCouponNotificationCommand {
    return new SendCouponNotificationCommand().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SendCouponNotificationCommand {
    return new SendCouponNotificationCommand().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SendCouponNotificationCommand {
    return new SendCouponNotificationCommand().fromJsonString(jsonString, options);
  }

  static equals(a: SendCouponNotificationCommand | PlainMessage<SendCouponNotificationCommand> | undefined, b: SendCouponNotificationCommand | PlainMessage<SendCouponNotificationCommand> | undefined): boolean {
    return proto3.util.equals(SendCouponNotificationCommand, a, b);
  }
}

/**
 * @generated from message vklink.store.api.v1.coupons.commands.DecreaseCouponRedemptionQuantityCommand
 */
export class DecreaseCouponRedemptionQuantityCommand extends Message<DecreaseCouponRedemptionQuantityCommand> {
  /**
   * @generated from field: string code = 1;
   */
  code = "";

  constructor(data?: PartialMessage<DecreaseCouponRedemptionQuantityCommand>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "vklink.store.api.v1.coupons.commands.DecreaseCouponRedemptionQuantityCommand";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "code", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DecreaseCouponRedemptionQuantityCommand {
    return new DecreaseCouponRedemptionQuantityCommand().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DecreaseCouponRedemptionQuantityCommand {
    return new DecreaseCouponRedemptionQuantityCommand().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DecreaseCouponRedemptionQuantityCommand {
    return new DecreaseCouponRedemptionQuantityCommand().fromJsonString(jsonString, options);
  }

  static equals(a: DecreaseCouponRedemptionQuantityCommand | PlainMessage<DecreaseCouponRedemptionQuantityCommand> | undefined, b: DecreaseCouponRedemptionQuantityCommand | PlainMessage<DecreaseCouponRedemptionQuantityCommand> | undefined): boolean {
    return proto3.util.equals(DecreaseCouponRedemptionQuantityCommand, a, b);
  }
}

