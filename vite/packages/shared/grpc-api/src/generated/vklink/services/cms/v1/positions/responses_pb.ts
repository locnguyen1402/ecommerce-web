// @generated by protoc-gen-es v1.8.0 with parameter "target=ts,import_extension=none"
// @generated from file vklink/services/cms/v1/positions/responses.proto (package vklink.cms.api.v1.positions.responses, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";
import { DisplayPlatform, PositionType } from "./enums_pb";
import { DocumentInfoResponse } from "../../../../libs/common/responses/document_info_response_pb";
import { ActorInfoResponse } from "../../../../libs/common/responses/actor_info_response_pb";
import { PagingInfoResponse } from "../../../../libs/common/responses/paging_info_response_pb";
import { LanguageCode } from "../../../../libs/common/enums/language_code_pb";

/**
 * @generated from message vklink.cms.api.v1.positions.responses.PositionResponse
 */
export class PositionResponse extends Message<PositionResponse> {
  /**
   * data fields: from 1 to 50
   *
   * @generated from field: string id = 1;
   */
  id = "";

  /**
   * @generated from field: string name = 2;
   */
  name = "";

  /**
   * @generated from field: vklink.cms.api.v1.positions.responses.DisplayPlatform platform = 3;
   */
  platform = DisplayPlatform.UNSPECIFIED;

  /**
   * @generated from field: string description = 4;
   */
  description = "";

  /**
   * @generated from field: bool enabled = 5;
   */
  enabled = false;

  /**
   * @generated from field: vklink.cms.api.v1.positions.responses.PositionType type = 6;
   */
  type = PositionType.UNSPECIFIED;

  /**
   * @generated from field: vklink.common.responses.DocumentInfoResponse document = 7;
   */
  document?: DocumentInfoResponse;

  /**
   * @generated from field: int32 order = 8;
   */
  order = 0;

  /**
   * audit fields: from 63 to 70
   *
   * @generated from field: vklink.common.responses.ActorInfoResponse creator = 61;
   */
  creator?: ActorInfoResponse;

  /**
   * @generated from field: vklink.common.responses.ActorInfoResponse updater = 62;
   */
  updater?: ActorInfoResponse;

  constructor(data?: PartialMessage<PositionResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "vklink.cms.api.v1.positions.responses.PositionResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "platform", kind: "enum", T: proto3.getEnumType(DisplayPlatform) },
    { no: 4, name: "description", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "enabled", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 6, name: "type", kind: "enum", T: proto3.getEnumType(PositionType) },
    { no: 7, name: "document", kind: "message", T: DocumentInfoResponse },
    { no: 8, name: "order", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 61, name: "creator", kind: "message", T: ActorInfoResponse },
    { no: 62, name: "updater", kind: "message", T: ActorInfoResponse },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): PositionResponse {
    return new PositionResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): PositionResponse {
    return new PositionResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): PositionResponse {
    return new PositionResponse().fromJsonString(jsonString, options);
  }

  static equals(a: PositionResponse | PlainMessage<PositionResponse> | undefined, b: PositionResponse | PlainMessage<PositionResponse> | undefined): boolean {
    return proto3.util.equals(PositionResponse, a, b);
  }
}

/**
 * @generated from message vklink.cms.api.v1.positions.responses.SinglePositionResponse
 */
export class SinglePositionResponse extends Message<SinglePositionResponse> {
  /**
   * @generated from field: vklink.cms.api.v1.positions.responses.PositionResponse value = 1;
   */
  value?: PositionResponse;

  constructor(data?: PartialMessage<SinglePositionResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "vklink.cms.api.v1.positions.responses.SinglePositionResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "message", T: PositionResponse },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SinglePositionResponse {
    return new SinglePositionResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SinglePositionResponse {
    return new SinglePositionResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SinglePositionResponse {
    return new SinglePositionResponse().fromJsonString(jsonString, options);
  }

  static equals(a: SinglePositionResponse | PlainMessage<SinglePositionResponse> | undefined, b: SinglePositionResponse | PlainMessage<SinglePositionResponse> | undefined): boolean {
    return proto3.util.equals(SinglePositionResponse, a, b);
  }
}

/**
 * @generated from message vklink.cms.api.v1.positions.responses.ListPositionsResponse
 */
export class ListPositionsResponse extends Message<ListPositionsResponse> {
  /**
   * @generated from field: repeated vklink.cms.api.v1.positions.responses.PositionResponse value = 1;
   */
  value: PositionResponse[] = [];

  /**
   * @generated from field: vklink.common.responses.PagingInfoResponse paging = 2;
   */
  paging?: PagingInfoResponse;

  constructor(data?: PartialMessage<ListPositionsResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "vklink.cms.api.v1.positions.responses.ListPositionsResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "message", T: PositionResponse, repeated: true },
    { no: 2, name: "paging", kind: "message", T: PagingInfoResponse },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListPositionsResponse {
    return new ListPositionsResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListPositionsResponse {
    return new ListPositionsResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListPositionsResponse {
    return new ListPositionsResponse().fromJsonString(jsonString, options);
  }

  static equals(a: ListPositionsResponse | PlainMessage<ListPositionsResponse> | undefined, b: ListPositionsResponse | PlainMessage<ListPositionsResponse> | undefined): boolean {
    return proto3.util.equals(ListPositionsResponse, a, b);
  }
}

/**
 * @generated from message vklink.cms.api.v1.positions.responses.AdminPositionDetailTranslationResponse
 */
export class AdminPositionDetailTranslationResponse extends Message<AdminPositionDetailTranslationResponse> {
  /**
   * data fields: from 1 to 50
   *
   * @generated from field: string id = 1;
   */
  id = "";

  /**
   * @generated from field: vklink.grpc.enums.LanguageCode langCode = 2;
   */
  langCode = LanguageCode.UNSPECIFIED;

  /**
   * @generated from field: string name = 3;
   */
  name = "";

  /**
   * @generated from field: string description = 4;
   */
  description = "";

  /**
   * @generated from field: vklink.common.responses.DocumentInfoResponse document = 5;
   */
  document?: DocumentInfoResponse;

  constructor(data?: PartialMessage<AdminPositionDetailTranslationResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "vklink.cms.api.v1.positions.responses.AdminPositionDetailTranslationResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "langCode", kind: "enum", T: proto3.getEnumType(LanguageCode) },
    { no: 3, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "description", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "document", kind: "message", T: DocumentInfoResponse },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AdminPositionDetailTranslationResponse {
    return new AdminPositionDetailTranslationResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AdminPositionDetailTranslationResponse {
    return new AdminPositionDetailTranslationResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AdminPositionDetailTranslationResponse {
    return new AdminPositionDetailTranslationResponse().fromJsonString(jsonString, options);
  }

  static equals(a: AdminPositionDetailTranslationResponse | PlainMessage<AdminPositionDetailTranslationResponse> | undefined, b: AdminPositionDetailTranslationResponse | PlainMessage<AdminPositionDetailTranslationResponse> | undefined): boolean {
    return proto3.util.equals(AdminPositionDetailTranslationResponse, a, b);
  }
}

/**
 * @generated from message vklink.cms.api.v1.positions.responses.AdminPositionDetailResponse
 */
export class AdminPositionDetailResponse extends Message<AdminPositionDetailResponse> {
  /**
   * data fields: from 1 to 50
   *
   * @generated from field: string id = 1;
   */
  id = "";

  /**
   * @generated from field: string name = 2;
   */
  name = "";

  /**
   * @generated from field: vklink.cms.api.v1.positions.responses.DisplayPlatform platform = 3;
   */
  platform = DisplayPlatform.UNSPECIFIED;

  /**
   * @generated from field: string description = 4;
   */
  description = "";

  /**
   * @generated from field: bool enabled = 5;
   */
  enabled = false;

  /**
   * @generated from field: vklink.cms.api.v1.positions.responses.PositionType type = 6;
   */
  type = PositionType.UNSPECIFIED;

  /**
   * @generated from field: vklink.common.responses.DocumentInfoResponse document = 7;
   */
  document?: DocumentInfoResponse;

  /**
   * @generated from field: int32 order = 8;
   */
  order = 0;

  /**
   * @generated from field: repeated vklink.cms.api.v1.positions.responses.AdminPositionDetailTranslationResponse translations = 9;
   */
  translations: AdminPositionDetailTranslationResponse[] = [];

  /**
   * audit fields: from 63 to 70
   *
   * @generated from field: vklink.common.responses.ActorInfoResponse creator = 61;
   */
  creator?: ActorInfoResponse;

  /**
   * @generated from field: vklink.common.responses.ActorInfoResponse updater = 62;
   */
  updater?: ActorInfoResponse;

  constructor(data?: PartialMessage<AdminPositionDetailResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "vklink.cms.api.v1.positions.responses.AdminPositionDetailResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "platform", kind: "enum", T: proto3.getEnumType(DisplayPlatform) },
    { no: 4, name: "description", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "enabled", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 6, name: "type", kind: "enum", T: proto3.getEnumType(PositionType) },
    { no: 7, name: "document", kind: "message", T: DocumentInfoResponse },
    { no: 8, name: "order", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 9, name: "translations", kind: "message", T: AdminPositionDetailTranslationResponse, repeated: true },
    { no: 61, name: "creator", kind: "message", T: ActorInfoResponse },
    { no: 62, name: "updater", kind: "message", T: ActorInfoResponse },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AdminPositionDetailResponse {
    return new AdminPositionDetailResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AdminPositionDetailResponse {
    return new AdminPositionDetailResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AdminPositionDetailResponse {
    return new AdminPositionDetailResponse().fromJsonString(jsonString, options);
  }

  static equals(a: AdminPositionDetailResponse | PlainMessage<AdminPositionDetailResponse> | undefined, b: AdminPositionDetailResponse | PlainMessage<AdminPositionDetailResponse> | undefined): boolean {
    return proto3.util.equals(AdminPositionDetailResponse, a, b);
  }
}

/**
 * @generated from message vklink.cms.api.v1.positions.responses.AdminSinglePositionDetailResponse
 */
export class AdminSinglePositionDetailResponse extends Message<AdminSinglePositionDetailResponse> {
  /**
   * @generated from field: vklink.cms.api.v1.positions.responses.AdminPositionDetailResponse value = 1;
   */
  value?: AdminPositionDetailResponse;

  constructor(data?: PartialMessage<AdminSinglePositionDetailResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "vklink.cms.api.v1.positions.responses.AdminSinglePositionDetailResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "message", T: AdminPositionDetailResponse },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AdminSinglePositionDetailResponse {
    return new AdminSinglePositionDetailResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AdminSinglePositionDetailResponse {
    return new AdminSinglePositionDetailResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AdminSinglePositionDetailResponse {
    return new AdminSinglePositionDetailResponse().fromJsonString(jsonString, options);
  }

  static equals(a: AdminSinglePositionDetailResponse | PlainMessage<AdminSinglePositionDetailResponse> | undefined, b: AdminSinglePositionDetailResponse | PlainMessage<AdminSinglePositionDetailResponse> | undefined): boolean {
    return proto3.util.equals(AdminSinglePositionDetailResponse, a, b);
  }
}

