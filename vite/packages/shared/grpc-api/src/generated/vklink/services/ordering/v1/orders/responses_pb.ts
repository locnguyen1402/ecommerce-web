// @generated by protoc-gen-es v1.8.0 with parameter "target=ts,import_extension=none"
// @generated from file vklink/services/ordering/v1/orders/responses.proto (package vklink.ordering.api.v1.orders.responses, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { BoolValue, Message, proto3, StringValue, Timestamp } from "@bufbuild/protobuf";
import { DocumentInfoResponse } from "../../../../libs/common/responses/document_info_response_pb";
import { AddressResponse } from "../../../../libs/common/responses/address_response_pb";
import { ProductType } from "../../../../libs/common/enums/product_type_pb";
import { UnitType } from "../../../../libs/common/enums/unit_type_pb";
import { OrderStatus, PaymentMethod, PaymentStatus } from "./enums_pb";
import { PagingInfoResponse } from "../../../../libs/common/responses/paging_info_response_pb";
import { UserStatus } from "../../../../libs/common/enums/user_status_pb";
import { Gender } from "../../../../libs/common/enums/gender_pb";
import { DateOnly } from "../../../../libs/protobuf/date_only_pb";

/**
 * @generated from message vklink.ordering.api.v1.orders.responses.OrderCategoryResponse
 */
export class OrderCategoryResponse extends Message<OrderCategoryResponse> {
  /**
   * data fields: from 1 to 50
   *
   * @generated from field: google.protobuf.StringValue id = 1;
   */
  id?: string;

  /**
   * @generated from field: google.protobuf.StringValue name = 2;
   */
  name?: string;

  /**
   * @generated from field: google.protobuf.StringValue slug = 3;
   */
  slug?: string;

  /**
   * @generated from field: google.protobuf.StringValue description = 4;
   */
  description?: string;

  /**
   * @generated from field: google.protobuf.StringValue remarks = 5;
   */
  remarks?: string;

  /**
   * @generated from field: google.protobuf.BoolValue isEnabled = 6;
   */
  isEnabled?: boolean;

  /**
   * @generated from field: vklink.common.responses.DocumentInfoResponse document = 7;
   */
  document?: DocumentInfoResponse;

  /**
   * @generated from field: vklink.common.responses.DocumentInfoResponse icon = 8;
   */
  icon?: DocumentInfoResponse;

  /**
   * @generated from field: vklink.common.responses.DocumentInfoResponse banner = 9;
   */
  banner?: DocumentInfoResponse;

  constructor(data?: PartialMessage<OrderCategoryResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "vklink.ordering.api.v1.orders.responses.OrderCategoryResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: StringValue },
    { no: 2, name: "name", kind: "message", T: StringValue },
    { no: 3, name: "slug", kind: "message", T: StringValue },
    { no: 4, name: "description", kind: "message", T: StringValue },
    { no: 5, name: "remarks", kind: "message", T: StringValue },
    { no: 6, name: "isEnabled", kind: "message", T: BoolValue },
    { no: 7, name: "document", kind: "message", T: DocumentInfoResponse },
    { no: 8, name: "icon", kind: "message", T: DocumentInfoResponse },
    { no: 9, name: "banner", kind: "message", T: DocumentInfoResponse },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): OrderCategoryResponse {
    return new OrderCategoryResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): OrderCategoryResponse {
    return new OrderCategoryResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): OrderCategoryResponse {
    return new OrderCategoryResponse().fromJsonString(jsonString, options);
  }

  static equals(a: OrderCategoryResponse | PlainMessage<OrderCategoryResponse> | undefined, b: OrderCategoryResponse | PlainMessage<OrderCategoryResponse> | undefined): boolean {
    return proto3.util.equals(OrderCategoryResponse, a, b);
  }
}

/**
 * @generated from message vklink.ordering.api.v1.orders.responses.OrderStoreResponse
 */
export class OrderStoreResponse extends Message<OrderStoreResponse> {
  /**
   * data fields: from 1 to 50
   *
   * @generated from field: google.protobuf.StringValue id = 1;
   */
  id?: string;

  /**
   * @generated from field: google.protobuf.StringValue name = 2;
   */
  name?: string;

  /**
   * @generated from field: google.protobuf.StringValue phoneNumber = 3;
   */
  phoneNumber?: string;

  /**
   * @generated from field: google.protobuf.StringValue description = 4;
   */
  description?: string;

  /**
   * @generated from field: vklink.common.responses.AddressResponse address = 5;
   */
  address?: AddressResponse;

  /**
   * @generated from field: bool enabled = 6;
   */
  enabled = false;

  constructor(data?: PartialMessage<OrderStoreResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "vklink.ordering.api.v1.orders.responses.OrderStoreResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: StringValue },
    { no: 2, name: "name", kind: "message", T: StringValue },
    { no: 3, name: "phoneNumber", kind: "message", T: StringValue },
    { no: 4, name: "description", kind: "message", T: StringValue },
    { no: 5, name: "address", kind: "message", T: AddressResponse },
    { no: 6, name: "enabled", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): OrderStoreResponse {
    return new OrderStoreResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): OrderStoreResponse {
    return new OrderStoreResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): OrderStoreResponse {
    return new OrderStoreResponse().fromJsonString(jsonString, options);
  }

  static equals(a: OrderStoreResponse | PlainMessage<OrderStoreResponse> | undefined, b: OrderStoreResponse | PlainMessage<OrderStoreResponse> | undefined): boolean {
    return proto3.util.equals(OrderStoreResponse, a, b);
  }
}

/**
 * @generated from message vklink.ordering.api.v1.orders.responses.OrderContactResponse
 */
export class OrderContactResponse extends Message<OrderContactResponse> {
  /**
   * @generated from field: string provinceId = 1;
   */
  provinceId = "";

  /**
   * @generated from field: string provinceName = 2;
   */
  provinceName = "";

  /**
   * @generated from field: string provinceCode = 3;
   */
  provinceCode = "";

  /**
   * @generated from field: string districtId = 4;
   */
  districtId = "";

  /**
   * @generated from field: string districtName = 5;
   */
  districtName = "";

  /**
   * @generated from field: string districtCode = 6;
   */
  districtCode = "";

  /**
   * @generated from field: string wardId = 7;
   */
  wardId = "";

  /**
   * @generated from field: string wardName = 8;
   */
  wardName = "";

  /**
   * @generated from field: string wardCode = 9;
   */
  wardCode = "";

  /**
   * @generated from field: string addressLine1 = 10;
   */
  addressLine1 = "";

  /**
   * @generated from field: google.protobuf.StringValue addressLine2 = 11;
   */
  addressLine2?: string;

  /**
   * @generated from field: string fullAddress = 12;
   */
  fullAddress = "";

  /**
   * @generated from field: google.protobuf.StringValue notes = 13;
   */
  notes?: string;

  /**
   * @generated from field: string name = 14;
   */
  name = "";

  /**
   * @generated from field: string phoneNumber = 15;
   */
  phoneNumber = "";

  constructor(data?: PartialMessage<OrderContactResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "vklink.ordering.api.v1.orders.responses.OrderContactResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "provinceId", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "provinceName", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "provinceCode", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "districtId", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "districtName", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 6, name: "districtCode", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 7, name: "wardId", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 8, name: "wardName", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 9, name: "wardCode", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 10, name: "addressLine1", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 11, name: "addressLine2", kind: "message", T: StringValue },
    { no: 12, name: "fullAddress", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 13, name: "notes", kind: "message", T: StringValue },
    { no: 14, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 15, name: "phoneNumber", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): OrderContactResponse {
    return new OrderContactResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): OrderContactResponse {
    return new OrderContactResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): OrderContactResponse {
    return new OrderContactResponse().fromJsonString(jsonString, options);
  }

  static equals(a: OrderContactResponse | PlainMessage<OrderContactResponse> | undefined, b: OrderContactResponse | PlainMessage<OrderContactResponse> | undefined): boolean {
    return proto3.util.equals(OrderContactResponse, a, b);
  }
}

/**
 * @generated from message vklink.ordering.api.v1.orders.responses.OrderItemResponse
 */
export class OrderItemResponse extends Message<OrderItemResponse> {
  /**
   * data fields: from 1 to 50
   *
   * @generated from field: string id = 1;
   */
  id = "";

  /**
   * @generated from field: string productId = 2;
   */
  productId = "";

  /**
   * @generated from field: string productName = 3;
   */
  productName = "";

  /**
   * @generated from field: vklink.grpc.enums.ProductType type = 4;
   */
  type = ProductType.UNSPECIFIED;

  /**
   * @generated from field: vklink.grpc.enums.UnitType unit = 5;
   */
  unit = UnitType.UNSPECIFIED;

  /**
   * @generated from field: int32 quantity = 6;
   */
  quantity = 0;

  /**
   * @generated from field: string unitPrice = 7;
   */
  unitPrice = "";

  /**
   * @generated from field: string totalPrice = 8;
   */
  totalPrice = "";

  /**
   * @generated from field: string totalVatPrice = 9;
   */
  totalVatPrice = "";

  /**
   * @generated from field: string totalExceptVatPrice = 10;
   */
  totalExceptVatPrice = "";

  /**
   * @generated from field: google.protobuf.StringValue variantId = 11;
   */
  variantId?: string;

  /**
   * @generated from field: google.protobuf.StringValue variantName = 12;
   */
  variantName?: string;

  /**
   * @generated from field: vklink.common.responses.DocumentInfoResponse document = 13;
   */
  document?: DocumentInfoResponse;

  /**
   * @generated from field: vklink.ordering.api.v1.orders.responses.OrderCategoryResponse category = 14;
   */
  category?: OrderCategoryResponse;

  /**
   * relationship fields: from 51 to 60
   *
   * @generated from field: repeated vklink.ordering.api.v1.orders.responses.OrderBundleItemResponse bundleItems = 51;
   */
  bundleItems: OrderBundleItemResponse[] = [];

  constructor(data?: PartialMessage<OrderItemResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "vklink.ordering.api.v1.orders.responses.OrderItemResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "productId", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "productName", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "type", kind: "enum", T: proto3.getEnumType(ProductType) },
    { no: 5, name: "unit", kind: "enum", T: proto3.getEnumType(UnitType) },
    { no: 6, name: "quantity", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 7, name: "unitPrice", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 8, name: "totalPrice", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 9, name: "totalVatPrice", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 10, name: "totalExceptVatPrice", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 11, name: "variantId", kind: "message", T: StringValue },
    { no: 12, name: "variantName", kind: "message", T: StringValue },
    { no: 13, name: "document", kind: "message", T: DocumentInfoResponse },
    { no: 14, name: "category", kind: "message", T: OrderCategoryResponse },
    { no: 51, name: "bundleItems", kind: "message", T: OrderBundleItemResponse, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): OrderItemResponse {
    return new OrderItemResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): OrderItemResponse {
    return new OrderItemResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): OrderItemResponse {
    return new OrderItemResponse().fromJsonString(jsonString, options);
  }

  static equals(a: OrderItemResponse | PlainMessage<OrderItemResponse> | undefined, b: OrderItemResponse | PlainMessage<OrderItemResponse> | undefined): boolean {
    return proto3.util.equals(OrderItemResponse, a, b);
  }
}

/**
 * @generated from message vklink.ordering.api.v1.orders.responses.OrderBundleItemResponse
 */
export class OrderBundleItemResponse extends Message<OrderBundleItemResponse> {
  /**
   * data fields: from 1 to 50
   *
   * @generated from field: string id = 1;
   */
  id = "";

  /**
   * @generated from field: string productId = 2;
   */
  productId = "";

  /**
   * @generated from field: string productName = 3;
   */
  productName = "";

  /**
   * @generated from field: vklink.grpc.enums.ProductType type = 4;
   */
  type = ProductType.UNSPECIFIED;

  /**
   * @generated from field: vklink.grpc.enums.UnitType unit = 5;
   */
  unit = UnitType.UNSPECIFIED;

  /**
   * @generated from field: int32 quantity = 6;
   */
  quantity = 0;

  /**
   * @generated from field: string unitPrice = 7;
   */
  unitPrice = "";

  /**
   * @generated from field: string totalPrice = 8;
   */
  totalPrice = "";

  /**
   * @generated from field: string totalVatPrice = 9;
   */
  totalVatPrice = "";

  /**
   * @generated from field: string totalExceptVatPrice = 10;
   */
  totalExceptVatPrice = "";

  /**
   * @generated from field: google.protobuf.StringValue variantId = 11;
   */
  variantId?: string;

  /**
   * @generated from field: google.protobuf.StringValue variantName = 12;
   */
  variantName?: string;

  /**
   * @generated from field: vklink.common.responses.DocumentInfoResponse document = 13;
   */
  document?: DocumentInfoResponse;

  constructor(data?: PartialMessage<OrderBundleItemResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "vklink.ordering.api.v1.orders.responses.OrderBundleItemResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "productId", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "productName", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "type", kind: "enum", T: proto3.getEnumType(ProductType) },
    { no: 5, name: "unit", kind: "enum", T: proto3.getEnumType(UnitType) },
    { no: 6, name: "quantity", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 7, name: "unitPrice", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 8, name: "totalPrice", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 9, name: "totalVatPrice", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 10, name: "totalExceptVatPrice", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 11, name: "variantId", kind: "message", T: StringValue },
    { no: 12, name: "variantName", kind: "message", T: StringValue },
    { no: 13, name: "document", kind: "message", T: DocumentInfoResponse },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): OrderBundleItemResponse {
    return new OrderBundleItemResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): OrderBundleItemResponse {
    return new OrderBundleItemResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): OrderBundleItemResponse {
    return new OrderBundleItemResponse().fromJsonString(jsonString, options);
  }

  static equals(a: OrderBundleItemResponse | PlainMessage<OrderBundleItemResponse> | undefined, b: OrderBundleItemResponse | PlainMessage<OrderBundleItemResponse> | undefined): boolean {
    return proto3.util.equals(OrderBundleItemResponse, a, b);
  }
}

/**
 * @generated from message vklink.ordering.api.v1.orders.responses.OrderResponse
 */
export class OrderResponse extends Message<OrderResponse> {
  /**
   * data fields: from 1 to 50
   *
   * @generated from field: string id = 1;
   */
  id = "";

  /**
   * @generated from field: string orderNumber = 2;
   */
  orderNumber = "";

  /**
   * @generated from field: vklink.ordering.api.v1.orders.responses.OrderStatus status = 3;
   */
  status = OrderStatus.UNSPECIFIED;

  /**
   * @generated from field: string totalPrice = 4;
   */
  totalPrice = "";

  /**
   * @generated from field: vklink.ordering.api.v1.orders.responses.PaymentMethod paymentMethod = 5;
   */
  paymentMethod = PaymentMethod.UNSPECIFIED;

  /**
   * @generated from field: vklink.ordering.api.v1.orders.responses.OrderContactResponse pickupContact = 6;
   */
  pickupContact?: OrderContactResponse;

  /**
   * @generated from field: vklink.ordering.api.v1.orders.responses.OrderContactResponse deliveryContact = 7;
   */
  deliveryContact?: OrderContactResponse;

  /**
   * @generated from field: google.protobuf.Timestamp pickupSchedule = 8;
   */
  pickupSchedule?: Timestamp;

  /**
   * @generated from field: google.protobuf.Timestamp deliverySchedule = 9;
   */
  deliverySchedule?: Timestamp;

  /**
   * @generated from field: google.protobuf.Timestamp createdAt = 10;
   */
  createdAt?: Timestamp;

  /**
   * @generated from field: google.protobuf.StringValue notes = 11;
   */
  notes?: string;

  /**
   * @generated from field: google.protobuf.StringValue customerId = 12;
   */
  customerId?: string;

  /**
   * @generated from field: string customerName = 13;
   */
  customerName = "";

  /**
   * @generated from field: vklink.ordering.api.v1.orders.responses.PaymentStatus paymentStatus = 14;
   */
  paymentStatus = PaymentStatus.UNSPECIFIED;

  /**
   * @generated from field: string totalDiscountPrice = 15;
   */
  totalDiscountPrice = "";

  /**
   * @generated from field: string totalItemPrice = 16;
   */
  totalItemPrice = "";

  /**
   * @generated from field: string totalVatPrice = 17;
   */
  totalVatPrice = "";

  /**
   * @generated from field: string totalExceptVatPrice = 18;
   */
  totalExceptVatPrice = "";

  /**
   * @generated from field: string deliveryFee = 19;
   */
  deliveryFee = "";

  /**
   * @generated from field: google.protobuf.StringValue couponCode = 20;
   */
  couponCode?: string;

  /**
   * relationship fields: from 51 to 60
   *
   * @generated from field: repeated vklink.ordering.api.v1.orders.responses.OrderItemResponse items = 51;
   */
  items: OrderItemResponse[] = [];

  /**
   * @generated from field: repeated vklink.ordering.api.v1.orders.responses.OrderStatusDetailResponse orderStatusTrackings = 52;
   */
  orderStatusTrackings: OrderStatusDetailResponse[] = [];

  /**
   * @generated from field: repeated vklink.ordering.api.v1.orders.responses.PaymentStatusDetailResponse paymentStatusTrackings = 53;
   */
  paymentStatusTrackings: PaymentStatusDetailResponse[] = [];

  /**
   * @generated from field: vklink.ordering.api.v1.orders.responses.OrderStoreResponse store = 54;
   */
  store?: OrderStoreResponse;

  constructor(data?: PartialMessage<OrderResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "vklink.ordering.api.v1.orders.responses.OrderResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "orderNumber", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "status", kind: "enum", T: proto3.getEnumType(OrderStatus) },
    { no: 4, name: "totalPrice", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "paymentMethod", kind: "enum", T: proto3.getEnumType(PaymentMethod) },
    { no: 6, name: "pickupContact", kind: "message", T: OrderContactResponse },
    { no: 7, name: "deliveryContact", kind: "message", T: OrderContactResponse },
    { no: 8, name: "pickupSchedule", kind: "message", T: Timestamp },
    { no: 9, name: "deliverySchedule", kind: "message", T: Timestamp },
    { no: 10, name: "createdAt", kind: "message", T: Timestamp },
    { no: 11, name: "notes", kind: "message", T: StringValue },
    { no: 12, name: "customerId", kind: "message", T: StringValue },
    { no: 13, name: "customerName", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 14, name: "paymentStatus", kind: "enum", T: proto3.getEnumType(PaymentStatus) },
    { no: 15, name: "totalDiscountPrice", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 16, name: "totalItemPrice", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 17, name: "totalVatPrice", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 18, name: "totalExceptVatPrice", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 19, name: "deliveryFee", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 20, name: "couponCode", kind: "message", T: StringValue },
    { no: 51, name: "items", kind: "message", T: OrderItemResponse, repeated: true },
    { no: 52, name: "orderStatusTrackings", kind: "message", T: OrderStatusDetailResponse, repeated: true },
    { no: 53, name: "paymentStatusTrackings", kind: "message", T: PaymentStatusDetailResponse, repeated: true },
    { no: 54, name: "store", kind: "message", T: OrderStoreResponse },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): OrderResponse {
    return new OrderResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): OrderResponse {
    return new OrderResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): OrderResponse {
    return new OrderResponse().fromJsonString(jsonString, options);
  }

  static equals(a: OrderResponse | PlainMessage<OrderResponse> | undefined, b: OrderResponse | PlainMessage<OrderResponse> | undefined): boolean {
    return proto3.util.equals(OrderResponse, a, b);
  }
}

/**
 * @generated from message vklink.ordering.api.v1.orders.responses.SingleOrderResponse
 */
export class SingleOrderResponse extends Message<SingleOrderResponse> {
  /**
   * @generated from field: vklink.ordering.api.v1.orders.responses.OrderResponse value = 1;
   */
  value?: OrderResponse;

  constructor(data?: PartialMessage<SingleOrderResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "vklink.ordering.api.v1.orders.responses.SingleOrderResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "message", T: OrderResponse },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SingleOrderResponse {
    return new SingleOrderResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SingleOrderResponse {
    return new SingleOrderResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SingleOrderResponse {
    return new SingleOrderResponse().fromJsonString(jsonString, options);
  }

  static equals(a: SingleOrderResponse | PlainMessage<SingleOrderResponse> | undefined, b: SingleOrderResponse | PlainMessage<SingleOrderResponse> | undefined): boolean {
    return proto3.util.equals(SingleOrderResponse, a, b);
  }
}

/**
 * @generated from message vklink.ordering.api.v1.orders.responses.ListOrdersResponse
 */
export class ListOrdersResponse extends Message<ListOrdersResponse> {
  /**
   * @generated from field: repeated vklink.ordering.api.v1.orders.responses.OrderResponse value = 1;
   */
  value: OrderResponse[] = [];

  /**
   * @generated from field: vklink.common.responses.PagingInfoResponse paging = 2;
   */
  paging?: PagingInfoResponse;

  constructor(data?: PartialMessage<ListOrdersResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "vklink.ordering.api.v1.orders.responses.ListOrdersResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "message", T: OrderResponse, repeated: true },
    { no: 2, name: "paging", kind: "message", T: PagingInfoResponse },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListOrdersResponse {
    return new ListOrdersResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListOrdersResponse {
    return new ListOrdersResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListOrdersResponse {
    return new ListOrdersResponse().fromJsonString(jsonString, options);
  }

  static equals(a: ListOrdersResponse | PlainMessage<ListOrdersResponse> | undefined, b: ListOrdersResponse | PlainMessage<ListOrdersResponse> | undefined): boolean {
    return proto3.util.equals(ListOrdersResponse, a, b);
  }
}

/**
 * @generated from message vklink.ordering.api.v1.orders.responses.OrderStatusDetailResponse
 */
export class OrderStatusDetailResponse extends Message<OrderStatusDetailResponse> {
  /**
   * data fields: from 1 to 50
   *
   * @generated from field: string id = 1;
   */
  id = "";

  /**
   * @generated from field: vklink.ordering.api.v1.orders.responses.OrderStatus orderStatus = 2;
   */
  orderStatus = OrderStatus.UNSPECIFIED;

  /**
   * @generated from field: google.protobuf.Timestamp createdAt = 3;
   */
  createdAt?: Timestamp;

  constructor(data?: PartialMessage<OrderStatusDetailResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "vklink.ordering.api.v1.orders.responses.OrderStatusDetailResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "orderStatus", kind: "enum", T: proto3.getEnumType(OrderStatus) },
    { no: 3, name: "createdAt", kind: "message", T: Timestamp },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): OrderStatusDetailResponse {
    return new OrderStatusDetailResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): OrderStatusDetailResponse {
    return new OrderStatusDetailResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): OrderStatusDetailResponse {
    return new OrderStatusDetailResponse().fromJsonString(jsonString, options);
  }

  static equals(a: OrderStatusDetailResponse | PlainMessage<OrderStatusDetailResponse> | undefined, b: OrderStatusDetailResponse | PlainMessage<OrderStatusDetailResponse> | undefined): boolean {
    return proto3.util.equals(OrderStatusDetailResponse, a, b);
  }
}

/**
 * @generated from message vklink.ordering.api.v1.orders.responses.PaymentStatusDetailResponse
 */
export class PaymentStatusDetailResponse extends Message<PaymentStatusDetailResponse> {
  /**
   * data fields: from 1 to 50
   *
   * @generated from field: string id = 1;
   */
  id = "";

  /**
   * @generated from field: vklink.ordering.api.v1.orders.responses.PaymentStatus paymentStatus = 2;
   */
  paymentStatus = PaymentStatus.UNSPECIFIED;

  /**
   * @generated from field: google.protobuf.Timestamp createdAt = 3;
   */
  createdAt?: Timestamp;

  constructor(data?: PartialMessage<PaymentStatusDetailResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "vklink.ordering.api.v1.orders.responses.PaymentStatusDetailResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "paymentStatus", kind: "enum", T: proto3.getEnumType(PaymentStatus) },
    { no: 3, name: "createdAt", kind: "message", T: Timestamp },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): PaymentStatusDetailResponse {
    return new PaymentStatusDetailResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): PaymentStatusDetailResponse {
    return new PaymentStatusDetailResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): PaymentStatusDetailResponse {
    return new PaymentStatusDetailResponse().fromJsonString(jsonString, options);
  }

  static equals(a: PaymentStatusDetailResponse | PlainMessage<PaymentStatusDetailResponse> | undefined, b: PaymentStatusDetailResponse | PlainMessage<PaymentStatusDetailResponse> | undefined): boolean {
    return proto3.util.equals(PaymentStatusDetailResponse, a, b);
  }
}

/**
 * @generated from message vklink.ordering.api.v1.orders.responses.OrderReportResponse
 */
export class OrderReportResponse extends Message<OrderReportResponse> {
  /**
   * @generated from field: string totalSalesAmount = 1;
   */
  totalSalesAmount = "";

  /**
   * @generated from field: string avgSalesAmount = 2;
   */
  avgSalesAmount = "";

  /**
   * @generated from field: int32 totalSales = 3;
   */
  totalSales = 0;

  /**
   * @generated from field: int32 totalCustomer = 4;
   */
  totalCustomer = 0;

  constructor(data?: PartialMessage<OrderReportResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "vklink.ordering.api.v1.orders.responses.OrderReportResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "totalSalesAmount", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "avgSalesAmount", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "totalSales", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 4, name: "totalCustomer", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): OrderReportResponse {
    return new OrderReportResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): OrderReportResponse {
    return new OrderReportResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): OrderReportResponse {
    return new OrderReportResponse().fromJsonString(jsonString, options);
  }

  static equals(a: OrderReportResponse | PlainMessage<OrderReportResponse> | undefined, b: OrderReportResponse | PlainMessage<OrderReportResponse> | undefined): boolean {
    return proto3.util.equals(OrderReportResponse, a, b);
  }
}

/**
 * @generated from message vklink.ordering.api.v1.orders.responses.DashboardOrderReportResponse
 */
export class DashboardOrderReportResponse extends Message<DashboardOrderReportResponse> {
  /**
   * @generated from field: string totalValue = 1;
   */
  totalValue = "";

  /**
   * @generated from field: repeated string lables = 2;
   */
  lables: string[] = [];

  /**
   * @generated from field: repeated string values = 3;
   */
  values: string[] = [];

  constructor(data?: PartialMessage<DashboardOrderReportResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "vklink.ordering.api.v1.orders.responses.DashboardOrderReportResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "totalValue", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "lables", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
    { no: 3, name: "values", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DashboardOrderReportResponse {
    return new DashboardOrderReportResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DashboardOrderReportResponse {
    return new DashboardOrderReportResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DashboardOrderReportResponse {
    return new DashboardOrderReportResponse().fromJsonString(jsonString, options);
  }

  static equals(a: DashboardOrderReportResponse | PlainMessage<DashboardOrderReportResponse> | undefined, b: DashboardOrderReportResponse | PlainMessage<DashboardOrderReportResponse> | undefined): boolean {
    return proto3.util.equals(DashboardOrderReportResponse, a, b);
  }
}

/**
 * @generated from message vklink.ordering.api.v1.orders.responses.DashboardTopProductsReportResponse
 */
export class DashboardTopProductsReportResponse extends Message<DashboardTopProductsReportResponse> {
  /**
   * @generated from field: repeated vklink.ordering.api.v1.orders.responses.DashboardTopProductReportResponse values = 1;
   */
  values: DashboardTopProductReportResponse[] = [];

  constructor(data?: PartialMessage<DashboardTopProductsReportResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "vklink.ordering.api.v1.orders.responses.DashboardTopProductsReportResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "values", kind: "message", T: DashboardTopProductReportResponse, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DashboardTopProductsReportResponse {
    return new DashboardTopProductsReportResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DashboardTopProductsReportResponse {
    return new DashboardTopProductsReportResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DashboardTopProductsReportResponse {
    return new DashboardTopProductsReportResponse().fromJsonString(jsonString, options);
  }

  static equals(a: DashboardTopProductsReportResponse | PlainMessage<DashboardTopProductsReportResponse> | undefined, b: DashboardTopProductsReportResponse | PlainMessage<DashboardTopProductsReportResponse> | undefined): boolean {
    return proto3.util.equals(DashboardTopProductsReportResponse, a, b);
  }
}

/**
 * @generated from message vklink.ordering.api.v1.orders.responses.DashboardTopProductReportResponse
 */
export class DashboardTopProductReportResponse extends Message<DashboardTopProductReportResponse> {
  /**
   * @generated from field: string productId = 1;
   */
  productId = "";

  /**
   * @generated from field: string productName = 2;
   */
  productName = "";

  /**
   * @generated from field: google.protobuf.StringValue productUrl = 3;
   */
  productUrl?: string;

  /**
   * @generated from field: string totalPrice = 4;
   */
  totalPrice = "";

  /**
   * @generated from field: repeated string tags = 5;
   */
  tags: string[] = [];

  constructor(data?: PartialMessage<DashboardTopProductReportResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "vklink.ordering.api.v1.orders.responses.DashboardTopProductReportResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "productId", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "productName", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "productUrl", kind: "message", T: StringValue },
    { no: 4, name: "totalPrice", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "tags", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DashboardTopProductReportResponse {
    return new DashboardTopProductReportResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DashboardTopProductReportResponse {
    return new DashboardTopProductReportResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DashboardTopProductReportResponse {
    return new DashboardTopProductReportResponse().fromJsonString(jsonString, options);
  }

  static equals(a: DashboardTopProductReportResponse | PlainMessage<DashboardTopProductReportResponse> | undefined, b: DashboardTopProductReportResponse | PlainMessage<DashboardTopProductReportResponse> | undefined): boolean {
    return proto3.util.equals(DashboardTopProductReportResponse, a, b);
  }
}

/**
 * @generated from message vklink.ordering.api.v1.orders.responses.OrderSummaryReportResponse
 */
export class OrderSummaryReportResponse extends Message<OrderSummaryReportResponse> {
  /**
   * data fields: from 1 to 50
   *
   * @generated from field: string id = 1;
   */
  id = "";

  /**
   * @generated from field: string orderNumber = 2;
   */
  orderNumber = "";

  /**
   * @generated from field: google.protobuf.Timestamp orderDate = 3;
   */
  orderDate?: Timestamp;

  /**
   * @generated from field: google.protobuf.StringValue customerId = 4;
   */
  customerId?: string;

  /**
   * @generated from field: google.protobuf.StringValue customerName = 5;
   */
  customerName?: string;

  /**
   * @generated from field: google.protobuf.StringValue phoneNumber = 6;
   */
  phoneNumber?: string;

  /**
   * @generated from field: string subPrice = 7;
   */
  subPrice = "";

  /**
   * @generated from field: google.protobuf.StringValue deliveryFee = 8;
   */
  deliveryFee?: string;

  /**
   * @generated from field: google.protobuf.StringValue vat = 9;
   */
  vat?: string;

  /**
   * @generated from field: string totalPrice = 10;
   */
  totalPrice = "";

  /**
   * @generated from field: vklink.ordering.api.v1.orders.responses.OrderStatus status = 11;
   */
  status = OrderStatus.UNSPECIFIED;

  /**
   * @generated from field: vklink.ordering.api.v1.orders.responses.PaymentMethod paymentMethod = 12;
   */
  paymentMethod = PaymentMethod.UNSPECIFIED;

  /**
   * @generated from field: vklink.ordering.api.v1.orders.responses.PaymentStatus paymentStatus = 13;
   */
  paymentStatus = PaymentStatus.UNSPECIFIED;

  /**
   * @generated from field: google.protobuf.StringValue storeId = 14;
   */
  storeId?: string;

  /**
   * @generated from field: google.protobuf.StringValue storeName = 15;
   */
  storeName?: string;

  /**
   * @generated from field: google.protobuf.StringValue totalDiscount = 16;
   */
  totalDiscount?: string;

  constructor(data?: PartialMessage<OrderSummaryReportResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "vklink.ordering.api.v1.orders.responses.OrderSummaryReportResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "orderNumber", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "orderDate", kind: "message", T: Timestamp },
    { no: 4, name: "customerId", kind: "message", T: StringValue },
    { no: 5, name: "customerName", kind: "message", T: StringValue },
    { no: 6, name: "phoneNumber", kind: "message", T: StringValue },
    { no: 7, name: "subPrice", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 8, name: "deliveryFee", kind: "message", T: StringValue },
    { no: 9, name: "vat", kind: "message", T: StringValue },
    { no: 10, name: "totalPrice", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 11, name: "status", kind: "enum", T: proto3.getEnumType(OrderStatus) },
    { no: 12, name: "paymentMethod", kind: "enum", T: proto3.getEnumType(PaymentMethod) },
    { no: 13, name: "paymentStatus", kind: "enum", T: proto3.getEnumType(PaymentStatus) },
    { no: 14, name: "storeId", kind: "message", T: StringValue },
    { no: 15, name: "storeName", kind: "message", T: StringValue },
    { no: 16, name: "totalDiscount", kind: "message", T: StringValue },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): OrderSummaryReportResponse {
    return new OrderSummaryReportResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): OrderSummaryReportResponse {
    return new OrderSummaryReportResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): OrderSummaryReportResponse {
    return new OrderSummaryReportResponse().fromJsonString(jsonString, options);
  }

  static equals(a: OrderSummaryReportResponse | PlainMessage<OrderSummaryReportResponse> | undefined, b: OrderSummaryReportResponse | PlainMessage<OrderSummaryReportResponse> | undefined): boolean {
    return proto3.util.equals(OrderSummaryReportResponse, a, b);
  }
}

/**
 * @generated from message vklink.ordering.api.v1.orders.responses.SingleOrderSummaryReportResponse
 */
export class SingleOrderSummaryReportResponse extends Message<SingleOrderSummaryReportResponse> {
  /**
   * @generated from field: vklink.ordering.api.v1.orders.responses.OrderSummaryReportResponse value = 1;
   */
  value?: OrderSummaryReportResponse;

  constructor(data?: PartialMessage<SingleOrderSummaryReportResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "vklink.ordering.api.v1.orders.responses.SingleOrderSummaryReportResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "message", T: OrderSummaryReportResponse },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SingleOrderSummaryReportResponse {
    return new SingleOrderSummaryReportResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SingleOrderSummaryReportResponse {
    return new SingleOrderSummaryReportResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SingleOrderSummaryReportResponse {
    return new SingleOrderSummaryReportResponse().fromJsonString(jsonString, options);
  }

  static equals(a: SingleOrderSummaryReportResponse | PlainMessage<SingleOrderSummaryReportResponse> | undefined, b: SingleOrderSummaryReportResponse | PlainMessage<SingleOrderSummaryReportResponse> | undefined): boolean {
    return proto3.util.equals(SingleOrderSummaryReportResponse, a, b);
  }
}

/**
 * @generated from message vklink.ordering.api.v1.orders.responses.ListOrderSummaryReportResponse
 */
export class ListOrderSummaryReportResponse extends Message<ListOrderSummaryReportResponse> {
  /**
   * @generated from field: repeated vklink.ordering.api.v1.orders.responses.OrderSummaryReportResponse value = 1;
   */
  value: OrderSummaryReportResponse[] = [];

  /**
   * @generated from field: vklink.common.responses.PagingInfoResponse paging = 2;
   */
  paging?: PagingInfoResponse;

  constructor(data?: PartialMessage<ListOrderSummaryReportResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "vklink.ordering.api.v1.orders.responses.ListOrderSummaryReportResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "message", T: OrderSummaryReportResponse, repeated: true },
    { no: 2, name: "paging", kind: "message", T: PagingInfoResponse },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListOrderSummaryReportResponse {
    return new ListOrderSummaryReportResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListOrderSummaryReportResponse {
    return new ListOrderSummaryReportResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListOrderSummaryReportResponse {
    return new ListOrderSummaryReportResponse().fromJsonString(jsonString, options);
  }

  static equals(a: ListOrderSummaryReportResponse | PlainMessage<ListOrderSummaryReportResponse> | undefined, b: ListOrderSummaryReportResponse | PlainMessage<ListOrderSummaryReportResponse> | undefined): boolean {
    return proto3.util.equals(ListOrderSummaryReportResponse, a, b);
  }
}

/**
 * @generated from message vklink.ordering.api.v1.orders.responses.ExportOrderSummaryReportResponse
 */
export class ExportOrderSummaryReportResponse extends Message<ExportOrderSummaryReportResponse> {
  /**
   * @generated from field: bytes data = 1;
   */
  data = new Uint8Array(0);

  constructor(data?: PartialMessage<ExportOrderSummaryReportResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "vklink.ordering.api.v1.orders.responses.ExportOrderSummaryReportResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "data", kind: "scalar", T: 12 /* ScalarType.BYTES */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ExportOrderSummaryReportResponse {
    return new ExportOrderSummaryReportResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ExportOrderSummaryReportResponse {
    return new ExportOrderSummaryReportResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ExportOrderSummaryReportResponse {
    return new ExportOrderSummaryReportResponse().fromJsonString(jsonString, options);
  }

  static equals(a: ExportOrderSummaryReportResponse | PlainMessage<ExportOrderSummaryReportResponse> | undefined, b: ExportOrderSummaryReportResponse | PlainMessage<ExportOrderSummaryReportResponse> | undefined): boolean {
    return proto3.util.equals(ExportOrderSummaryReportResponse, a, b);
  }
}

/**
 * @generated from message vklink.ordering.api.v1.orders.responses.OrderCustomerReportResponse
 */
export class OrderCustomerReportResponse extends Message<OrderCustomerReportResponse> {
  /**
   * @generated from field: google.protobuf.StringValue customerId = 1;
   */
  customerId?: string;

  /**
   * @generated from field: google.protobuf.StringValue customerName = 2;
   */
  customerName?: string;

  /**
   * @generated from field: google.protobuf.StringValue totalOrders = 3;
   */
  totalOrders?: string;

  /**
   * @generated from field: google.protobuf.StringValue totalSales = 4;
   */
  totalSales?: string;

  constructor(data?: PartialMessage<OrderCustomerReportResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "vklink.ordering.api.v1.orders.responses.OrderCustomerReportResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "customerId", kind: "message", T: StringValue },
    { no: 2, name: "customerName", kind: "message", T: StringValue },
    { no: 3, name: "totalOrders", kind: "message", T: StringValue },
    { no: 4, name: "totalSales", kind: "message", T: StringValue },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): OrderCustomerReportResponse {
    return new OrderCustomerReportResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): OrderCustomerReportResponse {
    return new OrderCustomerReportResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): OrderCustomerReportResponse {
    return new OrderCustomerReportResponse().fromJsonString(jsonString, options);
  }

  static equals(a: OrderCustomerReportResponse | PlainMessage<OrderCustomerReportResponse> | undefined, b: OrderCustomerReportResponse | PlainMessage<OrderCustomerReportResponse> | undefined): boolean {
    return proto3.util.equals(OrderCustomerReportResponse, a, b);
  }
}

/**
 * @generated from message vklink.ordering.api.v1.orders.responses.ListOrderCustomerReportsResponse
 */
export class ListOrderCustomerReportsResponse extends Message<ListOrderCustomerReportsResponse> {
  /**
   * @generated from field: repeated vklink.ordering.api.v1.orders.responses.OrderCustomerReportResponse value = 1;
   */
  value: OrderCustomerReportResponse[] = [];

  constructor(data?: PartialMessage<ListOrderCustomerReportsResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "vklink.ordering.api.v1.orders.responses.ListOrderCustomerReportsResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "message", T: OrderCustomerReportResponse, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListOrderCustomerReportsResponse {
    return new ListOrderCustomerReportsResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListOrderCustomerReportsResponse {
    return new ListOrderCustomerReportsResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListOrderCustomerReportsResponse {
    return new ListOrderCustomerReportsResponse().fromJsonString(jsonString, options);
  }

  static equals(a: ListOrderCustomerReportsResponse | PlainMessage<ListOrderCustomerReportsResponse> | undefined, b: ListOrderCustomerReportsResponse | PlainMessage<ListOrderCustomerReportsResponse> | undefined): boolean {
    return proto3.util.equals(ListOrderCustomerReportsResponse, a, b);
  }
}

/**
 * @generated from message vklink.ordering.api.v1.orders.responses.OrderCouponReportResponse
 */
export class OrderCouponReportResponse extends Message<OrderCouponReportResponse> {
  /**
   * @generated from field: string couponCode = 1;
   */
  couponCode = "";

  /**
   * @generated from field: google.protobuf.StringValue maxRedemptions = 2;
   */
  maxRedemptions?: string;

  /**
   * @generated from field: google.protobuf.StringValue totalRedemptions = 3;
   */
  totalRedemptions?: string;

  /**
   * @generated from field: google.protobuf.StringValue uniqueUsers = 4;
   */
  uniqueUsers?: string;

  /**
   * @generated from field: google.protobuf.StringValue redemptionRate = 5;
   */
  redemptionRate?: string;

  /**
   * @generated from field: google.protobuf.StringValue totalSales = 6;
   */
  totalSales?: string;

  /**
   * @generated from field: google.protobuf.StringValue aovCoupon = 7;
   */
  aovCoupon?: string;

  /**
   * @generated from field: google.protobuf.StringValue topRegion = 8;
   */
  topRegion?: string;

  /**
   * @generated from field: google.protobuf.StringValue totalDiscount = 9;
   */
  totalDiscount?: string;

  /**
   * @generated from field: google.protobuf.StringValue netSales = 10;
   */
  netSales?: string;

  /**
   * @generated from field: string couponId = 11;
   */
  couponId = "";

  constructor(data?: PartialMessage<OrderCouponReportResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "vklink.ordering.api.v1.orders.responses.OrderCouponReportResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "couponCode", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "maxRedemptions", kind: "message", T: StringValue },
    { no: 3, name: "totalRedemptions", kind: "message", T: StringValue },
    { no: 4, name: "uniqueUsers", kind: "message", T: StringValue },
    { no: 5, name: "redemptionRate", kind: "message", T: StringValue },
    { no: 6, name: "totalSales", kind: "message", T: StringValue },
    { no: 7, name: "aovCoupon", kind: "message", T: StringValue },
    { no: 8, name: "topRegion", kind: "message", T: StringValue },
    { no: 9, name: "totalDiscount", kind: "message", T: StringValue },
    { no: 10, name: "netSales", kind: "message", T: StringValue },
    { no: 11, name: "couponId", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): OrderCouponReportResponse {
    return new OrderCouponReportResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): OrderCouponReportResponse {
    return new OrderCouponReportResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): OrderCouponReportResponse {
    return new OrderCouponReportResponse().fromJsonString(jsonString, options);
  }

  static equals(a: OrderCouponReportResponse | PlainMessage<OrderCouponReportResponse> | undefined, b: OrderCouponReportResponse | PlainMessage<OrderCouponReportResponse> | undefined): boolean {
    return proto3.util.equals(OrderCouponReportResponse, a, b);
  }
}

/**
 * @generated from message vklink.ordering.api.v1.orders.responses.ListOrderCouponReportResponse
 */
export class ListOrderCouponReportResponse extends Message<ListOrderCouponReportResponse> {
  /**
   * @generated from field: repeated vklink.ordering.api.v1.orders.responses.OrderCouponReportResponse value = 1;
   */
  value: OrderCouponReportResponse[] = [];

  /**
   * @generated from field: vklink.common.responses.PagingInfoResponse paging = 2;
   */
  paging?: PagingInfoResponse;

  constructor(data?: PartialMessage<ListOrderCouponReportResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "vklink.ordering.api.v1.orders.responses.ListOrderCouponReportResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "message", T: OrderCouponReportResponse, repeated: true },
    { no: 2, name: "paging", kind: "message", T: PagingInfoResponse },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListOrderCouponReportResponse {
    return new ListOrderCouponReportResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListOrderCouponReportResponse {
    return new ListOrderCouponReportResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListOrderCouponReportResponse {
    return new ListOrderCouponReportResponse().fromJsonString(jsonString, options);
  }

  static equals(a: ListOrderCouponReportResponse | PlainMessage<ListOrderCouponReportResponse> | undefined, b: ListOrderCouponReportResponse | PlainMessage<ListOrderCouponReportResponse> | undefined): boolean {
    return proto3.util.equals(ListOrderCouponReportResponse, a, b);
  }
}

/**
 * @generated from message vklink.ordering.api.v1.orders.responses.OrderProductReportResponse
 */
export class OrderProductReportResponse extends Message<OrderProductReportResponse> {
  /**
   * @generated from field: string productId = 1;
   */
  productId = "";

  /**
   * @generated from field: string productName = 2;
   */
  productName = "";

  /**
   * @generated from field: google.protobuf.StringValue totalPrice = 3;
   */
  totalPrice?: string;

  /**
   * @generated from field: google.protobuf.StringValue avgOrderValue = 4;
   */
  avgOrderValue?: string;

  /**
   * @generated from field: google.protobuf.StringValue quantitySold = 5;
   */
  quantitySold?: string;

  /**
   * @generated from field: google.protobuf.StringValue customerSatisfactionRating = 6;
   */
  customerSatisfactionRating?: string;

  /**
   * @generated from field: google.protobuf.StringValue customerRetentionRate = 7;
   */
  customerRetentionRate?: string;

  /**
   * @generated from field: google.protobuf.StringValue storeId = 8;
   */
  storeId?: string;

  /**
   * @generated from field: google.protobuf.StringValue storeName = 9;
   */
  storeName?: string;

  constructor(data?: PartialMessage<OrderProductReportResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "vklink.ordering.api.v1.orders.responses.OrderProductReportResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "productId", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "productName", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "totalPrice", kind: "message", T: StringValue },
    { no: 4, name: "avgOrderValue", kind: "message", T: StringValue },
    { no: 5, name: "quantitySold", kind: "message", T: StringValue },
    { no: 6, name: "customerSatisfactionRating", kind: "message", T: StringValue },
    { no: 7, name: "customerRetentionRate", kind: "message", T: StringValue },
    { no: 8, name: "storeId", kind: "message", T: StringValue },
    { no: 9, name: "storeName", kind: "message", T: StringValue },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): OrderProductReportResponse {
    return new OrderProductReportResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): OrderProductReportResponse {
    return new OrderProductReportResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): OrderProductReportResponse {
    return new OrderProductReportResponse().fromJsonString(jsonString, options);
  }

  static equals(a: OrderProductReportResponse | PlainMessage<OrderProductReportResponse> | undefined, b: OrderProductReportResponse | PlainMessage<OrderProductReportResponse> | undefined): boolean {
    return proto3.util.equals(OrderProductReportResponse, a, b);
  }
}

/**
 * @generated from message vklink.ordering.api.v1.orders.responses.ListOrderProductReportsResponse
 */
export class ListOrderProductReportsResponse extends Message<ListOrderProductReportsResponse> {
  /**
   * @generated from field: repeated vklink.ordering.api.v1.orders.responses.OrderProductReportResponse value = 1;
   */
  value: OrderProductReportResponse[] = [];

  constructor(data?: PartialMessage<ListOrderProductReportsResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "vklink.ordering.api.v1.orders.responses.ListOrderProductReportsResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "message", T: OrderProductReportResponse, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListOrderProductReportsResponse {
    return new ListOrderProductReportsResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListOrderProductReportsResponse {
    return new ListOrderProductReportsResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListOrderProductReportsResponse {
    return new ListOrderProductReportsResponse().fromJsonString(jsonString, options);
  }

  static equals(a: ListOrderProductReportsResponse | PlainMessage<ListOrderProductReportsResponse> | undefined, b: ListOrderProductReportsResponse | PlainMessage<ListOrderProductReportsResponse> | undefined): boolean {
    return proto3.util.equals(ListOrderProductReportsResponse, a, b);
  }
}

/**
 * @generated from message vklink.ordering.api.v1.orders.responses.OrderByCustomerDashboardResponse
 */
export class OrderByCustomerDashboardResponse extends Message<OrderByCustomerDashboardResponse> {
  /**
   * @generated from field: string id = 1;
   */
  id = "";

  /**
   * @generated from field: string userName = 2;
   */
  userName = "";

  /**
   * @generated from field: string fullName = 3;
   */
  fullName = "";

  /**
   * @generated from field: google.protobuf.StringValue phoneNumber = 4;
   */
  phoneNumber?: string;

  /**
   * @generated from field: google.protobuf.StringValue email = 5;
   */
  email?: string;

  /**
   * @generated from field: vklink.grpc.enums.UserStatus status = 6;
   */
  status = UserStatus.UNSPECIFIED;

  /**
   * @generated from field: vklink.grpc.enums.Gender gender = 7;
   */
  gender = Gender.UNSPECIFIED;

  /**
   * @generated from field: google.protobuf.StringValue totalOrders = 8;
   */
  totalOrders?: string;

  /**
   * @generated from field: google.protobuf.StringValue totalSales = 9;
   */
  totalSales?: string;

  /**
   * @generated from field: vklink.protobuf.DateOnly birthDate = 10;
   */
  birthDate?: DateOnly;

  /**
   * @generated from field: google.protobuf.StringValue refUserId = 51;
   */
  refUserId?: string;

  /**
   * @generated from field: vklink.common.responses.DocumentInfoResponse avatar = 52;
   */
  avatar?: DocumentInfoResponse;

  constructor(data?: PartialMessage<OrderByCustomerDashboardResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "vklink.ordering.api.v1.orders.responses.OrderByCustomerDashboardResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "userName", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "fullName", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "phoneNumber", kind: "message", T: StringValue },
    { no: 5, name: "email", kind: "message", T: StringValue },
    { no: 6, name: "status", kind: "enum", T: proto3.getEnumType(UserStatus) },
    { no: 7, name: "gender", kind: "enum", T: proto3.getEnumType(Gender) },
    { no: 8, name: "totalOrders", kind: "message", T: StringValue },
    { no: 9, name: "totalSales", kind: "message", T: StringValue },
    { no: 10, name: "birthDate", kind: "message", T: DateOnly },
    { no: 51, name: "refUserId", kind: "message", T: StringValue },
    { no: 52, name: "avatar", kind: "message", T: DocumentInfoResponse },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): OrderByCustomerDashboardResponse {
    return new OrderByCustomerDashboardResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): OrderByCustomerDashboardResponse {
    return new OrderByCustomerDashboardResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): OrderByCustomerDashboardResponse {
    return new OrderByCustomerDashboardResponse().fromJsonString(jsonString, options);
  }

  static equals(a: OrderByCustomerDashboardResponse | PlainMessage<OrderByCustomerDashboardResponse> | undefined, b: OrderByCustomerDashboardResponse | PlainMessage<OrderByCustomerDashboardResponse> | undefined): boolean {
    return proto3.util.equals(OrderByCustomerDashboardResponse, a, b);
  }
}

/**
 * @generated from message vklink.ordering.api.v1.orders.responses.ListOrderByCustomerDashboardResponse
 */
export class ListOrderByCustomerDashboardResponse extends Message<ListOrderByCustomerDashboardResponse> {
  /**
   * @generated from field: repeated vklink.ordering.api.v1.orders.responses.OrderByCustomerDashboardResponse value = 1;
   */
  value: OrderByCustomerDashboardResponse[] = [];

  /**
   * @generated from field: int32 totalCustomer = 2;
   */
  totalCustomer = 0;

  constructor(data?: PartialMessage<ListOrderByCustomerDashboardResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "vklink.ordering.api.v1.orders.responses.ListOrderByCustomerDashboardResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "message", T: OrderByCustomerDashboardResponse, repeated: true },
    { no: 2, name: "totalCustomer", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListOrderByCustomerDashboardResponse {
    return new ListOrderByCustomerDashboardResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListOrderByCustomerDashboardResponse {
    return new ListOrderByCustomerDashboardResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListOrderByCustomerDashboardResponse {
    return new ListOrderByCustomerDashboardResponse().fromJsonString(jsonString, options);
  }

  static equals(a: ListOrderByCustomerDashboardResponse | PlainMessage<ListOrderByCustomerDashboardResponse> | undefined, b: ListOrderByCustomerDashboardResponse | PlainMessage<ListOrderByCustomerDashboardResponse> | undefined): boolean {
    return proto3.util.equals(ListOrderByCustomerDashboardResponse, a, b);
  }
}

/**
 * @generated from message vklink.ordering.api.v1.orders.responses.AdminOrderResponse
 */
export class AdminOrderResponse extends Message<AdminOrderResponse> {
  /**
   * data fields: from 1 to 50
   *
   * @generated from field: string id = 1;
   */
  id = "";

  /**
   * @generated from field: string orderNumber = 2;
   */
  orderNumber = "";

  /**
   * @generated from field: vklink.ordering.api.v1.orders.responses.OrderStatus status = 3;
   */
  status = OrderStatus.UNSPECIFIED;

  /**
   * @generated from field: string totalPrice = 4;
   */
  totalPrice = "";

  /**
   * @generated from field: vklink.ordering.api.v1.orders.responses.PaymentMethod paymentMethod = 5;
   */
  paymentMethod = PaymentMethod.UNSPECIFIED;

  /**
   * @generated from field: google.protobuf.StringValue pickupFullAddress = 6;
   */
  pickupFullAddress?: string;

  /**
   * @generated from field: google.protobuf.StringValue deliveryFullAddress = 7;
   */
  deliveryFullAddress?: string;

  /**
   * @generated from field: google.protobuf.Timestamp createdAt = 8;
   */
  createdAt?: Timestamp;

  /**
   * @generated from field: vklink.ordering.api.v1.orders.responses.PaymentStatus paymentStatus = 9;
   */
  paymentStatus = PaymentStatus.UNSPECIFIED;

  /**
   * @generated from field: google.protobuf.StringValue storeName = 10;
   */
  storeName?: string;

  constructor(data?: PartialMessage<AdminOrderResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "vklink.ordering.api.v1.orders.responses.AdminOrderResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "orderNumber", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "status", kind: "enum", T: proto3.getEnumType(OrderStatus) },
    { no: 4, name: "totalPrice", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "paymentMethod", kind: "enum", T: proto3.getEnumType(PaymentMethod) },
    { no: 6, name: "pickupFullAddress", kind: "message", T: StringValue },
    { no: 7, name: "deliveryFullAddress", kind: "message", T: StringValue },
    { no: 8, name: "createdAt", kind: "message", T: Timestamp },
    { no: 9, name: "paymentStatus", kind: "enum", T: proto3.getEnumType(PaymentStatus) },
    { no: 10, name: "storeName", kind: "message", T: StringValue },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AdminOrderResponse {
    return new AdminOrderResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AdminOrderResponse {
    return new AdminOrderResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AdminOrderResponse {
    return new AdminOrderResponse().fromJsonString(jsonString, options);
  }

  static equals(a: AdminOrderResponse | PlainMessage<AdminOrderResponse> | undefined, b: AdminOrderResponse | PlainMessage<AdminOrderResponse> | undefined): boolean {
    return proto3.util.equals(AdminOrderResponse, a, b);
  }
}

/**
 * @generated from message vklink.ordering.api.v1.orders.responses.ListAdminOrdersResponse
 */
export class ListAdminOrdersResponse extends Message<ListAdminOrdersResponse> {
  /**
   * @generated from field: repeated vklink.ordering.api.v1.orders.responses.AdminOrderResponse value = 1;
   */
  value: AdminOrderResponse[] = [];

  /**
   * @generated from field: vklink.common.responses.PagingInfoResponse paging = 2;
   */
  paging?: PagingInfoResponse;

  constructor(data?: PartialMessage<ListAdminOrdersResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "vklink.ordering.api.v1.orders.responses.ListAdminOrdersResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "message", T: AdminOrderResponse, repeated: true },
    { no: 2, name: "paging", kind: "message", T: PagingInfoResponse },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListAdminOrdersResponse {
    return new ListAdminOrdersResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListAdminOrdersResponse {
    return new ListAdminOrdersResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListAdminOrdersResponse {
    return new ListAdminOrdersResponse().fromJsonString(jsonString, options);
  }

  static equals(a: ListAdminOrdersResponse | PlainMessage<ListAdminOrdersResponse> | undefined, b: ListAdminOrdersResponse | PlainMessage<ListAdminOrdersResponse> | undefined): boolean {
    return proto3.util.equals(ListAdminOrdersResponse, a, b);
  }
}

/**
 * @generated from message vklink.ordering.api.v1.orders.responses.AdminWidgetOrderResponse
 */
export class AdminWidgetOrderResponse extends Message<AdminWidgetOrderResponse> {
  /**
   * data fields: from 1 to 50
   *
   * @generated from field: string id = 1;
   */
  id = "";

  /**
   * @generated from field: string orderNumber = 2;
   */
  orderNumber = "";

  /**
   * @generated from field: vklink.ordering.api.v1.orders.responses.OrderStatus status = 3;
   */
  status = OrderStatus.UNSPECIFIED;

  /**
   * @generated from field: string totalPrice = 4;
   */
  totalPrice = "";

  /**
   * @generated from field: google.protobuf.StringValue customerId = 5;
   */
  customerId?: string;

  /**
   * @generated from field: string customerName = 6;
   */
  customerName = "";

  /**
   * relationship fields: from 51 to 60
   *
   * @generated from field: repeated vklink.ordering.api.v1.orders.responses.AdminWidgetOrderItemResponse items = 51;
   */
  items: AdminWidgetOrderItemResponse[] = [];

  constructor(data?: PartialMessage<AdminWidgetOrderResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "vklink.ordering.api.v1.orders.responses.AdminWidgetOrderResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "orderNumber", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "status", kind: "enum", T: proto3.getEnumType(OrderStatus) },
    { no: 4, name: "totalPrice", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "customerId", kind: "message", T: StringValue },
    { no: 6, name: "customerName", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 51, name: "items", kind: "message", T: AdminWidgetOrderItemResponse, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AdminWidgetOrderResponse {
    return new AdminWidgetOrderResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AdminWidgetOrderResponse {
    return new AdminWidgetOrderResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AdminWidgetOrderResponse {
    return new AdminWidgetOrderResponse().fromJsonString(jsonString, options);
  }

  static equals(a: AdminWidgetOrderResponse | PlainMessage<AdminWidgetOrderResponse> | undefined, b: AdminWidgetOrderResponse | PlainMessage<AdminWidgetOrderResponse> | undefined): boolean {
    return proto3.util.equals(AdminWidgetOrderResponse, a, b);
  }
}

/**
 * @generated from message vklink.ordering.api.v1.orders.responses.AdminWidgetOrderItemResponse
 */
export class AdminWidgetOrderItemResponse extends Message<AdminWidgetOrderItemResponse> {
  /**
   * data fields: from 1 to 50
   *
   * @generated from field: string id = 1;
   */
  id = "";

  /**
   * @generated from field: string productId = 2;
   */
  productId = "";

  /**
   * @generated from field: string productName = 3;
   */
  productName = "";

  /**
   * @generated from field: int32 quantity = 4;
   */
  quantity = 0;

  /**
   * @generated from field: string totalPrice = 5;
   */
  totalPrice = "";

  /**
   * @generated from field: vklink.common.responses.DocumentInfoResponse document = 6;
   */
  document?: DocumentInfoResponse;

  /**
   * relationship fields: from 51 to 60
   *
   * @generated from field: vklink.ordering.api.v1.orders.responses.AdminWidgetOrderCategoryResponse category = 7;
   */
  category?: AdminWidgetOrderCategoryResponse;

  constructor(data?: PartialMessage<AdminWidgetOrderItemResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "vklink.ordering.api.v1.orders.responses.AdminWidgetOrderItemResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "productId", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "productName", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "quantity", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 5, name: "totalPrice", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 6, name: "document", kind: "message", T: DocumentInfoResponse },
    { no: 7, name: "category", kind: "message", T: AdminWidgetOrderCategoryResponse },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AdminWidgetOrderItemResponse {
    return new AdminWidgetOrderItemResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AdminWidgetOrderItemResponse {
    return new AdminWidgetOrderItemResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AdminWidgetOrderItemResponse {
    return new AdminWidgetOrderItemResponse().fromJsonString(jsonString, options);
  }

  static equals(a: AdminWidgetOrderItemResponse | PlainMessage<AdminWidgetOrderItemResponse> | undefined, b: AdminWidgetOrderItemResponse | PlainMessage<AdminWidgetOrderItemResponse> | undefined): boolean {
    return proto3.util.equals(AdminWidgetOrderItemResponse, a, b);
  }
}

/**
 * @generated from message vklink.ordering.api.v1.orders.responses.AdminWidgetOrderCategoryResponse
 */
export class AdminWidgetOrderCategoryResponse extends Message<AdminWidgetOrderCategoryResponse> {
  /**
   * data fields: from 1 to 50
   *
   * @generated from field: google.protobuf.StringValue id = 1;
   */
  id?: string;

  /**
   * @generated from field: google.protobuf.StringValue name = 2;
   */
  name?: string;

  /**
   * @generated from field: vklink.common.responses.DocumentInfoResponse icon = 3;
   */
  icon?: DocumentInfoResponse;

  constructor(data?: PartialMessage<AdminWidgetOrderCategoryResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "vklink.ordering.api.v1.orders.responses.AdminWidgetOrderCategoryResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: StringValue },
    { no: 2, name: "name", kind: "message", T: StringValue },
    { no: 3, name: "icon", kind: "message", T: DocumentInfoResponse },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AdminWidgetOrderCategoryResponse {
    return new AdminWidgetOrderCategoryResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AdminWidgetOrderCategoryResponse {
    return new AdminWidgetOrderCategoryResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AdminWidgetOrderCategoryResponse {
    return new AdminWidgetOrderCategoryResponse().fromJsonString(jsonString, options);
  }

  static equals(a: AdminWidgetOrderCategoryResponse | PlainMessage<AdminWidgetOrderCategoryResponse> | undefined, b: AdminWidgetOrderCategoryResponse | PlainMessage<AdminWidgetOrderCategoryResponse> | undefined): boolean {
    return proto3.util.equals(AdminWidgetOrderCategoryResponse, a, b);
  }
}

/**
 * @generated from message vklink.ordering.api.v1.orders.responses.ListAdminWidgetOrdersResponse
 */
export class ListAdminWidgetOrdersResponse extends Message<ListAdminWidgetOrdersResponse> {
  /**
   * @generated from field: repeated vklink.ordering.api.v1.orders.responses.AdminWidgetOrderResponse value = 1;
   */
  value: AdminWidgetOrderResponse[] = [];

  /**
   * @generated from field: vklink.common.responses.PagingInfoResponse paging = 2;
   */
  paging?: PagingInfoResponse;

  constructor(data?: PartialMessage<ListAdminWidgetOrdersResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "vklink.ordering.api.v1.orders.responses.ListAdminWidgetOrdersResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "message", T: AdminWidgetOrderResponse, repeated: true },
    { no: 2, name: "paging", kind: "message", T: PagingInfoResponse },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListAdminWidgetOrdersResponse {
    return new ListAdminWidgetOrdersResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListAdminWidgetOrdersResponse {
    return new ListAdminWidgetOrdersResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListAdminWidgetOrdersResponse {
    return new ListAdminWidgetOrdersResponse().fromJsonString(jsonString, options);
  }

  static equals(a: ListAdminWidgetOrdersResponse | PlainMessage<ListAdminWidgetOrdersResponse> | undefined, b: ListAdminWidgetOrdersResponse | PlainMessage<ListAdminWidgetOrdersResponse> | undefined): boolean {
    return proto3.util.equals(ListAdminWidgetOrdersResponse, a, b);
  }
}

/**
 * @generated from message vklink.ordering.api.v1.orders.responses.MobileOrderCategoryResponse
 */
export class MobileOrderCategoryResponse extends Message<MobileOrderCategoryResponse> {
  /**
   * data fields: from 1 to 50
   *
   * @generated from field: google.protobuf.StringValue id = 1;
   */
  id?: string;

  /**
   * @generated from field: google.protobuf.StringValue name = 2;
   */
  name?: string;

  constructor(data?: PartialMessage<MobileOrderCategoryResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "vklink.ordering.api.v1.orders.responses.MobileOrderCategoryResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: StringValue },
    { no: 2, name: "name", kind: "message", T: StringValue },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MobileOrderCategoryResponse {
    return new MobileOrderCategoryResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MobileOrderCategoryResponse {
    return new MobileOrderCategoryResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MobileOrderCategoryResponse {
    return new MobileOrderCategoryResponse().fromJsonString(jsonString, options);
  }

  static equals(a: MobileOrderCategoryResponse | PlainMessage<MobileOrderCategoryResponse> | undefined, b: MobileOrderCategoryResponse | PlainMessage<MobileOrderCategoryResponse> | undefined): boolean {
    return proto3.util.equals(MobileOrderCategoryResponse, a, b);
  }
}

/**
 * @generated from message vklink.ordering.api.v1.orders.responses.MobileOrderItemResponse
 */
export class MobileOrderItemResponse extends Message<MobileOrderItemResponse> {
  /**
   * data fields: from 1 to 50
   *
   * @generated from field: string id = 1;
   */
  id = "";

  /**
   * @generated from field: string productId = 2;
   */
  productId = "";

  /**
   * @generated from field: string productName = 3;
   */
  productName = "";

  /**
   * @generated from field: vklink.common.responses.DocumentInfoResponse document = 4;
   */
  document?: DocumentInfoResponse;

  /**
   * @generated from field: vklink.ordering.api.v1.orders.responses.MobileOrderCategoryResponse category = 5;
   */
  category?: MobileOrderCategoryResponse;

  constructor(data?: PartialMessage<MobileOrderItemResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "vklink.ordering.api.v1.orders.responses.MobileOrderItemResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "productId", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "productName", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "document", kind: "message", T: DocumentInfoResponse },
    { no: 5, name: "category", kind: "message", T: MobileOrderCategoryResponse },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MobileOrderItemResponse {
    return new MobileOrderItemResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MobileOrderItemResponse {
    return new MobileOrderItemResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MobileOrderItemResponse {
    return new MobileOrderItemResponse().fromJsonString(jsonString, options);
  }

  static equals(a: MobileOrderItemResponse | PlainMessage<MobileOrderItemResponse> | undefined, b: MobileOrderItemResponse | PlainMessage<MobileOrderItemResponse> | undefined): boolean {
    return proto3.util.equals(MobileOrderItemResponse, a, b);
  }
}

/**
 * @generated from message vklink.ordering.api.v1.orders.responses.MobileOrderResponse
 */
export class MobileOrderResponse extends Message<MobileOrderResponse> {
  /**
   * data fields: from 1 to 50
   *
   * @generated from field: string id = 1;
   */
  id = "";

  /**
   * @generated from field: string orderNumber = 2;
   */
  orderNumber = "";

  /**
   * @generated from field: vklink.ordering.api.v1.orders.responses.OrderStatus status = 3;
   */
  status = OrderStatus.UNSPECIFIED;

  /**
   * @generated from field: string totalPrice = 4;
   */
  totalPrice = "";

  /**
   * @generated from field: google.protobuf.Timestamp createdAt = 5;
   */
  createdAt?: Timestamp;

  /**
   * relationship fields: from 51 to 60
   *
   * @generated from field: repeated vklink.ordering.api.v1.orders.responses.MobileOrderItemResponse items = 51;
   */
  items: MobileOrderItemResponse[] = [];

  constructor(data?: PartialMessage<MobileOrderResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "vklink.ordering.api.v1.orders.responses.MobileOrderResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "orderNumber", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "status", kind: "enum", T: proto3.getEnumType(OrderStatus) },
    { no: 4, name: "totalPrice", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "createdAt", kind: "message", T: Timestamp },
    { no: 51, name: "items", kind: "message", T: MobileOrderItemResponse, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MobileOrderResponse {
    return new MobileOrderResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MobileOrderResponse {
    return new MobileOrderResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MobileOrderResponse {
    return new MobileOrderResponse().fromJsonString(jsonString, options);
  }

  static equals(a: MobileOrderResponse | PlainMessage<MobileOrderResponse> | undefined, b: MobileOrderResponse | PlainMessage<MobileOrderResponse> | undefined): boolean {
    return proto3.util.equals(MobileOrderResponse, a, b);
  }
}

/**
 * @generated from message vklink.ordering.api.v1.orders.responses.MobileListOrdersResponse
 */
export class MobileListOrdersResponse extends Message<MobileListOrdersResponse> {
  /**
   * @generated from field: repeated vklink.ordering.api.v1.orders.responses.MobileOrderResponse value = 1;
   */
  value: MobileOrderResponse[] = [];

  /**
   * @generated from field: vklink.common.responses.PagingInfoResponse paging = 2;
   */
  paging?: PagingInfoResponse;

  constructor(data?: PartialMessage<MobileListOrdersResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "vklink.ordering.api.v1.orders.responses.MobileListOrdersResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "message", T: MobileOrderResponse, repeated: true },
    { no: 2, name: "paging", kind: "message", T: PagingInfoResponse },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MobileListOrdersResponse {
    return new MobileListOrdersResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MobileListOrdersResponse {
    return new MobileListOrdersResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MobileListOrdersResponse {
    return new MobileListOrdersResponse().fromJsonString(jsonString, options);
  }

  static equals(a: MobileListOrdersResponse | PlainMessage<MobileListOrdersResponse> | undefined, b: MobileListOrdersResponse | PlainMessage<MobileListOrdersResponse> | undefined): boolean {
    return proto3.util.equals(MobileListOrdersResponse, a, b);
  }
}

