// @generated by protoc-gen-es v1.8.0 with parameter "target=ts,import_extension=none"
// @generated from file vklink/services/reporting/v1/orders/responses.proto (package vklink.reporting.api.v1.orders.responses, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3, StringValue } from "@bufbuild/protobuf";
import { UserStatus } from "../../../../libs/common/enums/user_status_pb";
import { Gender } from "../../../../libs/common/enums/gender_pb";
import { DateOnly } from "../../../../libs/protobuf/date_only_pb";
import { DocumentInfoResponse } from "../../../../libs/common/responses/document_info_response_pb";

/**
 * @generated from message vklink.reporting.api.v1.orders.responses.DashboardOrderRevenueWidgetResponse
 */
export class DashboardOrderRevenueWidgetResponse extends Message<DashboardOrderRevenueWidgetResponse> {
  /**
   * @generated from field: string totalValue = 1;
   */
  totalValue = "";

  /**
   * @generated from field: repeated string labels = 2;
   */
  labels: string[] = [];

  /**
   * @generated from field: repeated string values = 3;
   */
  values: string[] = [];

  constructor(data?: PartialMessage<DashboardOrderRevenueWidgetResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "vklink.reporting.api.v1.orders.responses.DashboardOrderRevenueWidgetResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "totalValue", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "labels", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
    { no: 3, name: "values", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DashboardOrderRevenueWidgetResponse {
    return new DashboardOrderRevenueWidgetResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DashboardOrderRevenueWidgetResponse {
    return new DashboardOrderRevenueWidgetResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DashboardOrderRevenueWidgetResponse {
    return new DashboardOrderRevenueWidgetResponse().fromJsonString(jsonString, options);
  }

  static equals(a: DashboardOrderRevenueWidgetResponse | PlainMessage<DashboardOrderRevenueWidgetResponse> | undefined, b: DashboardOrderRevenueWidgetResponse | PlainMessage<DashboardOrderRevenueWidgetResponse> | undefined): boolean {
    return proto3.util.equals(DashboardOrderRevenueWidgetResponse, a, b);
  }
}

/**
 * @generated from message vklink.reporting.api.v1.orders.responses.DashboardCustomerListWidgetResponse
 */
export class DashboardCustomerListWidgetResponse extends Message<DashboardCustomerListWidgetResponse> {
  /**
   * @generated from field: string totalValue = 1;
   */
  totalValue = "";

  /**
   * @generated from field: repeated vklink.reporting.api.v1.orders.responses.DashboardCustomerWidgetResponse value = 2;
   */
  value: DashboardCustomerWidgetResponse[] = [];

  constructor(data?: PartialMessage<DashboardCustomerListWidgetResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "vklink.reporting.api.v1.orders.responses.DashboardCustomerListWidgetResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "totalValue", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "value", kind: "message", T: DashboardCustomerWidgetResponse, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DashboardCustomerListWidgetResponse {
    return new DashboardCustomerListWidgetResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DashboardCustomerListWidgetResponse {
    return new DashboardCustomerListWidgetResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DashboardCustomerListWidgetResponse {
    return new DashboardCustomerListWidgetResponse().fromJsonString(jsonString, options);
  }

  static equals(a: DashboardCustomerListWidgetResponse | PlainMessage<DashboardCustomerListWidgetResponse> | undefined, b: DashboardCustomerListWidgetResponse | PlainMessage<DashboardCustomerListWidgetResponse> | undefined): boolean {
    return proto3.util.equals(DashboardCustomerListWidgetResponse, a, b);
  }
}

/**
 * @generated from message vklink.reporting.api.v1.orders.responses.DashboardCustomerWidgetResponse
 */
export class DashboardCustomerWidgetResponse extends Message<DashboardCustomerWidgetResponse> {
  /**
   * @generated from field: string id = 1;
   */
  id = "";

  /**
   * @generated from field: string userName = 2;
   */
  userName = "";

  /**
   * @generated from field: string fullName = 3;
   */
  fullName = "";

  /**
   * @generated from field: google.protobuf.StringValue phoneNumber = 4;
   */
  phoneNumber?: string;

  /**
   * @generated from field: google.protobuf.StringValue email = 5;
   */
  email?: string;

  /**
   * @generated from field: vklink.grpc.enums.UserStatus status = 6;
   */
  status = UserStatus.UNSPECIFIED;

  /**
   * @generated from field: vklink.grpc.enums.Gender gender = 7;
   */
  gender = Gender.UNSPECIFIED;

  /**
   * @generated from field: vklink.protobuf.DateOnly birthDate = 8;
   */
  birthDate?: DateOnly;

  /**
   * @generated from field: google.protobuf.StringValue totalSales = 9;
   */
  totalSales?: string;

  /**
   * @generated from field: google.protobuf.StringValue refUserId = 51;
   */
  refUserId?: string;

  /**
   * @generated from field: vklink.common.responses.DocumentInfoResponse avatar = 52;
   */
  avatar?: DocumentInfoResponse;

  constructor(data?: PartialMessage<DashboardCustomerWidgetResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "vklink.reporting.api.v1.orders.responses.DashboardCustomerWidgetResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "userName", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "fullName", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "phoneNumber", kind: "message", T: StringValue },
    { no: 5, name: "email", kind: "message", T: StringValue },
    { no: 6, name: "status", kind: "enum", T: proto3.getEnumType(UserStatus) },
    { no: 7, name: "gender", kind: "enum", T: proto3.getEnumType(Gender) },
    { no: 8, name: "birthDate", kind: "message", T: DateOnly },
    { no: 9, name: "totalSales", kind: "message", T: StringValue },
    { no: 51, name: "refUserId", kind: "message", T: StringValue },
    { no: 52, name: "avatar", kind: "message", T: DocumentInfoResponse },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DashboardCustomerWidgetResponse {
    return new DashboardCustomerWidgetResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DashboardCustomerWidgetResponse {
    return new DashboardCustomerWidgetResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DashboardCustomerWidgetResponse {
    return new DashboardCustomerWidgetResponse().fromJsonString(jsonString, options);
  }

  static equals(a: DashboardCustomerWidgetResponse | PlainMessage<DashboardCustomerWidgetResponse> | undefined, b: DashboardCustomerWidgetResponse | PlainMessage<DashboardCustomerWidgetResponse> | undefined): boolean {
    return proto3.util.equals(DashboardCustomerWidgetResponse, a, b);
  }
}

/**
 * @generated from message vklink.reporting.api.v1.orders.responses.DashboardProductListWidgetResponse
 */
export class DashboardProductListWidgetResponse extends Message<DashboardProductListWidgetResponse> {
  /**
   * @generated from field: string totalValue = 1;
   */
  totalValue = "";

  /**
   * @generated from field: repeated vklink.reporting.api.v1.orders.responses.DashboardProductWidgetResponse value = 2;
   */
  value: DashboardProductWidgetResponse[] = [];

  constructor(data?: PartialMessage<DashboardProductListWidgetResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "vklink.reporting.api.v1.orders.responses.DashboardProductListWidgetResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "totalValue", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "value", kind: "message", T: DashboardProductWidgetResponse, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DashboardProductListWidgetResponse {
    return new DashboardProductListWidgetResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DashboardProductListWidgetResponse {
    return new DashboardProductListWidgetResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DashboardProductListWidgetResponse {
    return new DashboardProductListWidgetResponse().fromJsonString(jsonString, options);
  }

  static equals(a: DashboardProductListWidgetResponse | PlainMessage<DashboardProductListWidgetResponse> | undefined, b: DashboardProductListWidgetResponse | PlainMessage<DashboardProductListWidgetResponse> | undefined): boolean {
    return proto3.util.equals(DashboardProductListWidgetResponse, a, b);
  }
}

/**
 * @generated from message vklink.reporting.api.v1.orders.responses.DashboardProductWidgetResponse
 */
export class DashboardProductWidgetResponse extends Message<DashboardProductWidgetResponse> {
  /**
   * @generated from field: string productId = 1;
   */
  productId = "";

  /**
   * @generated from field: string productName = 2;
   */
  productName = "";

  /**
   * @generated from field: google.protobuf.StringValue productUrl = 3;
   */
  productUrl?: string;

  /**
   * @generated from field: string totalPrice = 4;
   */
  totalPrice = "";

  /**
   * @generated from field: repeated string tags = 5;
   */
  tags: string[] = [];

  constructor(data?: PartialMessage<DashboardProductWidgetResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "vklink.reporting.api.v1.orders.responses.DashboardProductWidgetResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "productId", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "productName", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "productUrl", kind: "message", T: StringValue },
    { no: 4, name: "totalPrice", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "tags", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DashboardProductWidgetResponse {
    return new DashboardProductWidgetResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DashboardProductWidgetResponse {
    return new DashboardProductWidgetResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DashboardProductWidgetResponse {
    return new DashboardProductWidgetResponse().fromJsonString(jsonString, options);
  }

  static equals(a: DashboardProductWidgetResponse | PlainMessage<DashboardProductWidgetResponse> | undefined, b: DashboardProductWidgetResponse | PlainMessage<DashboardProductWidgetResponse> | undefined): boolean {
    return proto3.util.equals(DashboardProductWidgetResponse, a, b);
  }
}

