// @generated by protoc-gen-es v1.8.0 with parameter "target=ts,import_extension=none"
// @generated from file vklink/services/store/v1/stores/commands.proto (package vklink.store.api.v1.stores.commands, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3, StringValue } from "@bufbuild/protobuf";
import { CreateAddressCommand } from "../../../../libs/common/commands/create_address_command_pb";

/**
 * @generated from message vklink.store.api.v1.stores.commands.CreateStoreCommand
 */
export class CreateStoreCommand extends Message<CreateStoreCommand> {
  /**
   * data fields: from 1 to 50
   *
   * @generated from field: string name = 2;
   */
  name = "";

  /**
   * @generated from field: google.protobuf.StringValue phoneNumber = 3;
   */
  phoneNumber?: string;

  /**
   * @generated from field: google.protobuf.StringValue description = 4;
   */
  description?: string;

  /**
   * @generated from field: vklink.common.commands.CreateAddressCommand address = 5;
   */
  address?: CreateAddressCommand;

  constructor(data?: PartialMessage<CreateStoreCommand>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "vklink.store.api.v1.stores.commands.CreateStoreCommand";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 2, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "phoneNumber", kind: "message", T: StringValue },
    { no: 4, name: "description", kind: "message", T: StringValue },
    { no: 5, name: "address", kind: "message", T: CreateAddressCommand },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CreateStoreCommand {
    return new CreateStoreCommand().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CreateStoreCommand {
    return new CreateStoreCommand().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CreateStoreCommand {
    return new CreateStoreCommand().fromJsonString(jsonString, options);
  }

  static equals(a: CreateStoreCommand | PlainMessage<CreateStoreCommand> | undefined, b: CreateStoreCommand | PlainMessage<CreateStoreCommand> | undefined): boolean {
    return proto3.util.equals(CreateStoreCommand, a, b);
  }
}

/**
 * @generated from message vklink.store.api.v1.stores.commands.UpdateStoreCommand
 */
export class UpdateStoreCommand extends Message<UpdateStoreCommand> {
  /**
   * data fields: from 1 to 50
   *
   * @generated from field: string id = 1;
   */
  id = "";

  /**
   * @generated from field: string name = 2;
   */
  name = "";

  /**
   * @generated from field: google.protobuf.StringValue phoneNumber = 3;
   */
  phoneNumber?: string;

  /**
   * @generated from field: google.protobuf.StringValue description = 4;
   */
  description?: string;

  /**
   * @generated from field: vklink.common.commands.CreateAddressCommand address = 5;
   */
  address?: CreateAddressCommand;

  constructor(data?: PartialMessage<UpdateStoreCommand>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "vklink.store.api.v1.stores.commands.UpdateStoreCommand";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "phoneNumber", kind: "message", T: StringValue },
    { no: 4, name: "description", kind: "message", T: StringValue },
    { no: 5, name: "address", kind: "message", T: CreateAddressCommand },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateStoreCommand {
    return new UpdateStoreCommand().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateStoreCommand {
    return new UpdateStoreCommand().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateStoreCommand {
    return new UpdateStoreCommand().fromJsonString(jsonString, options);
  }

  static equals(a: UpdateStoreCommand | PlainMessage<UpdateStoreCommand> | undefined, b: UpdateStoreCommand | PlainMessage<UpdateStoreCommand> | undefined): boolean {
    return proto3.util.equals(UpdateStoreCommand, a, b);
  }
}

/**
 * @generated from message vklink.store.api.v1.stores.commands.DisableStoreCommand
 */
export class DisableStoreCommand extends Message<DisableStoreCommand> {
  /**
   * data fields: from 1 to 50
   *
   * @generated from field: string id = 1;
   */
  id = "";

  constructor(data?: PartialMessage<DisableStoreCommand>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "vklink.store.api.v1.stores.commands.DisableStoreCommand";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DisableStoreCommand {
    return new DisableStoreCommand().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DisableStoreCommand {
    return new DisableStoreCommand().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DisableStoreCommand {
    return new DisableStoreCommand().fromJsonString(jsonString, options);
  }

  static equals(a: DisableStoreCommand | PlainMessage<DisableStoreCommand> | undefined, b: DisableStoreCommand | PlainMessage<DisableStoreCommand> | undefined): boolean {
    return proto3.util.equals(DisableStoreCommand, a, b);
  }
}

/**
 * @generated from message vklink.store.api.v1.stores.commands.EnableStoreCommand
 */
export class EnableStoreCommand extends Message<EnableStoreCommand> {
  /**
   * data fields: from 1 to 50
   *
   * @generated from field: string id = 1;
   */
  id = "";

  constructor(data?: PartialMessage<EnableStoreCommand>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "vklink.store.api.v1.stores.commands.EnableStoreCommand";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): EnableStoreCommand {
    return new EnableStoreCommand().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): EnableStoreCommand {
    return new EnableStoreCommand().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): EnableStoreCommand {
    return new EnableStoreCommand().fromJsonString(jsonString, options);
  }

  static equals(a: EnableStoreCommand | PlainMessage<EnableStoreCommand> | undefined, b: EnableStoreCommand | PlainMessage<EnableStoreCommand> | undefined): boolean {
    return proto3.util.equals(EnableStoreCommand, a, b);
  }
}

