// @generated by protoc-gen-es v1.8.0 with parameter "target=ts,import_extension=none"
// @generated from file vklink/services/cms/v1/settings/responses.proto (package vklink.cms.api.v1.settings.responses, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3, StringValue } from "@bufbuild/protobuf";
import { ApplicationSettingType } from "./enums_pb";
import { ActorInfoResponse } from "../../../../libs/common/responses/actor_info_response_pb";
import { PagingInfoResponse } from "../../../../libs/common/responses/paging_info_response_pb";

/**
 * @generated from message vklink.cms.api.v1.settings.responses.SettingResponse
 */
export class SettingResponse extends Message<SettingResponse> {
  /**
   * @generated from field: string id = 1;
   */
  id = "";

  /**
   * @generated from field: vklink.cms.api.v1.settings.enums.ApplicationSettingType type = 2;
   */
  type = ApplicationSettingType.UNSPECIFIED;

  /**
   * @generated from field: string value = 3;
   */
  value = "";

  /**
   * @generated from field: google.protobuf.StringValue description = 4;
   */
  description?: string;

  /**
   * audit fields: from 63 to 70
   *
   * @generated from field: vklink.common.responses.ActorInfoResponse creator = 61;
   */
  creator?: ActorInfoResponse;

  /**
   * @generated from field: vklink.common.responses.ActorInfoResponse updater = 62;
   */
  updater?: ActorInfoResponse;

  constructor(data?: PartialMessage<SettingResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "vklink.cms.api.v1.settings.responses.SettingResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "type", kind: "enum", T: proto3.getEnumType(ApplicationSettingType) },
    { no: 3, name: "value", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "description", kind: "message", T: StringValue },
    { no: 61, name: "creator", kind: "message", T: ActorInfoResponse },
    { no: 62, name: "updater", kind: "message", T: ActorInfoResponse },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SettingResponse {
    return new SettingResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SettingResponse {
    return new SettingResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SettingResponse {
    return new SettingResponse().fromJsonString(jsonString, options);
  }

  static equals(a: SettingResponse | PlainMessage<SettingResponse> | undefined, b: SettingResponse | PlainMessage<SettingResponse> | undefined): boolean {
    return proto3.util.equals(SettingResponse, a, b);
  }
}

/**
 * @generated from message vklink.cms.api.v1.settings.responses.SingleSettingResponse
 */
export class SingleSettingResponse extends Message<SingleSettingResponse> {
  /**
   * @generated from field: vklink.cms.api.v1.settings.responses.SettingResponse value = 1;
   */
  value?: SettingResponse;

  constructor(data?: PartialMessage<SingleSettingResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "vklink.cms.api.v1.settings.responses.SingleSettingResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "message", T: SettingResponse },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SingleSettingResponse {
    return new SingleSettingResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SingleSettingResponse {
    return new SingleSettingResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SingleSettingResponse {
    return new SingleSettingResponse().fromJsonString(jsonString, options);
  }

  static equals(a: SingleSettingResponse | PlainMessage<SingleSettingResponse> | undefined, b: SingleSettingResponse | PlainMessage<SingleSettingResponse> | undefined): boolean {
    return proto3.util.equals(SingleSettingResponse, a, b);
  }
}

/**
 * @generated from message vklink.cms.api.v1.settings.responses.ListSettingsResponse
 */
export class ListSettingsResponse extends Message<ListSettingsResponse> {
  /**
   * @generated from field: repeated vklink.cms.api.v1.settings.responses.SettingResponse value = 1;
   */
  value: SettingResponse[] = [];

  /**
   * @generated from field: vklink.common.responses.PagingInfoResponse paging = 2;
   */
  paging?: PagingInfoResponse;

  constructor(data?: PartialMessage<ListSettingsResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "vklink.cms.api.v1.settings.responses.ListSettingsResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "message", T: SettingResponse, repeated: true },
    { no: 2, name: "paging", kind: "message", T: PagingInfoResponse },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListSettingsResponse {
    return new ListSettingsResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListSettingsResponse {
    return new ListSettingsResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListSettingsResponse {
    return new ListSettingsResponse().fromJsonString(jsonString, options);
  }

  static equals(a: ListSettingsResponse | PlainMessage<ListSettingsResponse> | undefined, b: ListSettingsResponse | PlainMessage<ListSettingsResponse> | undefined): boolean {
    return proto3.util.equals(ListSettingsResponse, a, b);
  }
}

