// @generated by protoc-gen-es v1.8.0 with parameter "target=ts,import_extension=none"
// @generated from file vklink/services/blog/v1/categories/commands.proto (package vklink.blog.api.v1.categories.commands, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3, StringValue } from "@bufbuild/protobuf";

/**
 * @generated from message vklink.blog.api.v1.categories.commands.CreateCategoryCommand
 */
export class CreateCategoryCommand extends Message<CreateCategoryCommand> {
  /**
   * data fields: from 1 to 50
   *
   * @generated from field: string name = 2;
   */
  name = "";

  /**
   * @generated from field: string slug = 3;
   */
  slug = "";

  /**
   * @generated from field: google.protobuf.StringValue description = 4;
   */
  description?: string;

  /**
   * relationship fields: from 51 to 60
   *
   * @generated from field: google.protobuf.StringValue parentId = 51;
   */
  parentId?: string;

  constructor(data?: PartialMessage<CreateCategoryCommand>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "vklink.blog.api.v1.categories.commands.CreateCategoryCommand";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 2, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "slug", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "description", kind: "message", T: StringValue },
    { no: 51, name: "parentId", kind: "message", T: StringValue },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CreateCategoryCommand {
    return new CreateCategoryCommand().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CreateCategoryCommand {
    return new CreateCategoryCommand().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CreateCategoryCommand {
    return new CreateCategoryCommand().fromJsonString(jsonString, options);
  }

  static equals(a: CreateCategoryCommand | PlainMessage<CreateCategoryCommand> | undefined, b: CreateCategoryCommand | PlainMessage<CreateCategoryCommand> | undefined): boolean {
    return proto3.util.equals(CreateCategoryCommand, a, b);
  }
}

/**
 * @generated from message vklink.blog.api.v1.categories.commands.UpdateCategoryCommand
 */
export class UpdateCategoryCommand extends Message<UpdateCategoryCommand> {
  /**
   * data fields: from 1 to 50
   *
   * @generated from field: string id = 1;
   */
  id = "";

  /**
   * @generated from field: string name = 2;
   */
  name = "";

  /**
   * @generated from field: string slug = 3;
   */
  slug = "";

  /**
   * @generated from field: google.protobuf.StringValue description = 4;
   */
  description?: string;

  /**
   * relationship fields: from 51 to 60
   *
   * @generated from field: google.protobuf.StringValue parentId = 51;
   */
  parentId?: string;

  constructor(data?: PartialMessage<UpdateCategoryCommand>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "vklink.blog.api.v1.categories.commands.UpdateCategoryCommand";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "slug", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "description", kind: "message", T: StringValue },
    { no: 51, name: "parentId", kind: "message", T: StringValue },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateCategoryCommand {
    return new UpdateCategoryCommand().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateCategoryCommand {
    return new UpdateCategoryCommand().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateCategoryCommand {
    return new UpdateCategoryCommand().fromJsonString(jsonString, options);
  }

  static equals(a: UpdateCategoryCommand | PlainMessage<UpdateCategoryCommand> | undefined, b: UpdateCategoryCommand | PlainMessage<UpdateCategoryCommand> | undefined): boolean {
    return proto3.util.equals(UpdateCategoryCommand, a, b);
  }
}

/**
 * @generated from message vklink.blog.api.v1.categories.commands.DeleteCategoryCommand
 */
export class DeleteCategoryCommand extends Message<DeleteCategoryCommand> {
  /**
   * @generated from field: string id = 1;
   */
  id = "";

  constructor(data?: PartialMessage<DeleteCategoryCommand>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "vklink.blog.api.v1.categories.commands.DeleteCategoryCommand";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DeleteCategoryCommand {
    return new DeleteCategoryCommand().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DeleteCategoryCommand {
    return new DeleteCategoryCommand().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DeleteCategoryCommand {
    return new DeleteCategoryCommand().fromJsonString(jsonString, options);
  }

  static equals(a: DeleteCategoryCommand | PlainMessage<DeleteCategoryCommand> | undefined, b: DeleteCategoryCommand | PlainMessage<DeleteCategoryCommand> | undefined): boolean {
    return proto3.util.equals(DeleteCategoryCommand, a, b);
  }
}

