// @generated by protoc-gen-es v1.8.0 with parameter "target=ts,import_extension=none"
// @generated from file vklink/services/catalog/v1/branches/responses.proto (package vklink.catalog.api.v1.branches.responses, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3, StringValue } from "@bufbuild/protobuf";
import { BranchType } from "./enums_pb";
import { ActorInfoResponse } from "../../../../libs/common/responses/actor_info_response_pb";
import { PagingInfoResponse } from "../../../../libs/common/responses/paging_info_response_pb";

/**
 * @generated from message vklink.catalog.api.v1.branches.responses.BranchResponse
 */
export class BranchResponse extends Message<BranchResponse> {
  /**
   * data fields: from 1 to 50
   *
   * @generated from field: string id = 1;
   */
  id = "";

  /**
   * @generated from field: string code = 2;
   */
  code = "";

  /**
   * @generated from field: string name = 3;
   */
  name = "";

  /**
   * @generated from field: string displayName = 4;
   */
  displayName = "";

  /**
   * @generated from field: google.protobuf.StringValue notes = 5;
   */
  notes?: string;

  /**
   * @generated from field: vklink.catalog.api.v1.branches.responses.BranchType branchType = 6;
   */
  branchType = BranchType.UNSPECIFIED;

  /**
   * @generated from field: bool isEnabled = 7;
   */
  isEnabled = false;

  /**
   * relationship fields: from 51 to 60
   *
   * @generated from field: string bankId = 51;
   */
  bankId = "";

  /**
   * audit fields: from 63 to 70
   *
   * @generated from field: vklink.common.responses.ActorInfoResponse creator = 61;
   */
  creator?: ActorInfoResponse;

  /**
   * @generated from field: vklink.common.responses.ActorInfoResponse updater = 62;
   */
  updater?: ActorInfoResponse;

  constructor(data?: PartialMessage<BranchResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "vklink.catalog.api.v1.branches.responses.BranchResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "code", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "displayName", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "notes", kind: "message", T: StringValue },
    { no: 6, name: "branchType", kind: "enum", T: proto3.getEnumType(BranchType) },
    { no: 7, name: "isEnabled", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 51, name: "bankId", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 61, name: "creator", kind: "message", T: ActorInfoResponse },
    { no: 62, name: "updater", kind: "message", T: ActorInfoResponse },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): BranchResponse {
    return new BranchResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): BranchResponse {
    return new BranchResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): BranchResponse {
    return new BranchResponse().fromJsonString(jsonString, options);
  }

  static equals(a: BranchResponse | PlainMessage<BranchResponse> | undefined, b: BranchResponse | PlainMessage<BranchResponse> | undefined): boolean {
    return proto3.util.equals(BranchResponse, a, b);
  }
}

/**
 * @generated from message vklink.catalog.api.v1.branches.responses.SingleBranchResponse
 */
export class SingleBranchResponse extends Message<SingleBranchResponse> {
  /**
   * @generated from field: vklink.catalog.api.v1.branches.responses.BranchResponse value = 1;
   */
  value?: BranchResponse;

  constructor(data?: PartialMessage<SingleBranchResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "vklink.catalog.api.v1.branches.responses.SingleBranchResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "message", T: BranchResponse },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SingleBranchResponse {
    return new SingleBranchResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SingleBranchResponse {
    return new SingleBranchResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SingleBranchResponse {
    return new SingleBranchResponse().fromJsonString(jsonString, options);
  }

  static equals(a: SingleBranchResponse | PlainMessage<SingleBranchResponse> | undefined, b: SingleBranchResponse | PlainMessage<SingleBranchResponse> | undefined): boolean {
    return proto3.util.equals(SingleBranchResponse, a, b);
  }
}

/**
 * @generated from message vklink.catalog.api.v1.branches.responses.ListBranchesResponse
 */
export class ListBranchesResponse extends Message<ListBranchesResponse> {
  /**
   * @generated from field: repeated vklink.catalog.api.v1.branches.responses.BranchResponse value = 1;
   */
  value: BranchResponse[] = [];

  /**
   * @generated from field: vklink.common.responses.PagingInfoResponse paging = 2;
   */
  paging?: PagingInfoResponse;

  constructor(data?: PartialMessage<ListBranchesResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "vklink.catalog.api.v1.branches.responses.ListBranchesResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "message", T: BranchResponse, repeated: true },
    { no: 2, name: "paging", kind: "message", T: PagingInfoResponse },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListBranchesResponse {
    return new ListBranchesResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListBranchesResponse {
    return new ListBranchesResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListBranchesResponse {
    return new ListBranchesResponse().fromJsonString(jsonString, options);
  }

  static equals(a: ListBranchesResponse | PlainMessage<ListBranchesResponse> | undefined, b: ListBranchesResponse | PlainMessage<ListBranchesResponse> | undefined): boolean {
    return proto3.util.equals(ListBranchesResponse, a, b);
  }
}

