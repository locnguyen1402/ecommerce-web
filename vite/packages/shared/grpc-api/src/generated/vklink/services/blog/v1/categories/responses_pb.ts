// @generated by protoc-gen-es v1.8.0 with parameter "target=ts,import_extension=none"
// @generated from file vklink/services/blog/v1/categories/responses.proto (package vklink.blog.api.v1.categories.responses, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3, StringValue } from "@bufbuild/protobuf";
import { ActorInfoResponse } from "../../../../libs/common/responses/actor_info_response_pb";
import { PagingInfoResponse } from "../../../../libs/common/responses/paging_info_response_pb";

/**
 * @generated from message vklink.blog.api.v1.categories.responses.CategoryInfoResponse
 */
export class CategoryInfoResponse extends Message<CategoryInfoResponse> {
  /**
   * @generated from field: string id = 1;
   */
  id = "";

  /**
   * @generated from field: string name = 2;
   */
  name = "";

  /**
   * @generated from field: string slug = 3;
   */
  slug = "";

  /**
   * @generated from field: google.protobuf.StringValue description = 4;
   */
  description?: string;

  constructor(data?: PartialMessage<CategoryInfoResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "vklink.blog.api.v1.categories.responses.CategoryInfoResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "slug", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "description", kind: "message", T: StringValue },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CategoryInfoResponse {
    return new CategoryInfoResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CategoryInfoResponse {
    return new CategoryInfoResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CategoryInfoResponse {
    return new CategoryInfoResponse().fromJsonString(jsonString, options);
  }

  static equals(a: CategoryInfoResponse | PlainMessage<CategoryInfoResponse> | undefined, b: CategoryInfoResponse | PlainMessage<CategoryInfoResponse> | undefined): boolean {
    return proto3.util.equals(CategoryInfoResponse, a, b);
  }
}

/**
 * @generated from message vklink.blog.api.v1.categories.responses.CategoryResponse
 */
export class CategoryResponse extends Message<CategoryResponse> {
  /**
   * data fields: from 1 to 50
   *
   * @generated from field: string id = 1;
   */
  id = "";

  /**
   * @generated from field: string name = 2;
   */
  name = "";

  /**
   * @generated from field: string slug = 3;
   */
  slug = "";

  /**
   * @generated from field: google.protobuf.StringValue description = 4;
   */
  description?: string;

  /**
   * @generated from field: int32 post_count = 5;
   */
  postCount = 0;

  /**
   * relationship fields: from 51 to 60
   *
   * @generated from field: vklink.blog.api.v1.categories.responses.CategoryInfoResponse parent = 51;
   */
  parent?: CategoryInfoResponse;

  /**
   * audit fields: from 63 to 70
   *
   * @generated from field: vklink.common.responses.ActorInfoResponse creator = 61;
   */
  creator?: ActorInfoResponse;

  /**
   * @generated from field: vklink.common.responses.ActorInfoResponse updater = 62;
   */
  updater?: ActorInfoResponse;

  constructor(data?: PartialMessage<CategoryResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "vklink.blog.api.v1.categories.responses.CategoryResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "slug", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "description", kind: "message", T: StringValue },
    { no: 5, name: "post_count", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 51, name: "parent", kind: "message", T: CategoryInfoResponse },
    { no: 61, name: "creator", kind: "message", T: ActorInfoResponse },
    { no: 62, name: "updater", kind: "message", T: ActorInfoResponse },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CategoryResponse {
    return new CategoryResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CategoryResponse {
    return new CategoryResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CategoryResponse {
    return new CategoryResponse().fromJsonString(jsonString, options);
  }

  static equals(a: CategoryResponse | PlainMessage<CategoryResponse> | undefined, b: CategoryResponse | PlainMessage<CategoryResponse> | undefined): boolean {
    return proto3.util.equals(CategoryResponse, a, b);
  }
}

/**
 * @generated from message vklink.blog.api.v1.categories.responses.SingleCategoryResponse
 */
export class SingleCategoryResponse extends Message<SingleCategoryResponse> {
  /**
   * @generated from field: vklink.blog.api.v1.categories.responses.CategoryResponse value = 1;
   */
  value?: CategoryResponse;

  constructor(data?: PartialMessage<SingleCategoryResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "vklink.blog.api.v1.categories.responses.SingleCategoryResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "message", T: CategoryResponse },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SingleCategoryResponse {
    return new SingleCategoryResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SingleCategoryResponse {
    return new SingleCategoryResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SingleCategoryResponse {
    return new SingleCategoryResponse().fromJsonString(jsonString, options);
  }

  static equals(a: SingleCategoryResponse | PlainMessage<SingleCategoryResponse> | undefined, b: SingleCategoryResponse | PlainMessage<SingleCategoryResponse> | undefined): boolean {
    return proto3.util.equals(SingleCategoryResponse, a, b);
  }
}

/**
 * @generated from message vklink.blog.api.v1.categories.responses.ListCategoriesResponse
 */
export class ListCategoriesResponse extends Message<ListCategoriesResponse> {
  /**
   * @generated from field: repeated vklink.blog.api.v1.categories.responses.CategoryResponse value = 1;
   */
  value: CategoryResponse[] = [];

  /**
   * @generated from field: vklink.common.responses.PagingInfoResponse paging = 2;
   */
  paging?: PagingInfoResponse;

  constructor(data?: PartialMessage<ListCategoriesResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "vklink.blog.api.v1.categories.responses.ListCategoriesResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "message", T: CategoryResponse, repeated: true },
    { no: 2, name: "paging", kind: "message", T: PagingInfoResponse },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListCategoriesResponse {
    return new ListCategoriesResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListCategoriesResponse {
    return new ListCategoriesResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListCategoriesResponse {
    return new ListCategoriesResponse().fromJsonString(jsonString, options);
  }

  static equals(a: ListCategoriesResponse | PlainMessage<ListCategoriesResponse> | undefined, b: ListCategoriesResponse | PlainMessage<ListCategoriesResponse> | undefined): boolean {
    return proto3.util.equals(ListCategoriesResponse, a, b);
  }
}

