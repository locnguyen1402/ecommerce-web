// @generated by protoc-gen-es v1.8.0 with parameter "target=ts,import_extension=none"
// @generated from file vklink/services/cms/v1/posts/commands.proto (package vklink.cms.api.v1.posts.commands, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";
import { PostType } from "./enums_pb";
import { CreateContentCommand } from "../../../../libs/common/commands/create_content_command_pb";
import { CreateDocumentInfoCommand } from "../../../../libs/common/commands/create_document_info_command_pb";
import { LanguageCode } from "../../../../libs/common/enums/language_code_pb";

/**
 * @generated from message vklink.cms.api.v1.posts.commands.CreatePostCommand
 */
export class CreatePostCommand extends Message<CreatePostCommand> {
  /**
   * @generated from field: string title = 2;
   */
  title = "";

  /**
   * @generated from field: string shortContent = 3;
   */
  shortContent = "";

  /**
   * @generated from field: string slug = 4;
   */
  slug = "";

  /**
   * @generated from field: vklink.cms.api.v1.posts.responses.PostType type = 5;
   */
  type = PostType.UNSPECIFIED;

  /**
   * @generated from field: repeated vklink.common.commands.CreateContentCommand contents = 6;
   */
  contents: CreateContentCommand[] = [];

  /**
   * @generated from field: vklink.common.commands.CreateDocumentInfoCommand thumbnail = 7;
   */
  thumbnail?: CreateDocumentInfoCommand;

  /**
   * @generated from field: repeated vklink.cms.api.v1.posts.commands.PostTranslationCommand translations = 8;
   */
  translations: PostTranslationCommand[] = [];

  constructor(data?: PartialMessage<CreatePostCommand>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "vklink.cms.api.v1.posts.commands.CreatePostCommand";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 2, name: "title", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "shortContent", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "slug", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "type", kind: "enum", T: proto3.getEnumType(PostType) },
    { no: 6, name: "contents", kind: "message", T: CreateContentCommand, repeated: true },
    { no: 7, name: "thumbnail", kind: "message", T: CreateDocumentInfoCommand },
    { no: 8, name: "translations", kind: "message", T: PostTranslationCommand, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CreatePostCommand {
    return new CreatePostCommand().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CreatePostCommand {
    return new CreatePostCommand().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CreatePostCommand {
    return new CreatePostCommand().fromJsonString(jsonString, options);
  }

  static equals(a: CreatePostCommand | PlainMessage<CreatePostCommand> | undefined, b: CreatePostCommand | PlainMessage<CreatePostCommand> | undefined): boolean {
    return proto3.util.equals(CreatePostCommand, a, b);
  }
}

/**
 * @generated from message vklink.cms.api.v1.posts.commands.UpdatePostCommand
 */
export class UpdatePostCommand extends Message<UpdatePostCommand> {
  /**
   * @generated from field: string id = 1;
   */
  id = "";

  /**
   * @generated from field: string title = 2;
   */
  title = "";

  /**
   * @generated from field: string shortContent = 3;
   */
  shortContent = "";

  /**
   * @generated from field: string slug = 4;
   */
  slug = "";

  /**
   * @generated from field: vklink.cms.api.v1.posts.responses.PostType type = 5;
   */
  type = PostType.UNSPECIFIED;

  /**
   * @generated from field: repeated vklink.common.commands.CreateContentCommand contents = 6;
   */
  contents: CreateContentCommand[] = [];

  /**
   * @generated from field: vklink.common.commands.CreateDocumentInfoCommand thumbnail = 7;
   */
  thumbnail?: CreateDocumentInfoCommand;

  /**
   * @generated from field: repeated vklink.cms.api.v1.posts.commands.PostTranslationCommand translations = 8;
   */
  translations: PostTranslationCommand[] = [];

  constructor(data?: PartialMessage<UpdatePostCommand>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "vklink.cms.api.v1.posts.commands.UpdatePostCommand";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "title", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "shortContent", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "slug", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "type", kind: "enum", T: proto3.getEnumType(PostType) },
    { no: 6, name: "contents", kind: "message", T: CreateContentCommand, repeated: true },
    { no: 7, name: "thumbnail", kind: "message", T: CreateDocumentInfoCommand },
    { no: 8, name: "translations", kind: "message", T: PostTranslationCommand, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdatePostCommand {
    return new UpdatePostCommand().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdatePostCommand {
    return new UpdatePostCommand().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdatePostCommand {
    return new UpdatePostCommand().fromJsonString(jsonString, options);
  }

  static equals(a: UpdatePostCommand | PlainMessage<UpdatePostCommand> | undefined, b: UpdatePostCommand | PlainMessage<UpdatePostCommand> | undefined): boolean {
    return proto3.util.equals(UpdatePostCommand, a, b);
  }
}

/**
 * @generated from message vklink.cms.api.v1.posts.commands.DeletePostCommand
 */
export class DeletePostCommand extends Message<DeletePostCommand> {
  /**
   * @generated from field: string id = 1;
   */
  id = "";

  constructor(data?: PartialMessage<DeletePostCommand>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "vklink.cms.api.v1.posts.commands.DeletePostCommand";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DeletePostCommand {
    return new DeletePostCommand().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DeletePostCommand {
    return new DeletePostCommand().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DeletePostCommand {
    return new DeletePostCommand().fromJsonString(jsonString, options);
  }

  static equals(a: DeletePostCommand | PlainMessage<DeletePostCommand> | undefined, b: DeletePostCommand | PlainMessage<DeletePostCommand> | undefined): boolean {
    return proto3.util.equals(DeletePostCommand, a, b);
  }
}

/**
 * @generated from message vklink.cms.api.v1.posts.commands.PostTranslationCommand
 */
export class PostTranslationCommand extends Message<PostTranslationCommand> {
  /**
   * data fields: from 1 to 50
   *
   * @generated from field: vklink.grpc.enums.LanguageCode langCode = 2;
   */
  langCode = LanguageCode.UNSPECIFIED;

  /**
   * @generated from field: string title = 3;
   */
  title = "";

  /**
   * @generated from field: string shortContent = 4;
   */
  shortContent = "";

  /**
   * @generated from field: vklink.common.commands.CreateDocumentInfoCommand thumbnail = 5;
   */
  thumbnail?: CreateDocumentInfoCommand;

  constructor(data?: PartialMessage<PostTranslationCommand>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "vklink.cms.api.v1.posts.commands.PostTranslationCommand";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 2, name: "langCode", kind: "enum", T: proto3.getEnumType(LanguageCode) },
    { no: 3, name: "title", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "shortContent", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "thumbnail", kind: "message", T: CreateDocumentInfoCommand },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): PostTranslationCommand {
    return new PostTranslationCommand().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): PostTranslationCommand {
    return new PostTranslationCommand().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): PostTranslationCommand {
    return new PostTranslationCommand().fromJsonString(jsonString, options);
  }

  static equals(a: PostTranslationCommand | PlainMessage<PostTranslationCommand> | undefined, b: PostTranslationCommand | PlainMessage<PostTranslationCommand> | undefined): boolean {
    return proto3.util.equals(PostTranslationCommand, a, b);
  }
}

