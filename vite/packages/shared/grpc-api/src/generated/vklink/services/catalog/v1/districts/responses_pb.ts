// @generated by protoc-gen-es v1.8.0 with parameter "target=ts,import_extension=none"
// @generated from file vklink/services/catalog/v1/districts/responses.proto (package vklink.catalog.api.v1.districts.responses, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";
import { PagingInfoResponse } from "../../../../libs/common/responses/paging_info_response_pb";

/**
 * @generated from message vklink.catalog.api.v1.districts.responses.DistrictResponse
 */
export class DistrictResponse extends Message<DistrictResponse> {
  /**
   * data fields: from 1 to 50
   *
   * @generated from field: string id = 1;
   */
  id = "";

  /**
   * @generated from field: string name = 2;
   */
  name = "";

  /**
   * @generated from field: string code = 3;
   */
  code = "";

  constructor(data?: PartialMessage<DistrictResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "vklink.catalog.api.v1.districts.responses.DistrictResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "code", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DistrictResponse {
    return new DistrictResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DistrictResponse {
    return new DistrictResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DistrictResponse {
    return new DistrictResponse().fromJsonString(jsonString, options);
  }

  static equals(a: DistrictResponse | PlainMessage<DistrictResponse> | undefined, b: DistrictResponse | PlainMessage<DistrictResponse> | undefined): boolean {
    return proto3.util.equals(DistrictResponse, a, b);
  }
}

/**
 * @generated from message vklink.catalog.api.v1.districts.responses.AdminDistrictResponse
 */
export class AdminDistrictResponse extends Message<AdminDistrictResponse> {
  /**
   * data fields: from 1 to 50
   *
   * @generated from field: string id = 1;
   */
  id = "";

  /**
   * @generated from field: string districtName = 2;
   */
  districtName = "";

  /**
   * @generated from field: string districtCode = 3;
   */
  districtCode = "";

  /**
   * @generated from field: string provinceName = 4;
   */
  provinceName = "";

  /**
   * @generated from field: string provinceCode = 5;
   */
  provinceCode = "";

  constructor(data?: PartialMessage<AdminDistrictResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "vklink.catalog.api.v1.districts.responses.AdminDistrictResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "districtName", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "districtCode", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "provinceName", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "provinceCode", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AdminDistrictResponse {
    return new AdminDistrictResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AdminDistrictResponse {
    return new AdminDistrictResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AdminDistrictResponse {
    return new AdminDistrictResponse().fromJsonString(jsonString, options);
  }

  static equals(a: AdminDistrictResponse | PlainMessage<AdminDistrictResponse> | undefined, b: AdminDistrictResponse | PlainMessage<AdminDistrictResponse> | undefined): boolean {
    return proto3.util.equals(AdminDistrictResponse, a, b);
  }
}

/**
 * @generated from message vklink.catalog.api.v1.districts.responses.SingleDistrictResponse
 */
export class SingleDistrictResponse extends Message<SingleDistrictResponse> {
  /**
   * @generated from field: vklink.catalog.api.v1.districts.responses.DistrictResponse value = 1;
   */
  value?: DistrictResponse;

  constructor(data?: PartialMessage<SingleDistrictResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "vklink.catalog.api.v1.districts.responses.SingleDistrictResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "message", T: DistrictResponse },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SingleDistrictResponse {
    return new SingleDistrictResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SingleDistrictResponse {
    return new SingleDistrictResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SingleDistrictResponse {
    return new SingleDistrictResponse().fromJsonString(jsonString, options);
  }

  static equals(a: SingleDistrictResponse | PlainMessage<SingleDistrictResponse> | undefined, b: SingleDistrictResponse | PlainMessage<SingleDistrictResponse> | undefined): boolean {
    return proto3.util.equals(SingleDistrictResponse, a, b);
  }
}

/**
 * @generated from message vklink.catalog.api.v1.districts.responses.ListDistrictsResponse
 */
export class ListDistrictsResponse extends Message<ListDistrictsResponse> {
  /**
   * @generated from field: repeated vklink.catalog.api.v1.districts.responses.DistrictResponse value = 1;
   */
  value: DistrictResponse[] = [];

  /**
   * @generated from field: vklink.common.responses.PagingInfoResponse paging = 2;
   */
  paging?: PagingInfoResponse;

  constructor(data?: PartialMessage<ListDistrictsResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "vklink.catalog.api.v1.districts.responses.ListDistrictsResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "message", T: DistrictResponse, repeated: true },
    { no: 2, name: "paging", kind: "message", T: PagingInfoResponse },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListDistrictsResponse {
    return new ListDistrictsResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListDistrictsResponse {
    return new ListDistrictsResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListDistrictsResponse {
    return new ListDistrictsResponse().fromJsonString(jsonString, options);
  }

  static equals(a: ListDistrictsResponse | PlainMessage<ListDistrictsResponse> | undefined, b: ListDistrictsResponse | PlainMessage<ListDistrictsResponse> | undefined): boolean {
    return proto3.util.equals(ListDistrictsResponse, a, b);
  }
}

/**
 * @generated from message vklink.catalog.api.v1.districts.responses.ListAdminDistrictsResponse
 */
export class ListAdminDistrictsResponse extends Message<ListAdminDistrictsResponse> {
  /**
   * @generated from field: repeated vklink.catalog.api.v1.districts.responses.AdminDistrictResponse value = 1;
   */
  value: AdminDistrictResponse[] = [];

  /**
   * @generated from field: vklink.common.responses.PagingInfoResponse paging = 2;
   */
  paging?: PagingInfoResponse;

  constructor(data?: PartialMessage<ListAdminDistrictsResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "vklink.catalog.api.v1.districts.responses.ListAdminDistrictsResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "message", T: AdminDistrictResponse, repeated: true },
    { no: 2, name: "paging", kind: "message", T: PagingInfoResponse },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListAdminDistrictsResponse {
    return new ListAdminDistrictsResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListAdminDistrictsResponse {
    return new ListAdminDistrictsResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListAdminDistrictsResponse {
    return new ListAdminDistrictsResponse().fromJsonString(jsonString, options);
  }

  static equals(a: ListAdminDistrictsResponse | PlainMessage<ListAdminDistrictsResponse> | undefined, b: ListAdminDistrictsResponse | PlainMessage<ListAdminDistrictsResponse> | undefined): boolean {
    return proto3.util.equals(ListAdminDistrictsResponse, a, b);
  }
}

