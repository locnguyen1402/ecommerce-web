// @generated by protoc-gen-es v1.8.0 with parameter "target=ts,import_extension=none"
// @generated from file vklink/services/catalog/v1/banks/responses.proto (package vklink.catalog.api.v1.banks.responses, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3, StringValue } from "@bufbuild/protobuf";
import { BranchResponse } from "../branches/responses_pb";
import { ActorInfoResponse } from "../../../../libs/common/responses/actor_info_response_pb";
import { PagingInfoResponse } from "../../../../libs/common/responses/paging_info_response_pb";

/**
 * @generated from message vklink.catalog.api.v1.banks.responses.BankResponse
 */
export class BankResponse extends Message<BankResponse> {
  /**
   * data fields: from 1 to 50
   *
   * @generated from field: string id = 1;
   */
  id = "";

  /**
   * @generated from field: string code = 2;
   */
  code = "";

  /**
   * @generated from field: string name = 3;
   */
  name = "";

  /**
   * @generated from field: string abbr = 4;
   */
  abbr = "";

  /**
   * @generated from field: google.protobuf.StringValue notes = 5;
   */
  notes?: string;

  /**
   * @generated from field: bool isEnabled = 6;
   */
  isEnabled = false;

  /**
   * relationship fields: from 51 to 60
   *
   * @generated from field: repeated vklink.catalog.api.v1.branches.responses.BranchResponse branches = 51;
   */
  branches: BranchResponse[] = [];

  /**
   * audit fields: from 63 to 70
   *
   * @generated from field: vklink.common.responses.ActorInfoResponse creator = 61;
   */
  creator?: ActorInfoResponse;

  /**
   * @generated from field: vklink.common.responses.ActorInfoResponse updater = 62;
   */
  updater?: ActorInfoResponse;

  constructor(data?: PartialMessage<BankResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "vklink.catalog.api.v1.banks.responses.BankResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "code", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "abbr", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "notes", kind: "message", T: StringValue },
    { no: 6, name: "isEnabled", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 51, name: "branches", kind: "message", T: BranchResponse, repeated: true },
    { no: 61, name: "creator", kind: "message", T: ActorInfoResponse },
    { no: 62, name: "updater", kind: "message", T: ActorInfoResponse },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): BankResponse {
    return new BankResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): BankResponse {
    return new BankResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): BankResponse {
    return new BankResponse().fromJsonString(jsonString, options);
  }

  static equals(a: BankResponse | PlainMessage<BankResponse> | undefined, b: BankResponse | PlainMessage<BankResponse> | undefined): boolean {
    return proto3.util.equals(BankResponse, a, b);
  }
}

/**
 * @generated from message vklink.catalog.api.v1.banks.responses.SingleBankResponse
 */
export class SingleBankResponse extends Message<SingleBankResponse> {
  /**
   * @generated from field: vklink.catalog.api.v1.banks.responses.BankResponse value = 1;
   */
  value?: BankResponse;

  constructor(data?: PartialMessage<SingleBankResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "vklink.catalog.api.v1.banks.responses.SingleBankResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "message", T: BankResponse },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SingleBankResponse {
    return new SingleBankResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SingleBankResponse {
    return new SingleBankResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SingleBankResponse {
    return new SingleBankResponse().fromJsonString(jsonString, options);
  }

  static equals(a: SingleBankResponse | PlainMessage<SingleBankResponse> | undefined, b: SingleBankResponse | PlainMessage<SingleBankResponse> | undefined): boolean {
    return proto3.util.equals(SingleBankResponse, a, b);
  }
}

/**
 * @generated from message vklink.catalog.api.v1.banks.responses.ListBanksResponse
 */
export class ListBanksResponse extends Message<ListBanksResponse> {
  /**
   * @generated from field: repeated vklink.catalog.api.v1.banks.responses.BankResponse value = 1;
   */
  value: BankResponse[] = [];

  /**
   * @generated from field: vklink.common.responses.PagingInfoResponse paging = 2;
   */
  paging?: PagingInfoResponse;

  constructor(data?: PartialMessage<ListBanksResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "vklink.catalog.api.v1.banks.responses.ListBanksResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "message", T: BankResponse, repeated: true },
    { no: 2, name: "paging", kind: "message", T: PagingInfoResponse },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListBanksResponse {
    return new ListBanksResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListBanksResponse {
    return new ListBanksResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListBanksResponse {
    return new ListBanksResponse().fromJsonString(jsonString, options);
  }

  static equals(a: ListBanksResponse | PlainMessage<ListBanksResponse> | undefined, b: ListBanksResponse | PlainMessage<ListBanksResponse> | undefined): boolean {
    return proto3.util.equals(ListBanksResponse, a, b);
  }
}

