// @generated by protoc-gen-es v1.8.0 with parameter "target=ts,import_extension=none"
// @generated from file vklink/services/customer/v1/contacts/commands.proto (package vklink.customer.api.v1.contacts.commands, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3, StringValue } from "@bufbuild/protobuf";
import { AddressType } from "./enums_pb";
import { CreateAddressCommand } from "../../../../libs/common/commands/create_address_command_pb";

/**
 * @generated from message vklink.customer.api.v1.contacts.commands.CreateContactCommand
 */
export class CreateContactCommand extends Message<CreateContactCommand> {
  /**
   * data fields: from 1 to 50
   *
   * @generated from field: vklink.customer.api.v1.contacts.responses.AddressType type = 2;
   */
  type = AddressType.UNSPECIFIED;

  /**
   * @generated from field: string name = 3;
   */
  name = "";

  /**
   * @generated from field: string contactName = 4;
   */
  contactName = "";

  /**
   * @generated from field: string phoneNumber = 5;
   */
  phoneNumber = "";

  /**
   * @generated from field: google.protobuf.StringValue notes = 6;
   */
  notes?: string;

  /**
   * @generated from field: bool isDefault = 7;
   */
  isDefault = false;

  /**
   * relationship fields: from 51 to 60
   *
   * @generated from field: string customerId = 51;
   */
  customerId = "";

  /**
   * @generated from field: vklink.common.commands.CreateAddressCommand address = 52;
   */
  address?: CreateAddressCommand;

  constructor(data?: PartialMessage<CreateContactCommand>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "vklink.customer.api.v1.contacts.commands.CreateContactCommand";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 2, name: "type", kind: "enum", T: proto3.getEnumType(AddressType) },
    { no: 3, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "contactName", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "phoneNumber", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 6, name: "notes", kind: "message", T: StringValue },
    { no: 7, name: "isDefault", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 51, name: "customerId", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 52, name: "address", kind: "message", T: CreateAddressCommand },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CreateContactCommand {
    return new CreateContactCommand().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CreateContactCommand {
    return new CreateContactCommand().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CreateContactCommand {
    return new CreateContactCommand().fromJsonString(jsonString, options);
  }

  static equals(a: CreateContactCommand | PlainMessage<CreateContactCommand> | undefined, b: CreateContactCommand | PlainMessage<CreateContactCommand> | undefined): boolean {
    return proto3.util.equals(CreateContactCommand, a, b);
  }
}

/**
 * @generated from message vklink.customer.api.v1.contacts.commands.UpdateContactCommand
 */
export class UpdateContactCommand extends Message<UpdateContactCommand> {
  /**
   * data fields: from 1 to 50
   *
   * @generated from field: string id = 1;
   */
  id = "";

  /**
   * @generated from field: vklink.customer.api.v1.contacts.responses.AddressType type = 2;
   */
  type = AddressType.UNSPECIFIED;

  /**
   * @generated from field: string name = 3;
   */
  name = "";

  /**
   * @generated from field: string contactName = 4;
   */
  contactName = "";

  /**
   * @generated from field: string phoneNumber = 5;
   */
  phoneNumber = "";

  /**
   * @generated from field: google.protobuf.StringValue notes = 6;
   */
  notes?: string;

  /**
   * @generated from field: bool isDefault = 7;
   */
  isDefault = false;

  /**
   * relationship fields: from 51 to 60
   *
   * @generated from field: vklink.common.commands.CreateAddressCommand address = 51;
   */
  address?: CreateAddressCommand;

  constructor(data?: PartialMessage<UpdateContactCommand>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "vklink.customer.api.v1.contacts.commands.UpdateContactCommand";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "type", kind: "enum", T: proto3.getEnumType(AddressType) },
    { no: 3, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "contactName", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "phoneNumber", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 6, name: "notes", kind: "message", T: StringValue },
    { no: 7, name: "isDefault", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 51, name: "address", kind: "message", T: CreateAddressCommand },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateContactCommand {
    return new UpdateContactCommand().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateContactCommand {
    return new UpdateContactCommand().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateContactCommand {
    return new UpdateContactCommand().fromJsonString(jsonString, options);
  }

  static equals(a: UpdateContactCommand | PlainMessage<UpdateContactCommand> | undefined, b: UpdateContactCommand | PlainMessage<UpdateContactCommand> | undefined): boolean {
    return proto3.util.equals(UpdateContactCommand, a, b);
  }
}

/**
 * @generated from message vklink.customer.api.v1.contacts.commands.SetContactDefaultCommand
 */
export class SetContactDefaultCommand extends Message<SetContactDefaultCommand> {
  /**
   * @generated from field: string id = 1;
   */
  id = "";

  constructor(data?: PartialMessage<SetContactDefaultCommand>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "vklink.customer.api.v1.contacts.commands.SetContactDefaultCommand";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SetContactDefaultCommand {
    return new SetContactDefaultCommand().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SetContactDefaultCommand {
    return new SetContactDefaultCommand().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SetContactDefaultCommand {
    return new SetContactDefaultCommand().fromJsonString(jsonString, options);
  }

  static equals(a: SetContactDefaultCommand | PlainMessage<SetContactDefaultCommand> | undefined, b: SetContactDefaultCommand | PlainMessage<SetContactDefaultCommand> | undefined): boolean {
    return proto3.util.equals(SetContactDefaultCommand, a, b);
  }
}

/**
 * @generated from message vklink.customer.api.v1.contacts.commands.DeleteContactCommand
 */
export class DeleteContactCommand extends Message<DeleteContactCommand> {
  /**
   * @generated from field: string id = 1;
   */
  id = "";

  constructor(data?: PartialMessage<DeleteContactCommand>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "vklink.customer.api.v1.contacts.commands.DeleteContactCommand";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DeleteContactCommand {
    return new DeleteContactCommand().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DeleteContactCommand {
    return new DeleteContactCommand().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DeleteContactCommand {
    return new DeleteContactCommand().fromJsonString(jsonString, options);
  }

  static equals(a: DeleteContactCommand | PlainMessage<DeleteContactCommand> | undefined, b: DeleteContactCommand | PlainMessage<DeleteContactCommand> | undefined): boolean {
    return proto3.util.equals(DeleteContactCommand, a, b);
  }
}

