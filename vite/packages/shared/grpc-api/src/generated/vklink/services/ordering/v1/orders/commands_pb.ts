// @generated by protoc-gen-es v1.8.0 with parameter "target=ts,import_extension=none"
// @generated from file vklink/services/ordering/v1/orders/commands.proto (package vklink.ordering.api.v1.orders.commands, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3, StringValue, Timestamp } from "@bufbuild/protobuf";
import { PaymentMethod } from "./enums_pb";

/**
 * @generated from message vklink.ordering.api.v1.orders.commands.OrderContactRequest
 */
export class OrderContactRequest extends Message<OrderContactRequest> {
  /**
   * @generated from field: string provinceId = 1;
   */
  provinceId = "";

  /**
   * @generated from field: string provinceName = 2;
   */
  provinceName = "";

  /**
   * @generated from field: string provinceCode = 3;
   */
  provinceCode = "";

  /**
   * @generated from field: string districtId = 4;
   */
  districtId = "";

  /**
   * @generated from field: string districtName = 5;
   */
  districtName = "";

  /**
   * @generated from field: string districtCode = 6;
   */
  districtCode = "";

  /**
   * @generated from field: string wardId = 7;
   */
  wardId = "";

  /**
   * @generated from field: string wardName = 8;
   */
  wardName = "";

  /**
   * @generated from field: string wardCode = 9;
   */
  wardCode = "";

  /**
   * @generated from field: string addressLine1 = 10;
   */
  addressLine1 = "";

  /**
   * @generated from field: google.protobuf.StringValue addressLine2 = 11;
   */
  addressLine2?: string;

  /**
   * @generated from field: google.protobuf.StringValue notes = 12;
   */
  notes?: string;

  /**
   * @generated from field: string name = 13;
   */
  name = "";

  /**
   * @generated from field: string phoneNumber = 14;
   */
  phoneNumber = "";

  constructor(data?: PartialMessage<OrderContactRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "vklink.ordering.api.v1.orders.commands.OrderContactRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "provinceId", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "provinceName", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "provinceCode", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "districtId", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "districtName", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 6, name: "districtCode", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 7, name: "wardId", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 8, name: "wardName", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 9, name: "wardCode", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 10, name: "addressLine1", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 11, name: "addressLine2", kind: "message", T: StringValue },
    { no: 12, name: "notes", kind: "message", T: StringValue },
    { no: 13, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 14, name: "phoneNumber", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): OrderContactRequest {
    return new OrderContactRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): OrderContactRequest {
    return new OrderContactRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): OrderContactRequest {
    return new OrderContactRequest().fromJsonString(jsonString, options);
  }

  static equals(a: OrderContactRequest | PlainMessage<OrderContactRequest> | undefined, b: OrderContactRequest | PlainMessage<OrderContactRequest> | undefined): boolean {
    return proto3.util.equals(OrderContactRequest, a, b);
  }
}

/**
 * @generated from message vklink.ordering.api.v1.orders.commands.ProductItem
 */
export class ProductItem extends Message<ProductItem> {
  /**
   * @generated from field: string productId = 1;
   */
  productId = "";

  /**
   * @generated from field: google.protobuf.StringValue variantId = 2;
   */
  variantId?: string;

  /**
   * @generated from field: int32 quantity = 3;
   */
  quantity = 0;

  constructor(data?: PartialMessage<ProductItem>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "vklink.ordering.api.v1.orders.commands.ProductItem";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "productId", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "variantId", kind: "message", T: StringValue },
    { no: 3, name: "quantity", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ProductItem {
    return new ProductItem().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ProductItem {
    return new ProductItem().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ProductItem {
    return new ProductItem().fromJsonString(jsonString, options);
  }

  static equals(a: ProductItem | PlainMessage<ProductItem> | undefined, b: ProductItem | PlainMessage<ProductItem> | undefined): boolean {
    return proto3.util.equals(ProductItem, a, b);
  }
}

/**
 * @generated from message vklink.ordering.api.v1.orders.commands.CreateOrderByAdminCommand
 */
export class CreateOrderByAdminCommand extends Message<CreateOrderByAdminCommand> {
  /**
   * data fields: from 1 to 50
   *
   * @generated from field: repeated vklink.ordering.api.v1.orders.commands.ProductItem items = 2;
   */
  items: ProductItem[] = [];

  /**
   * @generated from field: vklink.ordering.api.v1.orders.commands.OrderContactRequest pickupContact = 3;
   */
  pickupContact?: OrderContactRequest;

  /**
   * @generated from field: vklink.ordering.api.v1.orders.commands.OrderContactRequest deliveryContact = 4;
   */
  deliveryContact?: OrderContactRequest;

  /**
   * @generated from field: google.protobuf.StringValue customerId = 5;
   */
  customerId?: string;

  /**
   * @generated from field: string customerName = 6;
   */
  customerName = "";

  /**
   * @generated from field: google.protobuf.Timestamp pickupSchedule = 7;
   */
  pickupSchedule?: Timestamp;

  /**
   * @generated from field: google.protobuf.Timestamp deliverySchedule = 8;
   */
  deliverySchedule?: Timestamp;

  /**
   * @generated from field: vklink.ordering.api.v1.orders.responses.PaymentMethod paymentMethod = 9;
   */
  paymentMethod = PaymentMethod.UNSPECIFIED;

  /**
   * @generated from field: string totalPrice = 10;
   */
  totalPrice = "";

  /**
   * @generated from field: google.protobuf.StringValue notes = 11;
   */
  notes?: string;

  /**
   * @generated from field: google.protobuf.StringValue storeId = 12;
   */
  storeId?: string;

  /**
   * @generated from field: google.protobuf.StringValue storeName = 13;
   */
  storeName?: string;

  /**
   * @generated from field: google.protobuf.StringValue totalItemPrice = 14;
   */
  totalItemPrice?: string;

  /**
   * @generated from field: google.protobuf.StringValue totalDiscountPrice = 15;
   */
  totalDiscountPrice?: string;

  /**
   * @generated from field: google.protobuf.StringValue deliveryFee = 16;
   */
  deliveryFee?: string;

  /**
   * @generated from field: google.protobuf.StringValue couponCode = 17;
   */
  couponCode?: string;

  constructor(data?: PartialMessage<CreateOrderByAdminCommand>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "vklink.ordering.api.v1.orders.commands.CreateOrderByAdminCommand";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 2, name: "items", kind: "message", T: ProductItem, repeated: true },
    { no: 3, name: "pickupContact", kind: "message", T: OrderContactRequest },
    { no: 4, name: "deliveryContact", kind: "message", T: OrderContactRequest },
    { no: 5, name: "customerId", kind: "message", T: StringValue },
    { no: 6, name: "customerName", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 7, name: "pickupSchedule", kind: "message", T: Timestamp },
    { no: 8, name: "deliverySchedule", kind: "message", T: Timestamp },
    { no: 9, name: "paymentMethod", kind: "enum", T: proto3.getEnumType(PaymentMethod) },
    { no: 10, name: "totalPrice", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 11, name: "notes", kind: "message", T: StringValue },
    { no: 12, name: "storeId", kind: "message", T: StringValue },
    { no: 13, name: "storeName", kind: "message", T: StringValue },
    { no: 14, name: "totalItemPrice", kind: "message", T: StringValue },
    { no: 15, name: "totalDiscountPrice", kind: "message", T: StringValue },
    { no: 16, name: "deliveryFee", kind: "message", T: StringValue },
    { no: 17, name: "couponCode", kind: "message", T: StringValue },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CreateOrderByAdminCommand {
    return new CreateOrderByAdminCommand().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CreateOrderByAdminCommand {
    return new CreateOrderByAdminCommand().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CreateOrderByAdminCommand {
    return new CreateOrderByAdminCommand().fromJsonString(jsonString, options);
  }

  static equals(a: CreateOrderByAdminCommand | PlainMessage<CreateOrderByAdminCommand> | undefined, b: CreateOrderByAdminCommand | PlainMessage<CreateOrderByAdminCommand> | undefined): boolean {
    return proto3.util.equals(CreateOrderByAdminCommand, a, b);
  }
}

/**
 * @generated from message vklink.ordering.api.v1.orders.commands.UpdateOrderByAdminCommand
 */
export class UpdateOrderByAdminCommand extends Message<UpdateOrderByAdminCommand> {
  /**
   * data fields: from 1 to 50
   *
   * @generated from field: string id = 1;
   */
  id = "";

  /**
   * @generated from field: repeated vklink.ordering.api.v1.orders.commands.ProductItem items = 2;
   */
  items: ProductItem[] = [];

  /**
   * @generated from field: vklink.ordering.api.v1.orders.commands.OrderContactRequest pickupContact = 3;
   */
  pickupContact?: OrderContactRequest;

  /**
   * @generated from field: vklink.ordering.api.v1.orders.commands.OrderContactRequest deliveryContact = 4;
   */
  deliveryContact?: OrderContactRequest;

  /**
   * @generated from field: google.protobuf.Timestamp pickupSchedule = 7;
   */
  pickupSchedule?: Timestamp;

  /**
   * @generated from field: google.protobuf.Timestamp deliverySchedule = 8;
   */
  deliverySchedule?: Timestamp;

  /**
   * @generated from field: vklink.ordering.api.v1.orders.responses.PaymentMethod paymentMethod = 9;
   */
  paymentMethod = PaymentMethod.UNSPECIFIED;

  /**
   * @generated from field: string totalPrice = 10;
   */
  totalPrice = "";

  /**
   * @generated from field: google.protobuf.StringValue notes = 11;
   */
  notes?: string;

  /**
   * @generated from field: string storeId = 12;
   */
  storeId = "";

  /**
   * @generated from field: string storeName = 13;
   */
  storeName = "";

  /**
   * @generated from field: google.protobuf.StringValue totalItemPrice = 14;
   */
  totalItemPrice?: string;

  /**
   * @generated from field: google.protobuf.StringValue totalDiscountPrice = 15;
   */
  totalDiscountPrice?: string;

  /**
   * @generated from field: google.protobuf.StringValue deliveryFee = 16;
   */
  deliveryFee?: string;

  /**
   * @generated from field: google.protobuf.StringValue couponCode = 17;
   */
  couponCode?: string;

  constructor(data?: PartialMessage<UpdateOrderByAdminCommand>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "vklink.ordering.api.v1.orders.commands.UpdateOrderByAdminCommand";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "items", kind: "message", T: ProductItem, repeated: true },
    { no: 3, name: "pickupContact", kind: "message", T: OrderContactRequest },
    { no: 4, name: "deliveryContact", kind: "message", T: OrderContactRequest },
    { no: 7, name: "pickupSchedule", kind: "message", T: Timestamp },
    { no: 8, name: "deliverySchedule", kind: "message", T: Timestamp },
    { no: 9, name: "paymentMethod", kind: "enum", T: proto3.getEnumType(PaymentMethod) },
    { no: 10, name: "totalPrice", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 11, name: "notes", kind: "message", T: StringValue },
    { no: 12, name: "storeId", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 13, name: "storeName", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 14, name: "totalItemPrice", kind: "message", T: StringValue },
    { no: 15, name: "totalDiscountPrice", kind: "message", T: StringValue },
    { no: 16, name: "deliveryFee", kind: "message", T: StringValue },
    { no: 17, name: "couponCode", kind: "message", T: StringValue },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateOrderByAdminCommand {
    return new UpdateOrderByAdminCommand().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateOrderByAdminCommand {
    return new UpdateOrderByAdminCommand().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateOrderByAdminCommand {
    return new UpdateOrderByAdminCommand().fromJsonString(jsonString, options);
  }

  static equals(a: UpdateOrderByAdminCommand | PlainMessage<UpdateOrderByAdminCommand> | undefined, b: UpdateOrderByAdminCommand | PlainMessage<UpdateOrderByAdminCommand> | undefined): boolean {
    return proto3.util.equals(UpdateOrderByAdminCommand, a, b);
  }
}

/**
 * @generated from message vklink.ordering.api.v1.orders.commands.CreateOrderCommand
 */
export class CreateOrderCommand extends Message<CreateOrderCommand> {
  /**
   * data fields: from 1 to 50
   *
   * @generated from field: repeated vklink.ordering.api.v1.orders.commands.ProductItem items = 2;
   */
  items: ProductItem[] = [];

  /**
   * @generated from field: vklink.ordering.api.v1.orders.commands.OrderContactRequest pickupContact = 3;
   */
  pickupContact?: OrderContactRequest;

  /**
   * @generated from field: vklink.ordering.api.v1.orders.commands.OrderContactRequest deliveryContact = 4;
   */
  deliveryContact?: OrderContactRequest;

  /**
   * @generated from field: string customerId = 5;
   */
  customerId = "";

  /**
   * @generated from field: string customerName = 6;
   */
  customerName = "";

  /**
   * @generated from field: google.protobuf.Timestamp pickupSchedule = 7;
   */
  pickupSchedule?: Timestamp;

  /**
   * @generated from field: google.protobuf.Timestamp deliverySchedule = 8;
   */
  deliverySchedule?: Timestamp;

  /**
   * @generated from field: vklink.ordering.api.v1.orders.responses.PaymentMethod paymentMethod = 9;
   */
  paymentMethod = PaymentMethod.UNSPECIFIED;

  /**
   * @generated from field: string totalPrice = 10;
   */
  totalPrice = "";

  /**
   * @generated from field: google.protobuf.StringValue notes = 11;
   */
  notes?: string;

  /**
   * @generated from field: google.protobuf.StringValue totalItemPrice = 12;
   */
  totalItemPrice?: string;

  /**
   * @generated from field: google.protobuf.StringValue totalDiscountPrice = 13;
   */
  totalDiscountPrice?: string;

  /**
   * @generated from field: google.protobuf.StringValue deliveryFee = 14;
   */
  deliveryFee?: string;

  /**
   * @generated from field: google.protobuf.StringValue couponCode = 15;
   */
  couponCode?: string;

  /**
   * @generated from field: google.protobuf.StringValue storeId = 16;
   */
  storeId?: string;

  /**
   * @generated from field: google.protobuf.StringValue storeName = 17;
   */
  storeName?: string;

  /**
   * relationship fields: from 51 to 60
   *
   * @generated from field: string userId = 51;
   */
  userId = "";

  constructor(data?: PartialMessage<CreateOrderCommand>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "vklink.ordering.api.v1.orders.commands.CreateOrderCommand";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 2, name: "items", kind: "message", T: ProductItem, repeated: true },
    { no: 3, name: "pickupContact", kind: "message", T: OrderContactRequest },
    { no: 4, name: "deliveryContact", kind: "message", T: OrderContactRequest },
    { no: 5, name: "customerId", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 6, name: "customerName", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 7, name: "pickupSchedule", kind: "message", T: Timestamp },
    { no: 8, name: "deliverySchedule", kind: "message", T: Timestamp },
    { no: 9, name: "paymentMethod", kind: "enum", T: proto3.getEnumType(PaymentMethod) },
    { no: 10, name: "totalPrice", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 11, name: "notes", kind: "message", T: StringValue },
    { no: 12, name: "totalItemPrice", kind: "message", T: StringValue },
    { no: 13, name: "totalDiscountPrice", kind: "message", T: StringValue },
    { no: 14, name: "deliveryFee", kind: "message", T: StringValue },
    { no: 15, name: "couponCode", kind: "message", T: StringValue },
    { no: 16, name: "storeId", kind: "message", T: StringValue },
    { no: 17, name: "storeName", kind: "message", T: StringValue },
    { no: 51, name: "userId", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CreateOrderCommand {
    return new CreateOrderCommand().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CreateOrderCommand {
    return new CreateOrderCommand().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CreateOrderCommand {
    return new CreateOrderCommand().fromJsonString(jsonString, options);
  }

  static equals(a: CreateOrderCommand | PlainMessage<CreateOrderCommand> | undefined, b: CreateOrderCommand | PlainMessage<CreateOrderCommand> | undefined): boolean {
    return proto3.util.equals(CreateOrderCommand, a, b);
  }
}

/**
 * @generated from message vklink.ordering.api.v1.orders.commands.UpdateOrderStatusConfirmedCommand
 */
export class UpdateOrderStatusConfirmedCommand extends Message<UpdateOrderStatusConfirmedCommand> {
  /**
   * data fields: from 1 to 50
   *
   * @generated from field: string id = 1;
   */
  id = "";

  /**
   * @generated from field: string storeId = 2;
   */
  storeId = "";

  /**
   * @generated from field: string storeName = 3;
   */
  storeName = "";

  constructor(data?: PartialMessage<UpdateOrderStatusConfirmedCommand>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "vklink.ordering.api.v1.orders.commands.UpdateOrderStatusConfirmedCommand";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "storeId", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "storeName", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateOrderStatusConfirmedCommand {
    return new UpdateOrderStatusConfirmedCommand().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateOrderStatusConfirmedCommand {
    return new UpdateOrderStatusConfirmedCommand().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateOrderStatusConfirmedCommand {
    return new UpdateOrderStatusConfirmedCommand().fromJsonString(jsonString, options);
  }

  static equals(a: UpdateOrderStatusConfirmedCommand | PlainMessage<UpdateOrderStatusConfirmedCommand> | undefined, b: UpdateOrderStatusConfirmedCommand | PlainMessage<UpdateOrderStatusConfirmedCommand> | undefined): boolean {
    return proto3.util.equals(UpdateOrderStatusConfirmedCommand, a, b);
  }
}

/**
 * @generated from message vklink.ordering.api.v1.orders.commands.UpdateOrderStatusPickedCommand
 */
export class UpdateOrderStatusPickedCommand extends Message<UpdateOrderStatusPickedCommand> {
  /**
   * data fields: from 1 to 50
   *
   * @generated from field: string id = 1;
   */
  id = "";

  constructor(data?: PartialMessage<UpdateOrderStatusPickedCommand>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "vklink.ordering.api.v1.orders.commands.UpdateOrderStatusPickedCommand";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateOrderStatusPickedCommand {
    return new UpdateOrderStatusPickedCommand().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateOrderStatusPickedCommand {
    return new UpdateOrderStatusPickedCommand().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateOrderStatusPickedCommand {
    return new UpdateOrderStatusPickedCommand().fromJsonString(jsonString, options);
  }

  static equals(a: UpdateOrderStatusPickedCommand | PlainMessage<UpdateOrderStatusPickedCommand> | undefined, b: UpdateOrderStatusPickedCommand | PlainMessage<UpdateOrderStatusPickedCommand> | undefined): boolean {
    return proto3.util.equals(UpdateOrderStatusPickedCommand, a, b);
  }
}

/**
 * @generated from message vklink.ordering.api.v1.orders.commands.UpdateOrderStatusProcessingCommand
 */
export class UpdateOrderStatusProcessingCommand extends Message<UpdateOrderStatusProcessingCommand> {
  /**
   * data fields: from 1 to 50
   *
   * @generated from field: string id = 1;
   */
  id = "";

  constructor(data?: PartialMessage<UpdateOrderStatusProcessingCommand>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "vklink.ordering.api.v1.orders.commands.UpdateOrderStatusProcessingCommand";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateOrderStatusProcessingCommand {
    return new UpdateOrderStatusProcessingCommand().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateOrderStatusProcessingCommand {
    return new UpdateOrderStatusProcessingCommand().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateOrderStatusProcessingCommand {
    return new UpdateOrderStatusProcessingCommand().fromJsonString(jsonString, options);
  }

  static equals(a: UpdateOrderStatusProcessingCommand | PlainMessage<UpdateOrderStatusProcessingCommand> | undefined, b: UpdateOrderStatusProcessingCommand | PlainMessage<UpdateOrderStatusProcessingCommand> | undefined): boolean {
    return proto3.util.equals(UpdateOrderStatusProcessingCommand, a, b);
  }
}

/**
 * @generated from message vklink.ordering.api.v1.orders.commands.UpdateOrderStatusQualityCheckDoneCommand
 */
export class UpdateOrderStatusQualityCheckDoneCommand extends Message<UpdateOrderStatusQualityCheckDoneCommand> {
  /**
   * data fields: from 1 to 50
   *
   * @generated from field: string id = 1;
   */
  id = "";

  constructor(data?: PartialMessage<UpdateOrderStatusQualityCheckDoneCommand>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "vklink.ordering.api.v1.orders.commands.UpdateOrderStatusQualityCheckDoneCommand";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateOrderStatusQualityCheckDoneCommand {
    return new UpdateOrderStatusQualityCheckDoneCommand().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateOrderStatusQualityCheckDoneCommand {
    return new UpdateOrderStatusQualityCheckDoneCommand().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateOrderStatusQualityCheckDoneCommand {
    return new UpdateOrderStatusQualityCheckDoneCommand().fromJsonString(jsonString, options);
  }

  static equals(a: UpdateOrderStatusQualityCheckDoneCommand | PlainMessage<UpdateOrderStatusQualityCheckDoneCommand> | undefined, b: UpdateOrderStatusQualityCheckDoneCommand | PlainMessage<UpdateOrderStatusQualityCheckDoneCommand> | undefined): boolean {
    return proto3.util.equals(UpdateOrderStatusQualityCheckDoneCommand, a, b);
  }
}

/**
 * @generated from message vklink.ordering.api.v1.orders.commands.UpdateOrderStatusDeliveredCommand
 */
export class UpdateOrderStatusDeliveredCommand extends Message<UpdateOrderStatusDeliveredCommand> {
  /**
   * data fields: from 1 to 50
   *
   * @generated from field: string id = 1;
   */
  id = "";

  constructor(data?: PartialMessage<UpdateOrderStatusDeliveredCommand>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "vklink.ordering.api.v1.orders.commands.UpdateOrderStatusDeliveredCommand";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateOrderStatusDeliveredCommand {
    return new UpdateOrderStatusDeliveredCommand().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateOrderStatusDeliveredCommand {
    return new UpdateOrderStatusDeliveredCommand().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateOrderStatusDeliveredCommand {
    return new UpdateOrderStatusDeliveredCommand().fromJsonString(jsonString, options);
  }

  static equals(a: UpdateOrderStatusDeliveredCommand | PlainMessage<UpdateOrderStatusDeliveredCommand> | undefined, b: UpdateOrderStatusDeliveredCommand | PlainMessage<UpdateOrderStatusDeliveredCommand> | undefined): boolean {
    return proto3.util.equals(UpdateOrderStatusDeliveredCommand, a, b);
  }
}

/**
 * @generated from message vklink.ordering.api.v1.orders.commands.UpdateOrderStatusCompletedCommand
 */
export class UpdateOrderStatusCompletedCommand extends Message<UpdateOrderStatusCompletedCommand> {
  /**
   * data fields: from 1 to 50
   *
   * @generated from field: string id = 1;
   */
  id = "";

  constructor(data?: PartialMessage<UpdateOrderStatusCompletedCommand>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "vklink.ordering.api.v1.orders.commands.UpdateOrderStatusCompletedCommand";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateOrderStatusCompletedCommand {
    return new UpdateOrderStatusCompletedCommand().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateOrderStatusCompletedCommand {
    return new UpdateOrderStatusCompletedCommand().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateOrderStatusCompletedCommand {
    return new UpdateOrderStatusCompletedCommand().fromJsonString(jsonString, options);
  }

  static equals(a: UpdateOrderStatusCompletedCommand | PlainMessage<UpdateOrderStatusCompletedCommand> | undefined, b: UpdateOrderStatusCompletedCommand | PlainMessage<UpdateOrderStatusCompletedCommand> | undefined): boolean {
    return proto3.util.equals(UpdateOrderStatusCompletedCommand, a, b);
  }
}

/**
 * @generated from message vklink.ordering.api.v1.orders.commands.UpdateOrderStatusCancelledCommand
 */
export class UpdateOrderStatusCancelledCommand extends Message<UpdateOrderStatusCancelledCommand> {
  /**
   * data fields: from 1 to 50
   *
   * @generated from field: string id = 1;
   */
  id = "";

  constructor(data?: PartialMessage<UpdateOrderStatusCancelledCommand>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "vklink.ordering.api.v1.orders.commands.UpdateOrderStatusCancelledCommand";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateOrderStatusCancelledCommand {
    return new UpdateOrderStatusCancelledCommand().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateOrderStatusCancelledCommand {
    return new UpdateOrderStatusCancelledCommand().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateOrderStatusCancelledCommand {
    return new UpdateOrderStatusCancelledCommand().fromJsonString(jsonString, options);
  }

  static equals(a: UpdateOrderStatusCancelledCommand | PlainMessage<UpdateOrderStatusCancelledCommand> | undefined, b: UpdateOrderStatusCancelledCommand | PlainMessage<UpdateOrderStatusCancelledCommand> | undefined): boolean {
    return proto3.util.equals(UpdateOrderStatusCancelledCommand, a, b);
  }
}

/**
 * @generated from message vklink.ordering.api.v1.orders.commands.UpdatePaymentStatusPaidCommand
 */
export class UpdatePaymentStatusPaidCommand extends Message<UpdatePaymentStatusPaidCommand> {
  /**
   * data fields: from 1 to 50
   *
   * @generated from field: string id = 1;
   */
  id = "";

  constructor(data?: PartialMessage<UpdatePaymentStatusPaidCommand>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "vklink.ordering.api.v1.orders.commands.UpdatePaymentStatusPaidCommand";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdatePaymentStatusPaidCommand {
    return new UpdatePaymentStatusPaidCommand().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdatePaymentStatusPaidCommand {
    return new UpdatePaymentStatusPaidCommand().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdatePaymentStatusPaidCommand {
    return new UpdatePaymentStatusPaidCommand().fromJsonString(jsonString, options);
  }

  static equals(a: UpdatePaymentStatusPaidCommand | PlainMessage<UpdatePaymentStatusPaidCommand> | undefined, b: UpdatePaymentStatusPaidCommand | PlainMessage<UpdatePaymentStatusPaidCommand> | undefined): boolean {
    return proto3.util.equals(UpdatePaymentStatusPaidCommand, a, b);
  }
}

