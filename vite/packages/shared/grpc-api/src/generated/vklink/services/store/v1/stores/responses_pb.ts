// @generated by protoc-gen-es v1.8.0 with parameter "target=ts,import_extension=none"
// @generated from file vklink/services/store/v1/stores/responses.proto (package vklink.store.api.v1.stores.responses, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3, StringValue } from "@bufbuild/protobuf";
import { AddressResponse } from "../../../../libs/common/responses/address_response_pb";
import { ActorInfoResponse } from "../../../../libs/common/responses/actor_info_response_pb";
import { PagingInfoResponse } from "../../../../libs/common/responses/paging_info_response_pb";

/**
 * @generated from message vklink.store.api.v1.stores.responses.StoreResponse
 */
export class StoreResponse extends Message<StoreResponse> {
  /**
   * data fields: from 1 to 50
   *
   * @generated from field: string id = 1;
   */
  id = "";

  /**
   * @generated from field: string name = 2;
   */
  name = "";

  /**
   * @generated from field: google.protobuf.StringValue phoneNumber = 3;
   */
  phoneNumber?: string;

  /**
   * @generated from field: google.protobuf.StringValue description = 4;
   */
  description?: string;

  /**
   * @generated from field: vklink.common.responses.AddressResponse address = 5;
   */
  address?: AddressResponse;

  /**
   * @generated from field: bool enabled = 6;
   */
  enabled = false;

  /**
   * audit fields: from 63 to 70
   *
   * @generated from field: vklink.common.responses.ActorInfoResponse creator = 61;
   */
  creator?: ActorInfoResponse;

  /**
   * @generated from field: vklink.common.responses.ActorInfoResponse updater = 62;
   */
  updater?: ActorInfoResponse;

  constructor(data?: PartialMessage<StoreResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "vklink.store.api.v1.stores.responses.StoreResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "phoneNumber", kind: "message", T: StringValue },
    { no: 4, name: "description", kind: "message", T: StringValue },
    { no: 5, name: "address", kind: "message", T: AddressResponse },
    { no: 6, name: "enabled", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 61, name: "creator", kind: "message", T: ActorInfoResponse },
    { no: 62, name: "updater", kind: "message", T: ActorInfoResponse },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): StoreResponse {
    return new StoreResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): StoreResponse {
    return new StoreResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): StoreResponse {
    return new StoreResponse().fromJsonString(jsonString, options);
  }

  static equals(a: StoreResponse | PlainMessage<StoreResponse> | undefined, b: StoreResponse | PlainMessage<StoreResponse> | undefined): boolean {
    return proto3.util.equals(StoreResponse, a, b);
  }
}

/**
 * @generated from message vklink.store.api.v1.stores.responses.SingleStoreResponse
 */
export class SingleStoreResponse extends Message<SingleStoreResponse> {
  /**
   * @generated from field: vklink.store.api.v1.stores.responses.StoreResponse value = 1;
   */
  value?: StoreResponse;

  constructor(data?: PartialMessage<SingleStoreResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "vklink.store.api.v1.stores.responses.SingleStoreResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "message", T: StoreResponse },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SingleStoreResponse {
    return new SingleStoreResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SingleStoreResponse {
    return new SingleStoreResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SingleStoreResponse {
    return new SingleStoreResponse().fromJsonString(jsonString, options);
  }

  static equals(a: SingleStoreResponse | PlainMessage<SingleStoreResponse> | undefined, b: SingleStoreResponse | PlainMessage<SingleStoreResponse> | undefined): boolean {
    return proto3.util.equals(SingleStoreResponse, a, b);
  }
}

/**
 * @generated from message vklink.store.api.v1.stores.responses.ListStoresResponse
 */
export class ListStoresResponse extends Message<ListStoresResponse> {
  /**
   * @generated from field: repeated vklink.store.api.v1.stores.responses.StoreResponse value = 1;
   */
  value: StoreResponse[] = [];

  /**
   * @generated from field: vklink.common.responses.PagingInfoResponse paging = 2;
   */
  paging?: PagingInfoResponse;

  constructor(data?: PartialMessage<ListStoresResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "vklink.store.api.v1.stores.responses.ListStoresResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "message", T: StoreResponse, repeated: true },
    { no: 2, name: "paging", kind: "message", T: PagingInfoResponse },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListStoresResponse {
    return new ListStoresResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListStoresResponse {
    return new ListStoresResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListStoresResponse {
    return new ListStoresResponse().fromJsonString(jsonString, options);
  }

  static equals(a: ListStoresResponse | PlainMessage<ListStoresResponse> | undefined, b: ListStoresResponse | PlainMessage<ListStoresResponse> | undefined): boolean {
    return proto3.util.equals(ListStoresResponse, a, b);
  }
}

/**
 * @generated from message vklink.store.api.v1.stores.responses.DefaultStoreResponse
 */
export class DefaultStoreResponse extends Message<DefaultStoreResponse> {
  /**
   * data fields: from 1 to 50
   *
   * @generated from field: string id = 1;
   */
  id = "";

  /**
   * relationship fields: from 51 to 60
   * audit fields: from 61 to 70
   *
   * @generated from field: string name = 2;
   */
  name = "";

  constructor(data?: PartialMessage<DefaultStoreResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "vklink.store.api.v1.stores.responses.DefaultStoreResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DefaultStoreResponse {
    return new DefaultStoreResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DefaultStoreResponse {
    return new DefaultStoreResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DefaultStoreResponse {
    return new DefaultStoreResponse().fromJsonString(jsonString, options);
  }

  static equals(a: DefaultStoreResponse | PlainMessage<DefaultStoreResponse> | undefined, b: DefaultStoreResponse | PlainMessage<DefaultStoreResponse> | undefined): boolean {
    return proto3.util.equals(DefaultStoreResponse, a, b);
  }
}

