// @generated by protoc-gen-es v1.8.0 with parameter "target=ts,import_extension=none"
// @generated from file vklink/services/identity/v1/users/responses.proto (package vklink.identity.api.v1.users.responses, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3, StringValue, Timestamp } from "@bufbuild/protobuf";
import { Gender } from "../../../../libs/common/enums/gender_pb";
import { PagingInfoResponse } from "../../../../libs/common/responses/paging_info_response_pb";

/**
 * @generated from message vklink.identity.api.v1.users.responses.UserResponse
 */
export class UserResponse extends Message<UserResponse> {
  /**
   * data fields: from 1 to 50
   *
   * @generated from field: string id = 1;
   */
  id = "";

  /**
   * @generated from field: string username = 2;
   */
  username = "";

  /**
   * @generated from field: google.protobuf.StringValue email = 3;
   */
  email?: string;

  /**
   * @generated from field: google.protobuf.StringValue phoneNumber = 4;
   */
  phoneNumber?: string;

  /**
   * @generated from field: string firstName = 6;
   */
  firstName = "";

  /**
   * @generated from field: google.protobuf.StringValue lastName = 7;
   */
  lastName?: string;

  /**
   * @generated from field: google.protobuf.StringValue fullName = 8;
   */
  fullName?: string;

  /**
   * @generated from field: vklink.grpc.enums.Gender gender = 9;
   */
  gender = Gender.UNSPECIFIED;

  /**
   * @generated from field: google.protobuf.Timestamp birthDate = 10;
   */
  birthDate?: Timestamp;

  /**
   * @generated from field: repeated string roles = 11;
   */
  roles: string[] = [];

  constructor(data?: PartialMessage<UserResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "vklink.identity.api.v1.users.responses.UserResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "username", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "email", kind: "message", T: StringValue },
    { no: 4, name: "phoneNumber", kind: "message", T: StringValue },
    { no: 6, name: "firstName", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 7, name: "lastName", kind: "message", T: StringValue },
    { no: 8, name: "fullName", kind: "message", T: StringValue },
    { no: 9, name: "gender", kind: "enum", T: proto3.getEnumType(Gender) },
    { no: 10, name: "birthDate", kind: "message", T: Timestamp },
    { no: 11, name: "roles", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UserResponse {
    return new UserResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UserResponse {
    return new UserResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UserResponse {
    return new UserResponse().fromJsonString(jsonString, options);
  }

  static equals(a: UserResponse | PlainMessage<UserResponse> | undefined, b: UserResponse | PlainMessage<UserResponse> | undefined): boolean {
    return proto3.util.equals(UserResponse, a, b);
  }
}

/**
 * @generated from message vklink.identity.api.v1.users.responses.ListUsersResponse
 */
export class ListUsersResponse extends Message<ListUsersResponse> {
  /**
   * @generated from field: repeated vklink.identity.api.v1.users.responses.UserResponse value = 1;
   */
  value: UserResponse[] = [];

  /**
   * @generated from field: vklink.common.responses.PagingInfoResponse paging = 2;
   */
  paging?: PagingInfoResponse;

  constructor(data?: PartialMessage<ListUsersResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "vklink.identity.api.v1.users.responses.ListUsersResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "message", T: UserResponse, repeated: true },
    { no: 2, name: "paging", kind: "message", T: PagingInfoResponse },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListUsersResponse {
    return new ListUsersResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListUsersResponse {
    return new ListUsersResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListUsersResponse {
    return new ListUsersResponse().fromJsonString(jsonString, options);
  }

  static equals(a: ListUsersResponse | PlainMessage<ListUsersResponse> | undefined, b: ListUsersResponse | PlainMessage<ListUsersResponse> | undefined): boolean {
    return proto3.util.equals(ListUsersResponse, a, b);
  }
}

