// @generated by protoc-gen-es v1.8.0 with parameter "target=ts,import_extension=none"
// @generated from file vklink/services/notification/v1/messages/responses.proto (package vklink.notification.api.v1.messages.responses, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3, StringValue, Timestamp } from "@bufbuild/protobuf";
import { MessageType } from "../../../../libs/common/enums/message_type_pb";
import { PagingInfoResponse } from "../../../../libs/common/responses/paging_info_response_pb";

/**
 * @generated from message vklink.notification.api.v1.messages.responses.MessageResponse
 */
export class MessageResponse extends Message<MessageResponse> {
  /**
   * data fields: from 1 to 50
   *
   * @generated from field: string id = 1;
   */
  id = "";

  /**
   * @generated from field: string title = 2;
   */
  title = "";

  /**
   * @generated from field: string content = 3;
   */
  content = "";

  /**
   * @generated from field: google.protobuf.StringValue image = 4;
   */
  image?: string;

  /**
   * @generated from field: google.protobuf.StringValue link = 5;
   */
  link?: string;

  /**
   * @generated from field: map<string, string> data = 6;
   */
  data: { [key: string]: string } = {};

  /**
   * @generated from field: google.protobuf.Timestamp notifiedAt = 7;
   */
  notifiedAt?: Timestamp;

  /**
   * @generated from field: google.protobuf.Timestamp viewedAt = 8;
   */
  viewedAt?: Timestamp;

  /**
   * @generated from field: vklink.grpc.enums.MessageType type = 9;
   */
  type = MessageType.UNSPECIFIED;

  /**
   * @generated from field: google.protobuf.StringValue titleCode = 10;
   */
  titleCode?: string;

  /**
   * @generated from field: google.protobuf.StringValue contentCode = 11;
   */
  contentCode?: string;

  /**
   * @generated from field: repeated string titleParameters = 12;
   */
  titleParameters: string[] = [];

  /**
   * @generated from field: repeated string contentParameters = 13;
   */
  contentParameters: string[] = [];

  constructor(data?: PartialMessage<MessageResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "vklink.notification.api.v1.messages.responses.MessageResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "title", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "content", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "image", kind: "message", T: StringValue },
    { no: 5, name: "link", kind: "message", T: StringValue },
    { no: 6, name: "data", kind: "map", K: 9 /* ScalarType.STRING */, V: {kind: "scalar", T: 9 /* ScalarType.STRING */} },
    { no: 7, name: "notifiedAt", kind: "message", T: Timestamp },
    { no: 8, name: "viewedAt", kind: "message", T: Timestamp },
    { no: 9, name: "type", kind: "enum", T: proto3.getEnumType(MessageType) },
    { no: 10, name: "titleCode", kind: "message", T: StringValue },
    { no: 11, name: "contentCode", kind: "message", T: StringValue },
    { no: 12, name: "titleParameters", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
    { no: 13, name: "contentParameters", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MessageResponse {
    return new MessageResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MessageResponse {
    return new MessageResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MessageResponse {
    return new MessageResponse().fromJsonString(jsonString, options);
  }

  static equals(a: MessageResponse | PlainMessage<MessageResponse> | undefined, b: MessageResponse | PlainMessage<MessageResponse> | undefined): boolean {
    return proto3.util.equals(MessageResponse, a, b);
  }
}

/**
 * @generated from message vklink.notification.api.v1.messages.responses.SingleMessageResponse
 */
export class SingleMessageResponse extends Message<SingleMessageResponse> {
  /**
   * @generated from field: vklink.notification.api.v1.messages.responses.MessageResponse value = 1;
   */
  value?: MessageResponse;

  constructor(data?: PartialMessage<SingleMessageResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "vklink.notification.api.v1.messages.responses.SingleMessageResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "message", T: MessageResponse },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SingleMessageResponse {
    return new SingleMessageResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SingleMessageResponse {
    return new SingleMessageResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SingleMessageResponse {
    return new SingleMessageResponse().fromJsonString(jsonString, options);
  }

  static equals(a: SingleMessageResponse | PlainMessage<SingleMessageResponse> | undefined, b: SingleMessageResponse | PlainMessage<SingleMessageResponse> | undefined): boolean {
    return proto3.util.equals(SingleMessageResponse, a, b);
  }
}

/**
 * @generated from message vklink.notification.api.v1.messages.responses.ListMessagesResponse
 */
export class ListMessagesResponse extends Message<ListMessagesResponse> {
  /**
   * @generated from field: repeated vklink.notification.api.v1.messages.responses.MessageResponse value = 1;
   */
  value: MessageResponse[] = [];

  /**
   * @generated from field: vklink.common.responses.PagingInfoResponse paging = 2;
   */
  paging?: PagingInfoResponse;

  constructor(data?: PartialMessage<ListMessagesResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "vklink.notification.api.v1.messages.responses.ListMessagesResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "message", T: MessageResponse, repeated: true },
    { no: 2, name: "paging", kind: "message", T: PagingInfoResponse },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListMessagesResponse {
    return new ListMessagesResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListMessagesResponse {
    return new ListMessagesResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListMessagesResponse {
    return new ListMessagesResponse().fromJsonString(jsonString, options);
  }

  static equals(a: ListMessagesResponse | PlainMessage<ListMessagesResponse> | undefined, b: ListMessagesResponse | PlainMessage<ListMessagesResponse> | undefined): boolean {
    return proto3.util.equals(ListMessagesResponse, a, b);
  }
}

/**
 * @generated from message vklink.notification.api.v1.messages.responses.CountUnreadMessageResponse
 */
export class CountUnreadMessageResponse extends Message<CountUnreadMessageResponse> {
  /**
   * @generated from field: int32 count = 1;
   */
  count = 0;

  constructor(data?: PartialMessage<CountUnreadMessageResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "vklink.notification.api.v1.messages.responses.CountUnreadMessageResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "count", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CountUnreadMessageResponse {
    return new CountUnreadMessageResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CountUnreadMessageResponse {
    return new CountUnreadMessageResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CountUnreadMessageResponse {
    return new CountUnreadMessageResponse().fromJsonString(jsonString, options);
  }

  static equals(a: CountUnreadMessageResponse | PlainMessage<CountUnreadMessageResponse> | undefined, b: CountUnreadMessageResponse | PlainMessage<CountUnreadMessageResponse> | undefined): boolean {
    return proto3.util.equals(CountUnreadMessageResponse, a, b);
  }
}

