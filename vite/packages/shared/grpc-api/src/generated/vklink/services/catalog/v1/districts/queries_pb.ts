// @generated by protoc-gen-es v1.8.0 with parameter "target=ts,import_extension=none"
// @generated from file vklink/services/catalog/v1/districts/queries.proto (package vklink.catalog.api.v1.districts.queries, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";
import { FilteringParams } from "../../../../libs/data/params/filtering_params_pb";
import { SortingParams } from "../../../../libs/data/params/sorting_params_pb";
import { PagingParams } from "../../../../libs/data/params/paging_params_pb";

/**
 * @generated from message vklink.catalog.api.v1.districts.queries.GetDistrictsQuery
 */
export class GetDistrictsQuery extends Message<GetDistrictsQuery> {
  /**
   * @generated from field: vklink.data.params.FilteringParams filter = 1;
   */
  filter?: FilteringParams;

  /**
   * @generated from field: repeated vklink.data.params.SortingParams sortBy = 2;
   */
  sortBy: SortingParams[] = [];

  /**
   * @generated from field: vklink.data.params.PagingParams paging = 3;
   */
  paging?: PagingParams;

  constructor(data?: PartialMessage<GetDistrictsQuery>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "vklink.catalog.api.v1.districts.queries.GetDistrictsQuery";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "filter", kind: "message", T: FilteringParams },
    { no: 2, name: "sortBy", kind: "message", T: SortingParams, repeated: true },
    { no: 3, name: "paging", kind: "message", T: PagingParams },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetDistrictsQuery {
    return new GetDistrictsQuery().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetDistrictsQuery {
    return new GetDistrictsQuery().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetDistrictsQuery {
    return new GetDistrictsQuery().fromJsonString(jsonString, options);
  }

  static equals(a: GetDistrictsQuery | PlainMessage<GetDistrictsQuery> | undefined, b: GetDistrictsQuery | PlainMessage<GetDistrictsQuery> | undefined): boolean {
    return proto3.util.equals(GetDistrictsQuery, a, b);
  }
}

/**
 * @generated from message vklink.catalog.api.v1.districts.queries.GetAdminDistrictsQuery
 */
export class GetAdminDistrictsQuery extends Message<GetAdminDistrictsQuery> {
  /**
   * @generated from field: vklink.data.params.FilteringParams filter = 1;
   */
  filter?: FilteringParams;

  /**
   * @generated from field: repeated vklink.data.params.SortingParams sortBy = 2;
   */
  sortBy: SortingParams[] = [];

  /**
   * @generated from field: vklink.data.params.PagingParams paging = 3;
   */
  paging?: PagingParams;

  constructor(data?: PartialMessage<GetAdminDistrictsQuery>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "vklink.catalog.api.v1.districts.queries.GetAdminDistrictsQuery";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "filter", kind: "message", T: FilteringParams },
    { no: 2, name: "sortBy", kind: "message", T: SortingParams, repeated: true },
    { no: 3, name: "paging", kind: "message", T: PagingParams },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetAdminDistrictsQuery {
    return new GetAdminDistrictsQuery().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetAdminDistrictsQuery {
    return new GetAdminDistrictsQuery().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetAdminDistrictsQuery {
    return new GetAdminDistrictsQuery().fromJsonString(jsonString, options);
  }

  static equals(a: GetAdminDistrictsQuery | PlainMessage<GetAdminDistrictsQuery> | undefined, b: GetAdminDistrictsQuery | PlainMessage<GetAdminDistrictsQuery> | undefined): boolean {
    return proto3.util.equals(GetAdminDistrictsQuery, a, b);
  }
}

