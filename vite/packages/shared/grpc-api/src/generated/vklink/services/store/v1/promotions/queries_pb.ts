// @generated by protoc-gen-es v1.8.0 with parameter "target=ts,import_extension=none"
// @generated from file vklink/services/store/v1/promotions/queries.proto (package vklink.store.api.v1.promotions.queries, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3, StringValue, Timestamp } from "@bufbuild/protobuf";
import { FilteringParams } from "../../../../libs/data/params/filtering_params_pb";
import { SortingParams } from "../../../../libs/data/params/sorting_params_pb";
import { PagingParams } from "../../../../libs/data/params/paging_params_pb";

/**
 * @generated from message vklink.store.api.v1.promotions.queries.GetPromotionByIdQuery
 */
export class GetPromotionByIdQuery extends Message<GetPromotionByIdQuery> {
  /**
   * @generated from field: string id = 1;
   */
  id = "";

  constructor(data?: PartialMessage<GetPromotionByIdQuery>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "vklink.store.api.v1.promotions.queries.GetPromotionByIdQuery";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetPromotionByIdQuery {
    return new GetPromotionByIdQuery().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetPromotionByIdQuery {
    return new GetPromotionByIdQuery().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetPromotionByIdQuery {
    return new GetPromotionByIdQuery().fromJsonString(jsonString, options);
  }

  static equals(a: GetPromotionByIdQuery | PlainMessage<GetPromotionByIdQuery> | undefined, b: GetPromotionByIdQuery | PlainMessage<GetPromotionByIdQuery> | undefined): boolean {
    return proto3.util.equals(GetPromotionByIdQuery, a, b);
  }
}

/**
 * @generated from message vklink.store.api.v1.promotions.queries.GetPromotionsQuery
 */
export class GetPromotionsQuery extends Message<GetPromotionsQuery> {
  /**
   * @generated from field: vklink.data.params.FilteringParams filter = 1;
   */
  filter?: FilteringParams;

  /**
   * @generated from field: repeated vklink.data.params.SortingParams sortBy = 2;
   */
  sortBy: SortingParams[] = [];

  /**
   * @generated from field: vklink.data.params.PagingParams paging = 3;
   */
  paging?: PagingParams;

  /**
   * @generated from field: repeated string productIds = 4;
   */
  productIds: string[] = [];

  constructor(data?: PartialMessage<GetPromotionsQuery>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "vklink.store.api.v1.promotions.queries.GetPromotionsQuery";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "filter", kind: "message", T: FilteringParams },
    { no: 2, name: "sortBy", kind: "message", T: SortingParams, repeated: true },
    { no: 3, name: "paging", kind: "message", T: PagingParams },
    { no: 4, name: "productIds", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetPromotionsQuery {
    return new GetPromotionsQuery().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetPromotionsQuery {
    return new GetPromotionsQuery().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetPromotionsQuery {
    return new GetPromotionsQuery().fromJsonString(jsonString, options);
  }

  static equals(a: GetPromotionsQuery | PlainMessage<GetPromotionsQuery> | undefined, b: GetPromotionsQuery | PlainMessage<GetPromotionsQuery> | undefined): boolean {
    return proto3.util.equals(GetPromotionsQuery, a, b);
  }
}

/**
 * @generated from message vklink.store.api.v1.promotions.queries.CheckActivePromotionByOrderProductQuery
 */
export class CheckActivePromotionByOrderProductQuery extends Message<CheckActivePromotionByOrderProductQuery> {
  /**
   * @generated from field: repeated string productIds = 1;
   */
  productIds: string[] = [];

  /**
   * @generated from field: google.protobuf.StringValue promotionId = 2;
   */
  promotionId?: string;

  /**
   * @generated from field: google.protobuf.Timestamp startDate = 3;
   */
  startDate?: Timestamp;

  /**
   * @generated from field: google.protobuf.Timestamp endDate = 4;
   */
  endDate?: Timestamp;

  constructor(data?: PartialMessage<CheckActivePromotionByOrderProductQuery>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "vklink.store.api.v1.promotions.queries.CheckActivePromotionByOrderProductQuery";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "productIds", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
    { no: 2, name: "promotionId", kind: "message", T: StringValue },
    { no: 3, name: "startDate", kind: "message", T: Timestamp },
    { no: 4, name: "endDate", kind: "message", T: Timestamp },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CheckActivePromotionByOrderProductQuery {
    return new CheckActivePromotionByOrderProductQuery().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CheckActivePromotionByOrderProductQuery {
    return new CheckActivePromotionByOrderProductQuery().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CheckActivePromotionByOrderProductQuery {
    return new CheckActivePromotionByOrderProductQuery().fromJsonString(jsonString, options);
  }

  static equals(a: CheckActivePromotionByOrderProductQuery | PlainMessage<CheckActivePromotionByOrderProductQuery> | undefined, b: CheckActivePromotionByOrderProductQuery | PlainMessage<CheckActivePromotionByOrderProductQuery> | undefined): boolean {
    return proto3.util.equals(CheckActivePromotionByOrderProductQuery, a, b);
  }
}

/**
 * @generated from message vklink.store.api.v1.promotions.queries.GetAllPromotionProductQuery
 */
export class GetAllPromotionProductQuery extends Message<GetAllPromotionProductQuery> {
  constructor(data?: PartialMessage<GetAllPromotionProductQuery>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "vklink.store.api.v1.promotions.queries.GetAllPromotionProductQuery";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetAllPromotionProductQuery {
    return new GetAllPromotionProductQuery().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetAllPromotionProductQuery {
    return new GetAllPromotionProductQuery().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetAllPromotionProductQuery {
    return new GetAllPromotionProductQuery().fromJsonString(jsonString, options);
  }

  static equals(a: GetAllPromotionProductQuery | PlainMessage<GetAllPromotionProductQuery> | undefined, b: GetAllPromotionProductQuery | PlainMessage<GetAllPromotionProductQuery> | undefined): boolean {
    return proto3.util.equals(GetAllPromotionProductQuery, a, b);
  }
}

/**
 * @generated from message vklink.store.api.v1.promotions.queries.GetPromotionByProductIdsQuery
 */
export class GetPromotionByProductIdsQuery extends Message<GetPromotionByProductIdsQuery> {
  /**
   * @generated from field: repeated string ids = 1;
   */
  ids: string[] = [];

  constructor(data?: PartialMessage<GetPromotionByProductIdsQuery>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "vklink.store.api.v1.promotions.queries.GetPromotionByProductIdsQuery";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "ids", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetPromotionByProductIdsQuery {
    return new GetPromotionByProductIdsQuery().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetPromotionByProductIdsQuery {
    return new GetPromotionByProductIdsQuery().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetPromotionByProductIdsQuery {
    return new GetPromotionByProductIdsQuery().fromJsonString(jsonString, options);
  }

  static equals(a: GetPromotionByProductIdsQuery | PlainMessage<GetPromotionByProductIdsQuery> | undefined, b: GetPromotionByProductIdsQuery | PlainMessage<GetPromotionByProductIdsQuery> | undefined): boolean {
    return proto3.util.equals(GetPromotionByProductIdsQuery, a, b);
  }
}

/**
 * @generated from message vklink.store.api.v1.promotions.queries.GetPromotionIdsByOrderIdQuery
 */
export class GetPromotionIdsByOrderIdQuery extends Message<GetPromotionIdsByOrderIdQuery> {
  /**
   * @generated from field: google.protobuf.StringValue id = 1;
   */
  id?: string;

  constructor(data?: PartialMessage<GetPromotionIdsByOrderIdQuery>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "vklink.store.api.v1.promotions.queries.GetPromotionIdsByOrderIdQuery";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: StringValue },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetPromotionIdsByOrderIdQuery {
    return new GetPromotionIdsByOrderIdQuery().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetPromotionIdsByOrderIdQuery {
    return new GetPromotionIdsByOrderIdQuery().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetPromotionIdsByOrderIdQuery {
    return new GetPromotionIdsByOrderIdQuery().fromJsonString(jsonString, options);
  }

  static equals(a: GetPromotionIdsByOrderIdQuery | PlainMessage<GetPromotionIdsByOrderIdQuery> | undefined, b: GetPromotionIdsByOrderIdQuery | PlainMessage<GetPromotionIdsByOrderIdQuery> | undefined): boolean {
    return proto3.util.equals(GetPromotionIdsByOrderIdQuery, a, b);
  }
}

/**
 * @generated from message vklink.store.api.v1.promotions.queries.ProductOrderParams
 */
export class ProductOrderParams extends Message<ProductOrderParams> {
  /**
   * @generated from field: string id = 1;
   */
  id = "";

  /**
   * @generated from field: int32 quantity = 2;
   */
  quantity = 0;

  constructor(data?: PartialMessage<ProductOrderParams>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "vklink.store.api.v1.promotions.queries.ProductOrderParams";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "quantity", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ProductOrderParams {
    return new ProductOrderParams().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ProductOrderParams {
    return new ProductOrderParams().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ProductOrderParams {
    return new ProductOrderParams().fromJsonString(jsonString, options);
  }

  static equals(a: ProductOrderParams | PlainMessage<ProductOrderParams> | undefined, b: ProductOrderParams | PlainMessage<ProductOrderParams> | undefined): boolean {
    return proto3.util.equals(ProductOrderParams, a, b);
  }
}

/**
 * @generated from message vklink.store.api.v1.promotions.queries.GetAllPromotionOrderQuery
 */
export class GetAllPromotionOrderQuery extends Message<GetAllPromotionOrderQuery> {
  /**
   * @generated from field: repeated vklink.store.api.v1.promotions.queries.ProductOrderParams products = 1;
   */
  products: ProductOrderParams[] = [];

  constructor(data?: PartialMessage<GetAllPromotionOrderQuery>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "vklink.store.api.v1.promotions.queries.GetAllPromotionOrderQuery";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "products", kind: "message", T: ProductOrderParams, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetAllPromotionOrderQuery {
    return new GetAllPromotionOrderQuery().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetAllPromotionOrderQuery {
    return new GetAllPromotionOrderQuery().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetAllPromotionOrderQuery {
    return new GetAllPromotionOrderQuery().fromJsonString(jsonString, options);
  }

  static equals(a: GetAllPromotionOrderQuery | PlainMessage<GetAllPromotionOrderQuery> | undefined, b: GetAllPromotionOrderQuery | PlainMessage<GetAllPromotionOrderQuery> | undefined): boolean {
    return proto3.util.equals(GetAllPromotionOrderQuery, a, b);
  }
}

