// @generated by protoc-gen-es v1.8.0 with parameter "target=ts,import_extension=none"
// @generated from file vklink/services/cms/v1/positions/commands.proto (package vklink.cms.api.v1.positions.commands, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";
import { DisplayPlatform, PositionType } from "./enums_pb";
import { CreateDocumentInfoCommand } from "../../../../libs/common/commands/create_document_info_command_pb";
import { LanguageCode } from "../../../../libs/common/enums/language_code_pb";

/**
 * @generated from message vklink.cms.api.v1.positions.commands.CreatePositionCommand
 */
export class CreatePositionCommand extends Message<CreatePositionCommand> {
  /**
   * data fields: from 1 to 50
   *
   * @generated from field: string name = 2;
   */
  name = "";

  /**
   * @generated from field: vklink.cms.api.v1.positions.responses.DisplayPlatform platform = 3;
   */
  platform = DisplayPlatform.UNSPECIFIED;

  /**
   * @generated from field: string description = 4;
   */
  description = "";

  /**
   * @generated from field: vklink.cms.api.v1.positions.responses.PositionType type = 5;
   */
  type = PositionType.UNSPECIFIED;

  /**
   * @generated from field: vklink.common.commands.CreateDocumentInfoCommand document = 6;
   */
  document?: CreateDocumentInfoCommand;

  /**
   * @generated from field: int32 order = 7;
   */
  order = 0;

  /**
   * @generated from field: repeated vklink.cms.api.v1.positions.commands.PositionTranslationCommand translations = 8;
   */
  translations: PositionTranslationCommand[] = [];

  constructor(data?: PartialMessage<CreatePositionCommand>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "vklink.cms.api.v1.positions.commands.CreatePositionCommand";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 2, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "platform", kind: "enum", T: proto3.getEnumType(DisplayPlatform) },
    { no: 4, name: "description", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "type", kind: "enum", T: proto3.getEnumType(PositionType) },
    { no: 6, name: "document", kind: "message", T: CreateDocumentInfoCommand },
    { no: 7, name: "order", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 8, name: "translations", kind: "message", T: PositionTranslationCommand, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CreatePositionCommand {
    return new CreatePositionCommand().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CreatePositionCommand {
    return new CreatePositionCommand().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CreatePositionCommand {
    return new CreatePositionCommand().fromJsonString(jsonString, options);
  }

  static equals(a: CreatePositionCommand | PlainMessage<CreatePositionCommand> | undefined, b: CreatePositionCommand | PlainMessage<CreatePositionCommand> | undefined): boolean {
    return proto3.util.equals(CreatePositionCommand, a, b);
  }
}

/**
 * @generated from message vklink.cms.api.v1.positions.commands.UpdatePositionCommand
 */
export class UpdatePositionCommand extends Message<UpdatePositionCommand> {
  /**
   * data fields: from 1 to 50
   *
   * @generated from field: string id = 1;
   */
  id = "";

  /**
   * @generated from field: string name = 2;
   */
  name = "";

  /**
   * @generated from field: vklink.cms.api.v1.positions.responses.DisplayPlatform platform = 3;
   */
  platform = DisplayPlatform.UNSPECIFIED;

  /**
   * @generated from field: string description = 4;
   */
  description = "";

  /**
   * @generated from field: vklink.cms.api.v1.positions.responses.PositionType type = 5;
   */
  type = PositionType.UNSPECIFIED;

  /**
   * @generated from field: vklink.common.commands.CreateDocumentInfoCommand document = 6;
   */
  document?: CreateDocumentInfoCommand;

  /**
   * @generated from field: int32 order = 7;
   */
  order = 0;

  /**
   * @generated from field: repeated vklink.cms.api.v1.positions.commands.PositionTranslationCommand translations = 8;
   */
  translations: PositionTranslationCommand[] = [];

  constructor(data?: PartialMessage<UpdatePositionCommand>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "vklink.cms.api.v1.positions.commands.UpdatePositionCommand";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "platform", kind: "enum", T: proto3.getEnumType(DisplayPlatform) },
    { no: 4, name: "description", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "type", kind: "enum", T: proto3.getEnumType(PositionType) },
    { no: 6, name: "document", kind: "message", T: CreateDocumentInfoCommand },
    { no: 7, name: "order", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 8, name: "translations", kind: "message", T: PositionTranslationCommand, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdatePositionCommand {
    return new UpdatePositionCommand().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdatePositionCommand {
    return new UpdatePositionCommand().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdatePositionCommand {
    return new UpdatePositionCommand().fromJsonString(jsonString, options);
  }

  static equals(a: UpdatePositionCommand | PlainMessage<UpdatePositionCommand> | undefined, b: UpdatePositionCommand | PlainMessage<UpdatePositionCommand> | undefined): boolean {
    return proto3.util.equals(UpdatePositionCommand, a, b);
  }
}

/**
 * @generated from message vklink.cms.api.v1.positions.commands.DisablePositionCommand
 */
export class DisablePositionCommand extends Message<DisablePositionCommand> {
  /**
   * @generated from field: string id = 1;
   */
  id = "";

  constructor(data?: PartialMessage<DisablePositionCommand>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "vklink.cms.api.v1.positions.commands.DisablePositionCommand";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DisablePositionCommand {
    return new DisablePositionCommand().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DisablePositionCommand {
    return new DisablePositionCommand().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DisablePositionCommand {
    return new DisablePositionCommand().fromJsonString(jsonString, options);
  }

  static equals(a: DisablePositionCommand | PlainMessage<DisablePositionCommand> | undefined, b: DisablePositionCommand | PlainMessage<DisablePositionCommand> | undefined): boolean {
    return proto3.util.equals(DisablePositionCommand, a, b);
  }
}

/**
 * @generated from message vklink.cms.api.v1.positions.commands.EnablePositionCommand
 */
export class EnablePositionCommand extends Message<EnablePositionCommand> {
  /**
   * @generated from field: string id = 1;
   */
  id = "";

  constructor(data?: PartialMessage<EnablePositionCommand>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "vklink.cms.api.v1.positions.commands.EnablePositionCommand";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): EnablePositionCommand {
    return new EnablePositionCommand().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): EnablePositionCommand {
    return new EnablePositionCommand().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): EnablePositionCommand {
    return new EnablePositionCommand().fromJsonString(jsonString, options);
  }

  static equals(a: EnablePositionCommand | PlainMessage<EnablePositionCommand> | undefined, b: EnablePositionCommand | PlainMessage<EnablePositionCommand> | undefined): boolean {
    return proto3.util.equals(EnablePositionCommand, a, b);
  }
}

/**
 * @generated from message vklink.cms.api.v1.positions.commands.PositionTranslationCommand
 */
export class PositionTranslationCommand extends Message<PositionTranslationCommand> {
  /**
   * data fields: from 1 to 50
   *
   * @generated from field: vklink.grpc.enums.LanguageCode langCode = 2;
   */
  langCode = LanguageCode.UNSPECIFIED;

  /**
   * @generated from field: string name = 3;
   */
  name = "";

  /**
   * @generated from field: string description = 4;
   */
  description = "";

  /**
   * @generated from field: vklink.common.commands.CreateDocumentInfoCommand document = 5;
   */
  document?: CreateDocumentInfoCommand;

  constructor(data?: PartialMessage<PositionTranslationCommand>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "vklink.cms.api.v1.positions.commands.PositionTranslationCommand";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 2, name: "langCode", kind: "enum", T: proto3.getEnumType(LanguageCode) },
    { no: 3, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "description", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "document", kind: "message", T: CreateDocumentInfoCommand },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): PositionTranslationCommand {
    return new PositionTranslationCommand().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): PositionTranslationCommand {
    return new PositionTranslationCommand().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): PositionTranslationCommand {
    return new PositionTranslationCommand().fromJsonString(jsonString, options);
  }

  static equals(a: PositionTranslationCommand | PlainMessage<PositionTranslationCommand> | undefined, b: PositionTranslationCommand | PlainMessage<PositionTranslationCommand> | undefined): boolean {
    return proto3.util.equals(PositionTranslationCommand, a, b);
  }
}

