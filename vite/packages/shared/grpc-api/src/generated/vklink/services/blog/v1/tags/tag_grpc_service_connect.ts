// @generated by protoc-gen-connect-es v1.4.0 with parameter "target=ts,import_extension=none"
// @generated from file vklink/services/blog/v1/tags/tag_grpc_service.proto (package vklink.blog.api.v1.tags, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { FindTagByIdQuery, FindTagBySlugQuery, GetTagsQuery } from "./queries_pb";
import { ListTagsResponse, SingleTagResponse } from "./responses_pb";
import { Empty, MethodKind } from "@bufbuild/protobuf";
import { CreateTagCommand, DeleteTagCommand, UpdateTagCommand } from "./commands_pb";

/**
 * @generated from service vklink.blog.api.v1.tags.TagGrpcService
 */
export const TagGrpcService = {
  typeName: "vklink.blog.api.v1.tags.TagGrpcService",
  methods: {
    /**
     * @generated from rpc vklink.blog.api.v1.tags.TagGrpcService.GetTags
     */
    getTags: {
      name: "GetTags",
      I: GetTagsQuery,
      O: ListTagsResponse,
      kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc vklink.blog.api.v1.tags.TagGrpcService.FindTagById
     */
    findTagById: {
      name: "FindTagById",
      I: FindTagByIdQuery,
      O: SingleTagResponse,
      kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc vklink.blog.api.v1.tags.TagGrpcService.FindTagBySlug
     */
    findTagBySlug: {
      name: "FindTagBySlug",
      I: FindTagBySlugQuery,
      O: SingleTagResponse,
      kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc vklink.blog.api.v1.tags.TagGrpcService.CreateTag
     */
    createTag: {
      name: "CreateTag",
      I: CreateTagCommand,
      O: SingleTagResponse,
      kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc vklink.blog.api.v1.tags.TagGrpcService.UpdateTag
     */
    updateTag: {
      name: "UpdateTag",
      I: UpdateTagCommand,
      O: SingleTagResponse,
      kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc vklink.blog.api.v1.tags.TagGrpcService.DeleteTag
     */
    deleteTag: {
      name: "DeleteTag",
      I: DeleteTagCommand,
      O: Empty,
      kind: MethodKind.Unary,
    },
  }
} as const;

