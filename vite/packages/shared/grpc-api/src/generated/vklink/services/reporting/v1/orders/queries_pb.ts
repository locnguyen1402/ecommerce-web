// @generated by protoc-gen-es v1.8.0 with parameter "target=ts,import_extension=none"
// @generated from file vklink/services/reporting/v1/orders/queries.proto (package vklink.reporting.api.v1.orders.queries, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3, StringValue } from "@bufbuild/protobuf";
import { ReportFilterBy } from "./enums_pb";

/**
 * @generated from message vklink.reporting.api.v1.orders.queries.GetDashboardOrderRevenueReportQuery
 */
export class GetDashboardOrderRevenueReportQuery extends Message<GetDashboardOrderRevenueReportQuery> {
  /**
   * @generated from field: google.protobuf.StringValue startDate = 1;
   */
  startDate?: string;

  /**
   * @generated from field: google.protobuf.StringValue endDate = 2;
   */
  endDate?: string;

  /**
   * @generated from field: google.protobuf.StringValue storeId = 3;
   */
  storeId?: string;

  /**
   * @generated from field: vklink.reporting.api.v1.orders.enums.ReportFilterBy filterBy = 4;
   */
  filterBy = ReportFilterBy.UNSPECIFIED;

  constructor(data?: PartialMessage<GetDashboardOrderRevenueReportQuery>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "vklink.reporting.api.v1.orders.queries.GetDashboardOrderRevenueReportQuery";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "startDate", kind: "message", T: StringValue },
    { no: 2, name: "endDate", kind: "message", T: StringValue },
    { no: 3, name: "storeId", kind: "message", T: StringValue },
    { no: 4, name: "filterBy", kind: "enum", T: proto3.getEnumType(ReportFilterBy) },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetDashboardOrderRevenueReportQuery {
    return new GetDashboardOrderRevenueReportQuery().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetDashboardOrderRevenueReportQuery {
    return new GetDashboardOrderRevenueReportQuery().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetDashboardOrderRevenueReportQuery {
    return new GetDashboardOrderRevenueReportQuery().fromJsonString(jsonString, options);
  }

  static equals(a: GetDashboardOrderRevenueReportQuery | PlainMessage<GetDashboardOrderRevenueReportQuery> | undefined, b: GetDashboardOrderRevenueReportQuery | PlainMessage<GetDashboardOrderRevenueReportQuery> | undefined): boolean {
    return proto3.util.equals(GetDashboardOrderRevenueReportQuery, a, b);
  }
}

/**
 * @generated from message vklink.reporting.api.v1.orders.queries.GetDashboardOrderRevenueByAreaReportQuery
 */
export class GetDashboardOrderRevenueByAreaReportQuery extends Message<GetDashboardOrderRevenueByAreaReportQuery> {
  /**
   * @generated from field: google.protobuf.StringValue startDate = 1;
   */
  startDate?: string;

  /**
   * @generated from field: google.protobuf.StringValue endDate = 2;
   */
  endDate?: string;

  /**
   * @generated from field: google.protobuf.StringValue storeId = 3;
   */
  storeId?: string;

  /**
   * @generated from field: vklink.reporting.api.v1.orders.enums.ReportFilterBy filterBy = 4;
   */
  filterBy = ReportFilterBy.UNSPECIFIED;

  constructor(data?: PartialMessage<GetDashboardOrderRevenueByAreaReportQuery>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "vklink.reporting.api.v1.orders.queries.GetDashboardOrderRevenueByAreaReportQuery";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "startDate", kind: "message", T: StringValue },
    { no: 2, name: "endDate", kind: "message", T: StringValue },
    { no: 3, name: "storeId", kind: "message", T: StringValue },
    { no: 4, name: "filterBy", kind: "enum", T: proto3.getEnumType(ReportFilterBy) },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetDashboardOrderRevenueByAreaReportQuery {
    return new GetDashboardOrderRevenueByAreaReportQuery().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetDashboardOrderRevenueByAreaReportQuery {
    return new GetDashboardOrderRevenueByAreaReportQuery().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetDashboardOrderRevenueByAreaReportQuery {
    return new GetDashboardOrderRevenueByAreaReportQuery().fromJsonString(jsonString, options);
  }

  static equals(a: GetDashboardOrderRevenueByAreaReportQuery | PlainMessage<GetDashboardOrderRevenueByAreaReportQuery> | undefined, b: GetDashboardOrderRevenueByAreaReportQuery | PlainMessage<GetDashboardOrderRevenueByAreaReportQuery> | undefined): boolean {
    return proto3.util.equals(GetDashboardOrderRevenueByAreaReportQuery, a, b);
  }
}

/**
 * @generated from message vklink.reporting.api.v1.orders.queries.GetDashboardOrderRevenueByCategoryReportQuery
 */
export class GetDashboardOrderRevenueByCategoryReportQuery extends Message<GetDashboardOrderRevenueByCategoryReportQuery> {
  /**
   * @generated from field: google.protobuf.StringValue startDate = 1;
   */
  startDate?: string;

  /**
   * @generated from field: google.protobuf.StringValue endDate = 2;
   */
  endDate?: string;

  /**
   * @generated from field: google.protobuf.StringValue storeId = 3;
   */
  storeId?: string;

  /**
   * @generated from field: vklink.reporting.api.v1.orders.enums.ReportFilterBy filterBy = 4;
   */
  filterBy = ReportFilterBy.UNSPECIFIED;

  constructor(data?: PartialMessage<GetDashboardOrderRevenueByCategoryReportQuery>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "vklink.reporting.api.v1.orders.queries.GetDashboardOrderRevenueByCategoryReportQuery";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "startDate", kind: "message", T: StringValue },
    { no: 2, name: "endDate", kind: "message", T: StringValue },
    { no: 3, name: "storeId", kind: "message", T: StringValue },
    { no: 4, name: "filterBy", kind: "enum", T: proto3.getEnumType(ReportFilterBy) },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetDashboardOrderRevenueByCategoryReportQuery {
    return new GetDashboardOrderRevenueByCategoryReportQuery().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetDashboardOrderRevenueByCategoryReportQuery {
    return new GetDashboardOrderRevenueByCategoryReportQuery().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetDashboardOrderRevenueByCategoryReportQuery {
    return new GetDashboardOrderRevenueByCategoryReportQuery().fromJsonString(jsonString, options);
  }

  static equals(a: GetDashboardOrderRevenueByCategoryReportQuery | PlainMessage<GetDashboardOrderRevenueByCategoryReportQuery> | undefined, b: GetDashboardOrderRevenueByCategoryReportQuery | PlainMessage<GetDashboardOrderRevenueByCategoryReportQuery> | undefined): boolean {
    return proto3.util.equals(GetDashboardOrderRevenueByCategoryReportQuery, a, b);
  }
}

/**
 * @generated from message vklink.reporting.api.v1.orders.queries.GetDashboardOrderRevenueByCouponReportQuery
 */
export class GetDashboardOrderRevenueByCouponReportQuery extends Message<GetDashboardOrderRevenueByCouponReportQuery> {
  /**
   * @generated from field: google.protobuf.StringValue startDate = 1;
   */
  startDate?: string;

  /**
   * @generated from field: google.protobuf.StringValue endDate = 2;
   */
  endDate?: string;

  /**
   * @generated from field: google.protobuf.StringValue storeId = 3;
   */
  storeId?: string;

  /**
   * @generated from field: vklink.reporting.api.v1.orders.enums.ReportFilterBy filterBy = 4;
   */
  filterBy = ReportFilterBy.UNSPECIFIED;

  constructor(data?: PartialMessage<GetDashboardOrderRevenueByCouponReportQuery>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "vklink.reporting.api.v1.orders.queries.GetDashboardOrderRevenueByCouponReportQuery";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "startDate", kind: "message", T: StringValue },
    { no: 2, name: "endDate", kind: "message", T: StringValue },
    { no: 3, name: "storeId", kind: "message", T: StringValue },
    { no: 4, name: "filterBy", kind: "enum", T: proto3.getEnumType(ReportFilterBy) },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetDashboardOrderRevenueByCouponReportQuery {
    return new GetDashboardOrderRevenueByCouponReportQuery().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetDashboardOrderRevenueByCouponReportQuery {
    return new GetDashboardOrderRevenueByCouponReportQuery().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetDashboardOrderRevenueByCouponReportQuery {
    return new GetDashboardOrderRevenueByCouponReportQuery().fromJsonString(jsonString, options);
  }

  static equals(a: GetDashboardOrderRevenueByCouponReportQuery | PlainMessage<GetDashboardOrderRevenueByCouponReportQuery> | undefined, b: GetDashboardOrderRevenueByCouponReportQuery | PlainMessage<GetDashboardOrderRevenueByCouponReportQuery> | undefined): boolean {
    return proto3.util.equals(GetDashboardOrderRevenueByCouponReportQuery, a, b);
  }
}

/**
 * @generated from message vklink.reporting.api.v1.orders.queries.GetDashboardOrderRevenueByCustomerReportQuery
 */
export class GetDashboardOrderRevenueByCustomerReportQuery extends Message<GetDashboardOrderRevenueByCustomerReportQuery> {
  /**
   * @generated from field: google.protobuf.StringValue startDate = 1;
   */
  startDate?: string;

  /**
   * @generated from field: google.protobuf.StringValue endDate = 2;
   */
  endDate?: string;

  /**
   * @generated from field: google.protobuf.StringValue storeId = 3;
   */
  storeId?: string;

  /**
   * @generated from field: vklink.reporting.api.v1.orders.enums.ReportFilterBy filterBy = 4;
   */
  filterBy = ReportFilterBy.UNSPECIFIED;

  /**
   * @generated from field: int32 rows = 5;
   */
  rows = 0;

  constructor(data?: PartialMessage<GetDashboardOrderRevenueByCustomerReportQuery>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "vklink.reporting.api.v1.orders.queries.GetDashboardOrderRevenueByCustomerReportQuery";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "startDate", kind: "message", T: StringValue },
    { no: 2, name: "endDate", kind: "message", T: StringValue },
    { no: 3, name: "storeId", kind: "message", T: StringValue },
    { no: 4, name: "filterBy", kind: "enum", T: proto3.getEnumType(ReportFilterBy) },
    { no: 5, name: "rows", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetDashboardOrderRevenueByCustomerReportQuery {
    return new GetDashboardOrderRevenueByCustomerReportQuery().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetDashboardOrderRevenueByCustomerReportQuery {
    return new GetDashboardOrderRevenueByCustomerReportQuery().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetDashboardOrderRevenueByCustomerReportQuery {
    return new GetDashboardOrderRevenueByCustomerReportQuery().fromJsonString(jsonString, options);
  }

  static equals(a: GetDashboardOrderRevenueByCustomerReportQuery | PlainMessage<GetDashboardOrderRevenueByCustomerReportQuery> | undefined, b: GetDashboardOrderRevenueByCustomerReportQuery | PlainMessage<GetDashboardOrderRevenueByCustomerReportQuery> | undefined): boolean {
    return proto3.util.equals(GetDashboardOrderRevenueByCustomerReportQuery, a, b);
  }
}

/**
 * @generated from message vklink.reporting.api.v1.orders.queries.GetDashboardOrderRevenueByDiscountReportQuery
 */
export class GetDashboardOrderRevenueByDiscountReportQuery extends Message<GetDashboardOrderRevenueByDiscountReportQuery> {
  /**
   * @generated from field: google.protobuf.StringValue startDate = 1;
   */
  startDate?: string;

  /**
   * @generated from field: google.protobuf.StringValue endDate = 2;
   */
  endDate?: string;

  /**
   * @generated from field: google.protobuf.StringValue storeId = 3;
   */
  storeId?: string;

  /**
   * @generated from field: vklink.reporting.api.v1.orders.enums.ReportFilterBy filterBy = 4;
   */
  filterBy = ReportFilterBy.UNSPECIFIED;

  constructor(data?: PartialMessage<GetDashboardOrderRevenueByDiscountReportQuery>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "vklink.reporting.api.v1.orders.queries.GetDashboardOrderRevenueByDiscountReportQuery";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "startDate", kind: "message", T: StringValue },
    { no: 2, name: "endDate", kind: "message", T: StringValue },
    { no: 3, name: "storeId", kind: "message", T: StringValue },
    { no: 4, name: "filterBy", kind: "enum", T: proto3.getEnumType(ReportFilterBy) },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetDashboardOrderRevenueByDiscountReportQuery {
    return new GetDashboardOrderRevenueByDiscountReportQuery().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetDashboardOrderRevenueByDiscountReportQuery {
    return new GetDashboardOrderRevenueByDiscountReportQuery().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetDashboardOrderRevenueByDiscountReportQuery {
    return new GetDashboardOrderRevenueByDiscountReportQuery().fromJsonString(jsonString, options);
  }

  static equals(a: GetDashboardOrderRevenueByDiscountReportQuery | PlainMessage<GetDashboardOrderRevenueByDiscountReportQuery> | undefined, b: GetDashboardOrderRevenueByDiscountReportQuery | PlainMessage<GetDashboardOrderRevenueByDiscountReportQuery> | undefined): boolean {
    return proto3.util.equals(GetDashboardOrderRevenueByDiscountReportQuery, a, b);
  }
}

/**
 * @generated from message vklink.reporting.api.v1.orders.queries.GetDashboardOrderRevenueByProductReportQuery
 */
export class GetDashboardOrderRevenueByProductReportQuery extends Message<GetDashboardOrderRevenueByProductReportQuery> {
  /**
   * @generated from field: google.protobuf.StringValue startDate = 1;
   */
  startDate?: string;

  /**
   * @generated from field: google.protobuf.StringValue endDate = 2;
   */
  endDate?: string;

  /**
   * @generated from field: google.protobuf.StringValue storeId = 3;
   */
  storeId?: string;

  /**
   * @generated from field: vklink.reporting.api.v1.orders.enums.ReportFilterBy filterBy = 4;
   */
  filterBy = ReportFilterBy.UNSPECIFIED;

  /**
   * @generated from field: int32 rows = 5;
   */
  rows = 0;

  constructor(data?: PartialMessage<GetDashboardOrderRevenueByProductReportQuery>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "vklink.reporting.api.v1.orders.queries.GetDashboardOrderRevenueByProductReportQuery";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "startDate", kind: "message", T: StringValue },
    { no: 2, name: "endDate", kind: "message", T: StringValue },
    { no: 3, name: "storeId", kind: "message", T: StringValue },
    { no: 4, name: "filterBy", kind: "enum", T: proto3.getEnumType(ReportFilterBy) },
    { no: 5, name: "rows", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetDashboardOrderRevenueByProductReportQuery {
    return new GetDashboardOrderRevenueByProductReportQuery().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetDashboardOrderRevenueByProductReportQuery {
    return new GetDashboardOrderRevenueByProductReportQuery().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetDashboardOrderRevenueByProductReportQuery {
    return new GetDashboardOrderRevenueByProductReportQuery().fromJsonString(jsonString, options);
  }

  static equals(a: GetDashboardOrderRevenueByProductReportQuery | PlainMessage<GetDashboardOrderRevenueByProductReportQuery> | undefined, b: GetDashboardOrderRevenueByProductReportQuery | PlainMessage<GetDashboardOrderRevenueByProductReportQuery> | undefined): boolean {
    return proto3.util.equals(GetDashboardOrderRevenueByProductReportQuery, a, b);
  }
}

/**
 * @generated from message vklink.reporting.api.v1.orders.queries.GetDashboardOrderRevenueByStatusReportQuery
 */
export class GetDashboardOrderRevenueByStatusReportQuery extends Message<GetDashboardOrderRevenueByStatusReportQuery> {
  /**
   * @generated from field: google.protobuf.StringValue startDate = 1;
   */
  startDate?: string;

  /**
   * @generated from field: google.protobuf.StringValue endDate = 2;
   */
  endDate?: string;

  /**
   * @generated from field: google.protobuf.StringValue storeId = 3;
   */
  storeId?: string;

  /**
   * @generated from field: vklink.reporting.api.v1.orders.enums.ReportFilterBy filterBy = 4;
   */
  filterBy = ReportFilterBy.UNSPECIFIED;

  constructor(data?: PartialMessage<GetDashboardOrderRevenueByStatusReportQuery>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "vklink.reporting.api.v1.orders.queries.GetDashboardOrderRevenueByStatusReportQuery";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "startDate", kind: "message", T: StringValue },
    { no: 2, name: "endDate", kind: "message", T: StringValue },
    { no: 3, name: "storeId", kind: "message", T: StringValue },
    { no: 4, name: "filterBy", kind: "enum", T: proto3.getEnumType(ReportFilterBy) },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetDashboardOrderRevenueByStatusReportQuery {
    return new GetDashboardOrderRevenueByStatusReportQuery().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetDashboardOrderRevenueByStatusReportQuery {
    return new GetDashboardOrderRevenueByStatusReportQuery().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetDashboardOrderRevenueByStatusReportQuery {
    return new GetDashboardOrderRevenueByStatusReportQuery().fromJsonString(jsonString, options);
  }

  static equals(a: GetDashboardOrderRevenueByStatusReportQuery | PlainMessage<GetDashboardOrderRevenueByStatusReportQuery> | undefined, b: GetDashboardOrderRevenueByStatusReportQuery | PlainMessage<GetDashboardOrderRevenueByStatusReportQuery> | undefined): boolean {
    return proto3.util.equals(GetDashboardOrderRevenueByStatusReportQuery, a, b);
  }
}

