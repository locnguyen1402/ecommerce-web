// @generated by protoc-gen-es v1.8.0 with parameter "target=ts,import_extension=none"
// @generated from file vklink/services/cms/v1/posts/responses.proto (package vklink.cms.api.v1.posts.responses, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";
import { PostStatus, PostType } from "./enums_pb";
import { ContentResponse } from "../../../../libs/common/responses/content_response_pb";
import { DocumentInfoResponse } from "../../../../libs/common/responses/document_info_response_pb";
import { ActorInfoResponse } from "../../../../libs/common/responses/actor_info_response_pb";
import { PagingInfoResponse } from "../../../../libs/common/responses/paging_info_response_pb";
import { LanguageCode } from "../../../../libs/common/enums/language_code_pb";

/**
 * @generated from message vklink.cms.api.v1.posts.responses.PostResponse
 */
export class PostResponse extends Message<PostResponse> {
  /**
   * @generated from field: string id = 1;
   */
  id = "";

  /**
   * @generated from field: string title = 2;
   */
  title = "";

  /**
   * @generated from field: string shortContent = 3;
   */
  shortContent = "";

  /**
   * @generated from field: string slug = 4;
   */
  slug = "";

  /**
   * @generated from field: vklink.cms.api.v1.posts.responses.PostType type = 5;
   */
  type = PostType.UNSPECIFIED;

  /**
   * @generated from field: vklink.cms.api.v1.posts.responses.PostStatus status = 6;
   */
  status = PostStatus.UNSPECIFIED;

  /**
   * @generated from field: repeated vklink.common.responses.ContentResponse contents = 7;
   */
  contents: ContentResponse[] = [];

  /**
   * @generated from field: vklink.common.responses.DocumentInfoResponse thumbnail = 8;
   */
  thumbnail?: DocumentInfoResponse;

  /**
   * audit fields: from 63 to 70
   *
   * @generated from field: vklink.common.responses.ActorInfoResponse creator = 61;
   */
  creator?: ActorInfoResponse;

  /**
   * @generated from field: vklink.common.responses.ActorInfoResponse updater = 62;
   */
  updater?: ActorInfoResponse;

  constructor(data?: PartialMessage<PostResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "vklink.cms.api.v1.posts.responses.PostResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "title", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "shortContent", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "slug", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "type", kind: "enum", T: proto3.getEnumType(PostType) },
    { no: 6, name: "status", kind: "enum", T: proto3.getEnumType(PostStatus) },
    { no: 7, name: "contents", kind: "message", T: ContentResponse, repeated: true },
    { no: 8, name: "thumbnail", kind: "message", T: DocumentInfoResponse },
    { no: 61, name: "creator", kind: "message", T: ActorInfoResponse },
    { no: 62, name: "updater", kind: "message", T: ActorInfoResponse },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): PostResponse {
    return new PostResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): PostResponse {
    return new PostResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): PostResponse {
    return new PostResponse().fromJsonString(jsonString, options);
  }

  static equals(a: PostResponse | PlainMessage<PostResponse> | undefined, b: PostResponse | PlainMessage<PostResponse> | undefined): boolean {
    return proto3.util.equals(PostResponse, a, b);
  }
}

/**
 * @generated from message vklink.cms.api.v1.posts.responses.SinglePostResponse
 */
export class SinglePostResponse extends Message<SinglePostResponse> {
  /**
   * @generated from field: vklink.cms.api.v1.posts.responses.PostResponse value = 1;
   */
  value?: PostResponse;

  constructor(data?: PartialMessage<SinglePostResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "vklink.cms.api.v1.posts.responses.SinglePostResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "message", T: PostResponse },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SinglePostResponse {
    return new SinglePostResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SinglePostResponse {
    return new SinglePostResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SinglePostResponse {
    return new SinglePostResponse().fromJsonString(jsonString, options);
  }

  static equals(a: SinglePostResponse | PlainMessage<SinglePostResponse> | undefined, b: SinglePostResponse | PlainMessage<SinglePostResponse> | undefined): boolean {
    return proto3.util.equals(SinglePostResponse, a, b);
  }
}

/**
 * @generated from message vklink.cms.api.v1.posts.responses.ListPostsResponse
 */
export class ListPostsResponse extends Message<ListPostsResponse> {
  /**
   * @generated from field: repeated vklink.cms.api.v1.posts.responses.PostResponse value = 1;
   */
  value: PostResponse[] = [];

  /**
   * @generated from field: vklink.common.responses.PagingInfoResponse paging = 2;
   */
  paging?: PagingInfoResponse;

  constructor(data?: PartialMessage<ListPostsResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "vklink.cms.api.v1.posts.responses.ListPostsResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "message", T: PostResponse, repeated: true },
    { no: 2, name: "paging", kind: "message", T: PagingInfoResponse },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListPostsResponse {
    return new ListPostsResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListPostsResponse {
    return new ListPostsResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListPostsResponse {
    return new ListPostsResponse().fromJsonString(jsonString, options);
  }

  static equals(a: ListPostsResponse | PlainMessage<ListPostsResponse> | undefined, b: ListPostsResponse | PlainMessage<ListPostsResponse> | undefined): boolean {
    return proto3.util.equals(ListPostsResponse, a, b);
  }
}

/**
 * @generated from message vklink.cms.api.v1.posts.responses.AdminPostDetailResponse
 */
export class AdminPostDetailResponse extends Message<AdminPostDetailResponse> {
  /**
   * @generated from field: string id = 1;
   */
  id = "";

  /**
   * @generated from field: string title = 2;
   */
  title = "";

  /**
   * @generated from field: string shortContent = 3;
   */
  shortContent = "";

  /**
   * @generated from field: string slug = 4;
   */
  slug = "";

  /**
   * @generated from field: vklink.cms.api.v1.posts.responses.PostType type = 5;
   */
  type = PostType.UNSPECIFIED;

  /**
   * @generated from field: vklink.cms.api.v1.posts.responses.PostStatus status = 6;
   */
  status = PostStatus.UNSPECIFIED;

  /**
   * @generated from field: repeated vklink.common.responses.ContentResponse contents = 7;
   */
  contents: ContentResponse[] = [];

  /**
   * @generated from field: vklink.common.responses.DocumentInfoResponse thumbnail = 8;
   */
  thumbnail?: DocumentInfoResponse;

  /**
   * @generated from field: repeated vklink.cms.api.v1.posts.responses.AdminPostDetailTranslationResponse translations = 9;
   */
  translations: AdminPostDetailTranslationResponse[] = [];

  /**
   * audit fields: from 63 to 70
   *
   * @generated from field: vklink.common.responses.ActorInfoResponse creator = 61;
   */
  creator?: ActorInfoResponse;

  /**
   * @generated from field: vklink.common.responses.ActorInfoResponse updater = 62;
   */
  updater?: ActorInfoResponse;

  constructor(data?: PartialMessage<AdminPostDetailResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "vklink.cms.api.v1.posts.responses.AdminPostDetailResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "title", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "shortContent", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "slug", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "type", kind: "enum", T: proto3.getEnumType(PostType) },
    { no: 6, name: "status", kind: "enum", T: proto3.getEnumType(PostStatus) },
    { no: 7, name: "contents", kind: "message", T: ContentResponse, repeated: true },
    { no: 8, name: "thumbnail", kind: "message", T: DocumentInfoResponse },
    { no: 9, name: "translations", kind: "message", T: AdminPostDetailTranslationResponse, repeated: true },
    { no: 61, name: "creator", kind: "message", T: ActorInfoResponse },
    { no: 62, name: "updater", kind: "message", T: ActorInfoResponse },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AdminPostDetailResponse {
    return new AdminPostDetailResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AdminPostDetailResponse {
    return new AdminPostDetailResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AdminPostDetailResponse {
    return new AdminPostDetailResponse().fromJsonString(jsonString, options);
  }

  static equals(a: AdminPostDetailResponse | PlainMessage<AdminPostDetailResponse> | undefined, b: AdminPostDetailResponse | PlainMessage<AdminPostDetailResponse> | undefined): boolean {
    return proto3.util.equals(AdminPostDetailResponse, a, b);
  }
}

/**
 * @generated from message vklink.cms.api.v1.posts.responses.AdminSinglePostDetailResponse
 */
export class AdminSinglePostDetailResponse extends Message<AdminSinglePostDetailResponse> {
  /**
   * @generated from field: vklink.cms.api.v1.posts.responses.AdminPostDetailResponse value = 1;
   */
  value?: AdminPostDetailResponse;

  constructor(data?: PartialMessage<AdminSinglePostDetailResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "vklink.cms.api.v1.posts.responses.AdminSinglePostDetailResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "message", T: AdminPostDetailResponse },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AdminSinglePostDetailResponse {
    return new AdminSinglePostDetailResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AdminSinglePostDetailResponse {
    return new AdminSinglePostDetailResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AdminSinglePostDetailResponse {
    return new AdminSinglePostDetailResponse().fromJsonString(jsonString, options);
  }

  static equals(a: AdminSinglePostDetailResponse | PlainMessage<AdminSinglePostDetailResponse> | undefined, b: AdminSinglePostDetailResponse | PlainMessage<AdminSinglePostDetailResponse> | undefined): boolean {
    return proto3.util.equals(AdminSinglePostDetailResponse, a, b);
  }
}

/**
 * @generated from message vklink.cms.api.v1.posts.responses.AdminPostDetailTranslationResponse
 */
export class AdminPostDetailTranslationResponse extends Message<AdminPostDetailTranslationResponse> {
  /**
   * data fields: from 1 to 50
   *
   * @generated from field: string Id = 1;
   */
  Id = "";

  /**
   * @generated from field: vklink.grpc.enums.LanguageCode langCode = 2;
   */
  langCode = LanguageCode.UNSPECIFIED;

  /**
   * @generated from field: string title = 3;
   */
  title = "";

  /**
   * @generated from field: string shortContent = 4;
   */
  shortContent = "";

  /**
   * @generated from field: vklink.common.responses.DocumentInfoResponse thumbnail = 5;
   */
  thumbnail?: DocumentInfoResponse;

  constructor(data?: PartialMessage<AdminPostDetailTranslationResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "vklink.cms.api.v1.posts.responses.AdminPostDetailTranslationResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "Id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "langCode", kind: "enum", T: proto3.getEnumType(LanguageCode) },
    { no: 3, name: "title", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "shortContent", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "thumbnail", kind: "message", T: DocumentInfoResponse },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AdminPostDetailTranslationResponse {
    return new AdminPostDetailTranslationResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AdminPostDetailTranslationResponse {
    return new AdminPostDetailTranslationResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AdminPostDetailTranslationResponse {
    return new AdminPostDetailTranslationResponse().fromJsonString(jsonString, options);
  }

  static equals(a: AdminPostDetailTranslationResponse | PlainMessage<AdminPostDetailTranslationResponse> | undefined, b: AdminPostDetailTranslationResponse | PlainMessage<AdminPostDetailTranslationResponse> | undefined): boolean {
    return proto3.util.equals(AdminPostDetailTranslationResponse, a, b);
  }
}

